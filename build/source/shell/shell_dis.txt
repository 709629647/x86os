
D:/mylinux/diy-x86os-master-20230506/start/start/build/source/shell/shell.elf:     file format elf32-i386
D:/mylinux/diy-x86os-master-20230506/start/start/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810009d3

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009430 memsz 0x00009fa0 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000083d2  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000065d  810083e0  810083e0  000093e0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008a40  81008a40  00009a40  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000b60  81009440  81009440  0000a430  2**5
                  ALLOC
  4 .debug_info   0002abe7  00000000  00000000  0000a430  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00009727  00000000  00000000  00035017  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000968  00000000  00000000  0003e740  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_ranges 00000030  00000000  00000000  0003f0a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00006079  00000000  00000000  0003f0d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000199a  00000000  00000000  00045151  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000023  00000000  00000000  00046aeb  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001e78  00000000  00000000  00046b10  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line_str 000013e9  00000000  00000000  00048988  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_rnglists 0000004e  00000000  00000000  00049d71  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
810083e0 l    d  .rodata	00000000 .rodata
81008a40 l    d  .data	00000000 .data
81009440 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81009440 l     O .bss	0000040c client
81008a40 l     O .data	00000004 promot
81000000 l     F .text	00000033 show_promot
81000033 l     F .text	00000037 do_clear
8100006a l     F .text	00000042 do_help
810000ac l     F .text	00000173 do_echo
8100021f l     F .text	00000239 do_less
81000458 l     F .text	00000010 do_exit
81000468 l     F .text	000000d3 do_cp
8100053b l     F .text	000000a2 do_ls
810005dd l     F .text	0000003d do_rm
81008580 l     O .rodata	00000060 cmd_list
8100061a l     F .text	000000b2 run_exec_file
810006cc l     F .text	00000048 cli_init
81000714 l     F .text	00000081 find_exec_path
81009860 l     O .bss	000000ff path.4226
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000a21 l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810014ce l     F .text	000000ad std
8100157b l     F .text	0000001b stdin_init
81001596 l     F .text	0000001b stdout_init
810015b1 l     F .text	0000001b stderr_init
81009960 l     O .bss	00000004 __sfp_recursive_mutex
81009964 l     O .bss	00000004 __sinit_recursive_mutex
81001874 l     F .text	0000000a __fp_lock
8100187e l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81009970 l     O .bss	00000004 optwhere
81009974 l     O .bss	00000004 permute_from
81009978 l     O .bss	00000004 num_nonopts
81002e53 l     F .text	0000007b reverse_argv_elements
81002ece l     F .text	00000036 permute
81002f04 l     F .text	00000031 is_option
81002f35 l     F .text	00000059 read_globals
81002f8e l     F .text	00000052 write_globals
81002fe0 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81008a60 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003dfa l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100493d l       .text	00000000 L20
810048f4 l       .text	00000000 L5
8100493a l       .text	00000000 L15
81004900 l       .text	00000000 L8
81004921 l       .text	00000000 L9
81004930 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100498f l       .text	00000000 L4
81004981 l       .text	00000000 BYTECMP
8100497c l       .text	00000000 L5
81004983 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
810099c8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004bdd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
8100625b l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810069cb l       .text	00000000 L25
81006972 l       .text	00000000 L5
810069be l       .text	00000000 L14
810069c4 l       .text	00000000 L19
81006983 l       .text	00000000 L10
810069b0 l       .text	00000000 L9
810069b3 l       .text	00000000 L15
810069fe l       .text	00000000 L26
81006a01 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006b06 l       .text	00000000 L5
81006b3e l       .text	00000000 L15
81006b10 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81006c4c l     F .text	0000000a __locale_ctype_ptr_l
81006c56 l     F .text	0000000a __get_global_locale
81006c60 l     F .text	0000000a __get_current_locale
81006c6a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
810099d0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
81007430 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810092b0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
8100776f l     F .text	0000000a __get_global_locale
81007779 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
8100785b l     F .text	0000000a __get_global_locale
81007865 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
81008014 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81008241 l     F .text	0000000a __get_global_locale
8100824b l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
8100834b l     F .text	0000000a __get_global_locale
81008355 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
810099d8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
810099dc l     O .bss	00000004 __env_recursive_mutex
8100772f g     F .text	00000040 _isatty_r
810060c4 g     F .text	00000037 cleanup_glue
810056f8 g     F .text	000000d6 _puts_r
81007815 g     F .text	00000046 _lseek_r
81000af6 g     F .text	0000001c yield
81006755 g     F .text	00000055 _siprintf_r
810072e2 g     F .text	000000ba __sflags
81000dad g     F .text	00000033 ioctl
81006c32 g     F .text	0000001a strtok_r
810056c3 g     F .text	00000035 printf
810007d7 g     F .text	00000042 run_buildin
81008255 g     F .text	00000077 _wcrtomb_r
810068ab g     F .text	0000004a __sseek
810017c3 g     F .text	00000099 __sinit
81006eaf g     F .text	00000112 __swbuf_r
81007783 g     F .text	0000005f _setlocale_r
810015cc g     F .text	0000006f __sfmoreglue
81004afb g     F .text	00000006 __malloc_unlock
810049e0 g       .text	00000000 memmove
81003b3c g     F .text	00000049 getopt_long
810017a9 g     F .text	0000001a _cleanup
81006b72 g     F .text	000000c0 __strtok_r
810072d8 g     F .text	0000000a __errno
810099e0 g     O .bss	000005c0 task_manager
81007605 g     F .text	00000020 getenv
810027c2 g     F .text	00000043 _fstat_r
810099cc g     O .bss	00000004 errno
810064ec g     F .text	0000001d __srget
81006846 g     F .text	0000000a __seofread
81000b12 g     F .text	0000002e execve
81000a97 g     F .text	0000001b getpid
810014af g     F .text	0000001f fgets
81004998 g       .text	00000000 memcpy
81006549 g     F .text	0000020c setvbuf
81001788 g     F .text	00000021 _cleanup_r
81007cda g     F .text	0000033a _svfprintf_r
810057ce g     F .text	0000001c puts
81009430 g       .data	00000000 s_bss
81003dc1 g     F .text	0000001c malloc
81005696 g     F .text	0000002d _printf_r
81000c5c g     F .text	00000021 isatty
81000a6d g     F .text	0000002a sleep
81009968 g     O .bss	00000004 optarg
81009980 g     O .bss	00000004 __malloc_top_pad
81002805 g     F .text	0000049e __sfvwrite_r
81006509 g     F .text	00000040 _sbrk_r
81008a44 g     O .data	00000004 opterr
81000d6d g     F .text	00000040 readdir
81008118 g     F .text	00000046 _read_r
81000e8c g     F .text	00000107 _fclose_r
8100122e g     F .text	00000039 fflush
81009984 g     O .bss	00000004 __malloc_max_sbrked_mem
81001267 g     F .text	00000071 _fgetc_r
81000bc4 g     F .text	0000002e lseek
810086d4 g     O .rodata	00000004 _global_impure_ptr
810057ea g     F .text	000008da _realloc_r
81006e61 g     F .text	00000025 strtol_l
81007546 g     F .text	00000057 _fputwc_r
81001888 g     F .text	00000024 __fp_lock_all
81006e86 g     F .text	00000029 strtol
810022f1 g     F .text	000004b1 _fseeko_r
810060fb g     F .text	00000160 _reclaim_reent
8100739c g     F .text	00000046 _fputc_r
81000b96 g     F .text	0000002e write
8100807a g     F .text	0000004b _putc_r
8100942c g     O .data	00000004 environ
81000c14 g     F .text	00000027 fstat
810019ed g     F .text	0000002c fprintf
81003c1a g     F .text	00000027 __getopt_long_only_r
81000ab2 g     F .text	00000028 mprint_msg
810027a2 g     F .text	00000020 fseeko
81000e2e g     F .text	0000001a _atoi_r
810078f1 g     F .text	000001b7 __ssputs_r
810022d1 g     F .text	00000020 fseek
81004c43 g     F .text	000000a8 __sfputs_r
8100996c g     O .bss	00000004 optind
8100185c g     F .text	00000006 __sfp_lock_acquire
810048b0 g       .text	00000000 memchr
81006755 g     F .text	00000055 _sprintf_r
81001d78 g     F .text	000003db _free_r
81000ce1 g     F .text	00000021 wait
810087a0 g     O .rodata	00000180 _ctype_b
810077e2 g     F .text	00000014 __locale_mb_cur_max
81006489 g     F .text	00000063 __srget_r
81007183 g     F .text	00000115 __call_exitprocs
810092ac g     O .data	00000004 __malloc_sbrk_base
810009d3 g       .text	00000000 _start
81000b68 g     F .text	0000002e read
81007aa8 g     F .text	00000232 __ssprint_r
81005650 g     F .text	00000046 _open_r
8100815e g     F .text	000000e3 strncmp
81003bf3 g     F .text	00000027 __getopt_long_r
810099a0 g     O .bss	00000028 __malloc_current_mallinfo
81000c3b g     F .text	00000021 unlink
81005696 g     F .text	0000002d _iprintf_r
81007298 g     F .text	00000040 _close_r
81006b49 g     F .text	00000029 strtok
81004945 g       .text	00000000 memcmp
81002d76 g     F .text	000000b8 _fwrite_r
81000ada g     F .text	0000001c fork
81007028 g     F .text	0000015b __swsetup_r
8100163b g     F .text	0000014d __sfp
81008ea0 g     O .data	00000408 __malloc_av_
8100186e g     F .text	00000006 __sinit_lock_release
81006802 g     F .text	00000044 __sread
81001d53 g     F .text	00000025 fread
81004af5 g     F .text	00000006 __malloc_lock
810019c4 g     F .text	00000029 _fprintf_r
81000c7d g     F .text	00000021 sbrk
810011d6 g     F .text	00000058 _fflush_r
810009e3 g     F .text	0000003e cstart
810019a5 g     F .text	0000001f fopen
81003af5 g     F .text	00000047 getopt
81004a6d g       .text	00000000 memset
81000819 g     F .text	000001ba main
81009988 g     O .bss	00000004 __malloc_max_total_mem
81006fc1 g     F .text	00000021 __swbuf
81001ade g     F .text	00000275 _fread_r
810068f5 g     F .text	00000025 __sclose
81000f93 g     F .text	0000001d fclose
81006e3c g     F .text	00000025 _strtol_r
81007625 g     F .text	000000ed _findenv_r
8100408d g     F .text	00000822 _malloc_r
81008383 g     F .text	00000043 __ascii_wctomb
81000d02 g     F .text	0000006b opendir
810019c4 g     F .text	00000029 _fiprintf_r
810083cc g     F .text	00000006 __env_unlock
810075e5 g     F .text	00000020 _findenv
81002ca3 g     F .text	00000068 _fwalk
81001351 g     F .text	0000015e _fgets_r
8100786f g     F .text	0000002a _mbtowc_r
810080c5 g     F .text	00000053 putc
81003b85 g     F .text	00000049 getopt_long_only
81002153 g     F .text	00000161 _malloc_trim_r
81006a1c g     F .text	000000a5 strcmp
81004ceb g     F .text	00000025 vfiprintf
81000c9e g     F .text	00000021 dup
810056c3 g     F .text	00000035 iprintf
810012d8 g     F .text	00000079 fgetc
810067aa g     F .text	00000058 sprintf
810099d4 g     O .bss	00000004 _PathLocale
81006fe2 g     F .text	00000046 _write_r
810077f6 g     F .text	0000001f setlocale
81005066 g     F .text	0000019b _printf_common
81008e84 g     O .data	00000004 _impure_ptr
81000fb0 g     F .text	00000226 __sflush_r
810022b4 g     F .text	0000001d _fseek_r
81007cda g     F .text	0000033a _svfiprintf_r
81006288 g     F .text	00000201 __srefill_r
81000795 g     F .text	00000042 find_buildin
81007899 g     F .text	00000058 __ascii_mbtowc
810018ac g     F .text	00000024 __fp_unlock_all
810073e2 g     F .text	0000004e fputc
81008a48 g     O .data	00000004 optopt
81003d2e g     F .text	00000093 __swhatbuf_r
81002e2e g     F .text	00000025 fwrite
81007496 g     F .text	000000b0 __fputwc
81001a19 g     F .text	000000a6 _fputs_r
81006850 g     F .text	0000005b __swrite
810092a8 g     O .data	00000004 __malloc_trim_threshold
81000e48 g     F .text	00000044 exit
810019ed g     F .text	0000002c fiprintf
81004d10 g     F .text	00000356 _vfiprintf_r
81002d0b g     F .text	0000006b _fwalk_reent
81001862 g     F .text	00000006 __sfp_lock_release
810067aa g     F .text	00000058 siprintf
81009fa0 g       .bss	00000000 e_bss
81000e14 g     F .text	0000001a atoi
81008920 g     O .rodata	00000101 _ctype_
81003bce g     F .text	00000025 __getopt_r
810018d0 g     F .text	000000d5 _fopen_r
81000cbf g     F .text	00000022 _exit
81003c41 g     F .text	000000ed __smakebuf_r
81006ad0 g       .text	00000000 strlen
81005201 g     F .text	0000044f _printf_i
81000b40 g     F .text	00000028 open
81004b01 g     F .text	000000dc __sprint_r
81006920 g       .text	00000000 strchr
81001abf g     F .text	0000001f fputs
81000de0 g     F .text	00000034 closedir
8100835f g     F .text	00000024 _wctomb_r
810083c6 g     F .text	00000006 __env_lock
81004d10 g     F .text	00000356 _vfprintf_r
810082cc g     F .text	0000007f wcrtomb
81000bf2 g     F .text	00000022 close
810092c0 g     O .data	0000016c __global_locale
81004ceb g     F .text	00000025 vfprintf
8100759d g     F .text	00000048 fputwc
81003ddd g     F .text	0000001d free
81001868 g     F .text	00000006 __sinit_lock_acquire
81007712 g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <show_promot>:
#define ESC_CMD2(Pn, cmd)		    "\x1b["#Pn#cmd
#define	ESC_COLOR_ERROR			    ESC_CMD2(31, m)	
#define	ESC_COLOR_DEFAULT		    ESC_CMD2(39, m)	
#define ESC_CLEAR_SCREEN		    ESC_CMD2(2, J)	
#define	ESC_MOVE_CURSOR(row, col)  "\x1b["#row";"#col"H"
static void show_promot(void) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 08             	sub    $0x8,%esp
    printf("%s", client.promot);
81000006:	a1 48 98 00 81       	mov    0x81009848,%eax
8100000b:	83 ec 08             	sub    $0x8,%esp
8100000e:	50                   	push   %eax
8100000f:	68 e6 83 00 81       	push   $0x810083e6
81000014:	e8 aa 56 00 00       	call   810056c3 <iprintf>
81000019:	83 c4 10             	add    $0x10,%esp
    fflush(stdout);
8100001c:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000021:	8b 40 08             	mov    0x8(%eax),%eax
81000024:	83 ec 0c             	sub    $0xc,%esp
81000027:	50                   	push   %eax
81000028:	e8 01 12 00 00       	call   8100122e <fflush>
8100002d:	83 c4 10             	add    $0x10,%esp
}
81000030:	90                   	nop
81000031:	c9                   	leave  
81000032:	c3                   	ret    

81000033 <do_clear>:
static int do_clear (int argc, char ** argv) {
81000033:	55                   	push   %ebp
81000034:	89 e5                	mov    %esp,%ebp
81000036:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
81000039:	83 ec 08             	sub    $0x8,%esp
8100003c:	68 e9 83 00 81       	push   $0x810083e9
81000041:	68 e6 83 00 81       	push   $0x810083e6
81000046:	e8 78 56 00 00       	call   810056c3 <iprintf>
8100004b:	83 c4 10             	add    $0x10,%esp
    printf("%s", ESC_MOVE_CURSOR(0, 0));
8100004e:	83 ec 08             	sub    $0x8,%esp
81000051:	68 ee 83 00 81       	push   $0x810083ee
81000056:	68 e6 83 00 81       	push   $0x810083e6
8100005b:	e8 63 56 00 00       	call   810056c3 <iprintf>
81000060:	83 c4 10             	add    $0x10,%esp
    return 0;
81000063:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000068:	c9                   	leave  
81000069:	c3                   	ret    

8100006a <do_help>:

/**
 * help鍛戒护
 */
static int do_help(int argc, char **argv) {
8100006a:	55                   	push   %ebp
8100006b:	89 e5                	mov    %esp,%ebp
8100006d:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t* start = client.cmd_start;
81000070:	a1 40 98 00 81       	mov    0x81009840,%eax
81000075:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while(start != client.cmd_end)
81000078:	eb 21                	jmp    8100009b <do_help+0x31>
    {
        printf("%s   %s\n", start->name, start->useage);
8100007a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100007d:	8b 50 04             	mov    0x4(%eax),%edx
81000080:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000083:	8b 00                	mov    (%eax),%eax
81000085:	83 ec 04             	sub    $0x4,%esp
81000088:	52                   	push   %edx
81000089:	50                   	push   %eax
8100008a:	68 f5 83 00 81       	push   $0x810083f5
8100008f:	e8 2f 56 00 00       	call   810056c3 <iprintf>
81000094:	83 c4 10             	add    $0x10,%esp
        start++;
81000097:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while(start != client.cmd_end)
8100009b:	a1 44 98 00 81       	mov    0x81009844,%eax
810000a0:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810000a3:	75 d5                	jne    8100007a <do_help+0x10>
    }
    return 0;
810000a5:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000aa:	c9                   	leave  
810000ab:	c3                   	ret    

810000ac <do_echo>:

static int do_echo(int argc, char **argv) 
{
810000ac:	55                   	push   %ebp
810000ad:	89 e5                	mov    %esp,%ebp
810000af:	81 ec 98 00 00 00    	sub    $0x98,%esp
    if(argc == 1)
810000b5:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810000b9:	75 3d                	jne    810000f8 <do_echo+0x4c>
    {
        char buf[128];
        fgets(buf, 128 - 1, stdin);
810000bb:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810000c0:	8b 40 04             	mov    0x4(%eax),%eax
810000c3:	83 ec 04             	sub    $0x4,%esp
810000c6:	50                   	push   %eax
810000c7:	6a 7f                	push   $0x7f
810000c9:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000cf:	50                   	push   %eax
810000d0:	e8 da 13 00 00       	call   810014af <fgets>
810000d5:	83 c4 10             	add    $0x10,%esp
        buf[sizeof(buf) - 1] = '\0';
810000d8:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(buf);
810000dc:	83 ec 0c             	sub    $0xc,%esp
810000df:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000e5:	50                   	push   %eax
810000e6:	e8 e3 56 00 00       	call   810057ce <puts>
810000eb:	83 c4 10             	add    $0x10,%esp
        return 0;
810000ee:	b8 00 00 00 00       	mov    $0x0,%eax
810000f3:	e9 25 01 00 00       	jmp    8100021d <do_echo+0x171>
    }
    int count = 1;
810000f8:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    optind = 1;
810000ff:	c7 05 6c 99 00 81 01 	movl   $0x1,0x8100996c
81000106:	00 00 00 
    while((ch = getopt(argc, argv, "n:h")) != -1)
81000109:	eb 7e                	jmp    81000189 <do_echo+0xdd>
    {
        switch (ch)
8100010b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100010e:	83 f8 68             	cmp    $0x68,%eax
81000111:	74 0c                	je     8100011f <do_echo+0x73>
81000113:	83 f8 6e             	cmp    $0x6e,%eax
81000116:	74 31                	je     81000149 <do_echo+0x9d>
81000118:	83 f8 3f             	cmp    $0x3f,%eax
8100011b:	74 42                	je     8100015f <do_echo+0xb3>
8100011d:	eb 69                	jmp    81000188 <do_echo+0xdc>
        {
        case 'h':
            puts("echo -- echo something");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 fe 83 00 81       	push   $0x810083fe
81000127:	e8 a2 56 00 00       	call   810057ce <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
            puts("echo [-n count] ");
8100012f:	83 ec 0c             	sub    $0xc,%esp
81000132:	68 15 84 00 81       	push   $0x81008415
81000137:	e8 92 56 00 00       	call   810057ce <puts>
8100013c:	83 c4 10             	add    $0x10,%esp
            return 0;
8100013f:	b8 00 00 00 00       	mov    $0x0,%eax
81000144:	e9 d4 00 00 00       	jmp    8100021d <do_echo+0x171>
        case 'n':
            count = atoi(optarg);
81000149:	a1 68 99 00 81       	mov    0x81009968,%eax
8100014e:	83 ec 0c             	sub    $0xc,%esp
81000151:	50                   	push   %eax
81000152:	e8 bd 0c 00 00       	call   81000e14 <atoi>
81000157:	83 c4 10             	add    $0x10,%esp
8100015a:	89 45 f4             	mov    %eax,-0xc(%ebp)
            break;
8100015d:	eb 2a                	jmp    81000189 <do_echo+0xdd>
        case '?':
        if(optarg)
8100015f:	a1 68 99 00 81       	mov    0x81009968,%eax
81000164:	85 c0                	test   %eax,%eax
81000166:	74 20                	je     81000188 <do_echo+0xdc>
            fprintf(stderr, "unknown option %s", optarg);
81000168:	8b 15 68 99 00 81    	mov    0x81009968,%edx
8100016e:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000173:	8b 40 0c             	mov    0xc(%eax),%eax
81000176:	83 ec 04             	sub    $0x4,%esp
81000179:	52                   	push   %edx
8100017a:	68 26 84 00 81       	push   $0x81008426
8100017f:	50                   	push   %eax
81000180:	e8 68 18 00 00       	call   810019ed <fiprintf>
81000185:	83 c4 10             	add    $0x10,%esp
        default:
            break;
81000188:	90                   	nop
    while((ch = getopt(argc, argv, "n:h")) != -1)
81000189:	83 ec 04             	sub    $0x4,%esp
8100018c:	68 38 84 00 81       	push   $0x81008438
81000191:	ff 75 0c             	pushl  0xc(%ebp)
81000194:	ff 75 08             	pushl  0x8(%ebp)
81000197:	e8 59 39 00 00       	call   81003af5 <getopt>
8100019c:	83 c4 10             	add    $0x10,%esp
8100019f:	89 45 ec             	mov    %eax,-0x14(%ebp)
810001a2:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a6:	0f 85 5f ff ff ff    	jne    8100010b <do_echo+0x5f>
        }
    }
    if(optind > argc - 1)
810001ac:	8b 45 08             	mov    0x8(%ebp),%eax
810001af:	8d 50 ff             	lea    -0x1(%eax),%edx
810001b2:	a1 6c 99 00 81       	mov    0x8100996c,%eax
810001b7:	39 c2                	cmp    %eax,%edx
810001b9:	7d 1a                	jge    810001d5 <do_echo+0x129>
        fprintf(stderr, "err ");
810001bb:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810001c0:	8b 40 0c             	mov    0xc(%eax),%eax
810001c3:	50                   	push   %eax
810001c4:	6a 04                	push   $0x4
810001c6:	6a 01                	push   $0x1
810001c8:	68 3c 84 00 81       	push   $0x8100843c
810001cd:	e8 5c 2c 00 00       	call   81002e2e <fwrite>
810001d2:	83 c4 10             	add    $0x10,%esp
     char * msg = argv[optind];
810001d5:	a1 6c 99 00 81       	mov    0x8100996c,%eax
810001da:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810001e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810001e4:	01 d0                	add    %edx,%eax
810001e6:	8b 00                	mov    (%eax),%eax
810001e8:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++) {
810001eb:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810001f2:	eb 12                	jmp    81000206 <do_echo+0x15a>
        puts(msg);
810001f4:	83 ec 0c             	sub    $0xc,%esp
810001f7:	ff 75 e8             	pushl  -0x18(%ebp)
810001fa:	e8 cf 55 00 00       	call   810057ce <puts>
810001ff:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++) {
81000202:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000206:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000209:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100020c:	7c e6                	jl     810001f4 <do_echo+0x148>
    }
    optind = 1;  
8100020e:	c7 05 6c 99 00 81 01 	movl   $0x1,0x8100996c
81000215:	00 00 00 
    return 0;
81000218:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100021d:	c9                   	leave  
8100021e:	c3                   	ret    

8100021f <do_less>:

static int do_less(int argc, char **argv) 
{
8100021f:	55                   	push   %ebp
81000220:	89 e5                	mov    %esp,%ebp
81000222:	81 ec 28 01 00 00    	sub    $0x128,%esp
    int line_mode = 0;
81000228:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "lh")) != -1) {
8100022f:	e9 8c 00 00 00       	jmp    810002c0 <do_less+0xa1>
        switch (ch) {
81000234:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000237:	83 f8 68             	cmp    $0x68,%eax
8100023a:	74 15                	je     81000251 <do_less+0x32>
8100023c:	83 f8 6c             	cmp    $0x6c,%eax
8100023f:	74 07                	je     81000248 <do_less+0x29>
81000241:	83 f8 3f             	cmp    $0x3f,%eax
81000244:	74 3d                	je     81000283 <do_less+0x64>
81000246:	eb 78                	jmp    810002c0 <do_less+0xa1>
            case 'l':
                line_mode = 1;
81000248:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
                break;
8100024f:	eb 6f                	jmp    810002c0 <do_less+0xa1>
            case 'h':
                puts("show file content");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 41 84 00 81       	push   $0x81008441
81000259:	e8 70 55 00 00       	call   810057ce <puts>
8100025e:	83 c4 10             	add    $0x10,%esp
                puts("less [-l] file");
81000261:	83 ec 0c             	sub    $0xc,%esp
81000264:	68 53 84 00 81       	push   $0x81008453
81000269:	e8 60 55 00 00       	call   810057ce <puts>
8100026e:	83 c4 10             	add    $0x10,%esp
                puts("-l show file line by line.");
81000271:	83 ec 0c             	sub    $0xc,%esp
81000274:	68 62 84 00 81       	push   $0x81008462
81000279:	e8 50 55 00 00       	call   810057ce <puts>
8100027e:	83 c4 10             	add    $0x10,%esp
                break;
81000281:	eb 3d                	jmp    810002c0 <do_less+0xa1>
            case '?':
                if (optarg) {
81000283:	a1 68 99 00 81       	mov    0x81009968,%eax
81000288:	85 c0                	test   %eax,%eax
8100028a:	74 20                	je     810002ac <do_less+0x8d>
                    fprintf(stderr, "Unknown option: -%s\n", optarg);
8100028c:	8b 15 68 99 00 81    	mov    0x81009968,%edx
81000292:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000297:	8b 40 0c             	mov    0xc(%eax),%eax
8100029a:	83 ec 04             	sub    $0x4,%esp
8100029d:	52                   	push   %edx
8100029e:	68 7d 84 00 81       	push   $0x8100847d
810002a3:	50                   	push   %eax
810002a4:	e8 44 17 00 00       	call   810019ed <fiprintf>
810002a9:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;        
810002ac:	c7 05 6c 99 00 81 01 	movl   $0x1,0x8100996c
810002b3:	00 00 00 
                return -1;
810002b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810002bb:	e9 96 01 00 00       	jmp    81000456 <do_less+0x237>
    while ((ch = getopt(argc, argv, "lh")) != -1) {
810002c0:	83 ec 04             	sub    $0x4,%esp
810002c3:	68 92 84 00 81       	push   $0x81008492
810002c8:	ff 75 0c             	pushl  0xc(%ebp)
810002cb:	ff 75 08             	pushl  0x8(%ebp)
810002ce:	e8 22 38 00 00       	call   81003af5 <getopt>
810002d3:	83 c4 10             	add    $0x10,%esp
810002d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002d9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810002dd:	0f 85 51 ff ff ff    	jne    81000234 <do_less+0x15>
        }
    }
    if (optind > argc - 1) {
810002e3:	8b 45 08             	mov    0x8(%ebp),%eax
810002e6:	8d 50 ff             	lea    -0x1(%eax),%edx
810002e9:	a1 6c 99 00 81       	mov    0x8100996c,%eax
810002ee:	39 c2                	cmp    %eax,%edx
810002f0:	7d 2e                	jge    81000320 <do_less+0x101>
        fprintf(stderr, "no file\n");
810002f2:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810002f7:	8b 40 0c             	mov    0xc(%eax),%eax
810002fa:	50                   	push   %eax
810002fb:	6a 08                	push   $0x8
810002fd:	6a 01                	push   $0x1
810002ff:	68 95 84 00 81       	push   $0x81008495
81000304:	e8 25 2b 00 00       	call   81002e2e <fwrite>
81000309:	83 c4 10             	add    $0x10,%esp
        optind = 1;        
8100030c:	c7 05 6c 99 00 81 01 	movl   $0x1,0x8100996c
81000313:	00 00 00 
        return -1;
81000316:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100031b:	e9 36 01 00 00       	jmp    81000456 <do_less+0x237>
    }
        
    FILE* file = fopen(argv[optind], "r");
81000320:	a1 6c 99 00 81       	mov    0x8100996c,%eax
81000325:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100032c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100032f:	01 d0                	add    %edx,%eax
81000331:	8b 00                	mov    (%eax),%eax
81000333:	83 ec 08             	sub    $0x8,%esp
81000336:	68 9e 84 00 81       	push   $0x8100849e
8100033b:	50                   	push   %eax
8100033c:	e8 64 16 00 00       	call   810019a5 <fopen>
81000341:	83 c4 10             	add    $0x10,%esp
81000344:	89 45 ec             	mov    %eax,-0x14(%ebp)
    char buf[255];
    if(!line_mode)
81000347:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100034b:	75 40                	jne    8100038d <do_less+0x16e>
    {
        while(fgets(buf, 255, file) != NULL)
8100034d:	eb 1b                	jmp    8100036a <do_less+0x14b>
        {
            fputs(buf, stdout);
8100034f:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000354:	8b 40 08             	mov    0x8(%eax),%eax
81000357:	83 ec 08             	sub    $0x8,%esp
8100035a:	50                   	push   %eax
8100035b:	8d 85 e5 fe ff ff    	lea    -0x11b(%ebp),%eax
81000361:	50                   	push   %eax
81000362:	e8 58 17 00 00       	call   81001abf <fputs>
81000367:	83 c4 10             	add    $0x10,%esp
        while(fgets(buf, 255, file) != NULL)
8100036a:	83 ec 04             	sub    $0x4,%esp
8100036d:	ff 75 ec             	pushl  -0x14(%ebp)
81000370:	68 ff 00 00 00       	push   $0xff
81000375:	8d 85 e5 fe ff ff    	lea    -0x11b(%ebp),%eax
8100037b:	50                   	push   %eax
8100037c:	e8 2e 11 00 00       	call   810014af <fgets>
81000381:	83 c4 10             	add    $0x10,%esp
81000384:	85 c0                	test   %eax,%eax
81000386:	75 c7                	jne    8100034f <do_less+0x130>
81000388:	e9 ba 00 00 00       	jmp    81000447 <do_less+0x228>
        }
    }
    else
    {
        setvbuf(stdin, NULL, _IONBF, 0);
8100038d:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000392:	8b 40 04             	mov    0x4(%eax),%eax
81000395:	6a 00                	push   $0x0
81000397:	6a 02                	push   $0x2
81000399:	6a 00                	push   $0x0
8100039b:	50                   	push   %eax
8100039c:	e8 a8 61 00 00       	call   81006549 <setvbuf>
810003a1:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 0, 0);
810003a4:	6a 00                	push   $0x0
810003a6:	6a 00                	push   $0x0
810003a8:	6a 01                	push   $0x1
810003aa:	6a 00                	push   $0x0
810003ac:	e8 fc 09 00 00       	call   81000dad <ioctl>
810003b1:	83 c4 10             	add    $0x10,%esp
        while(1)
        {
            char* b = fgets(buf, 255, file);
810003b4:	83 ec 04             	sub    $0x4,%esp
810003b7:	ff 75 ec             	pushl  -0x14(%ebp)
810003ba:	68 ff 00 00 00       	push   $0xff
810003bf:	8d 85 e5 fe ff ff    	lea    -0x11b(%ebp),%eax
810003c5:	50                   	push   %eax
810003c6:	e8 e4 10 00 00       	call   810014af <fgets>
810003cb:	83 c4 10             	add    $0x10,%esp
810003ce:	89 45 e8             	mov    %eax,-0x18(%ebp)
            if(b == NULL)
810003d1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810003d5:	74 42                	je     81000419 <do_less+0x1fa>
                break;
            fputs(buf, stdout);
810003d7:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810003dc:	8b 40 08             	mov    0x8(%eax),%eax
810003df:	83 ec 08             	sub    $0x8,%esp
810003e2:	50                   	push   %eax
810003e3:	8d 85 e5 fe ff ff    	lea    -0x11b(%ebp),%eax
810003e9:	50                   	push   %eax
810003ea:	e8 d0 16 00 00       	call   81001abf <fputs>
810003ef:	83 c4 10             	add    $0x10,%esp
            int ch;
            while ((ch = fgetc(stdin)) != 'n') {
810003f2:	eb 06                	jmp    810003fa <do_less+0x1db>
                if (ch == 'q') {
810003f4:	83 7d e4 71          	cmpl   $0x71,-0x1c(%ebp)
810003f8:	74 22                	je     8100041c <do_less+0x1fd>
            while ((ch = fgetc(stdin)) != 'n') {
810003fa:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810003ff:	8b 40 04             	mov    0x4(%eax),%eax
81000402:	83 ec 0c             	sub    $0xc,%esp
81000405:	50                   	push   %eax
81000406:	e8 cd 0e 00 00       	call   810012d8 <fgetc>
8100040b:	83 c4 10             	add    $0x10,%esp
8100040e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000411:	83 7d e4 6e          	cmpl   $0x6e,-0x1c(%ebp)
81000415:	75 dd                	jne    810003f4 <do_less+0x1d5>
        {
81000417:	eb 9b                	jmp    810003b4 <do_less+0x195>
                break;
81000419:	90                   	nop
8100041a:	eb 01                	jmp    8100041d <do_less+0x1fe>
                    goto less_quit;
8100041c:	90                   	nop
                }
            }
        }
less_quit:
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
8100041d:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000422:	8b 40 04             	mov    0x4(%eax),%eax
81000425:	68 00 04 00 00       	push   $0x400
8100042a:	6a 01                	push   $0x1
8100042c:	6a 00                	push   $0x0
8100042e:	50                   	push   %eax
8100042f:	e8 15 61 00 00       	call   81006549 <setvbuf>
81000434:	83 c4 10             	add    $0x10,%esp
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000437:	6a 00                	push   $0x0
81000439:	6a 01                	push   $0x1
8100043b:	6a 01                	push   $0x1
8100043d:	6a 00                	push   $0x0
8100043f:	e8 69 09 00 00       	call   81000dad <ioctl>
81000444:	83 c4 10             	add    $0x10,%esp
    }

    optind = 1;
81000447:	c7 05 6c 99 00 81 01 	movl   $0x1,0x8100996c
8100044e:	00 00 00 
    return 0;
81000451:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000456:	c9                   	leave  
81000457:	c3                   	ret    

81000458 <do_exit>:
static int do_exit(int argc, char** argv)
{
81000458:	55                   	push   %ebp
81000459:	89 e5                	mov    %esp,%ebp
8100045b:	83 ec 08             	sub    $0x8,%esp
     exit(0);
8100045e:	83 ec 0c             	sub    $0xc,%esp
81000461:	6a 00                	push   $0x0
81000463:	e8 e0 09 00 00       	call   81000e48 <exit>

81000468 <do_cp>:
     return 0;
}
static int do_cp(int argc, char** argv)
{
81000468:	55                   	push   %ebp
81000469:	89 e5                	mov    %esp,%ebp
8100046b:	81 ec 18 01 00 00    	sub    $0x118,%esp
    if(argc < 3)
81000471:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
81000475:	7f 1a                	jg     81000491 <do_cp+0x29>
    {
    fprintf(stderr, "src or dest not open\n");
81000477:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100047c:	8b 40 0c             	mov    0xc(%eax),%eax
8100047f:	50                   	push   %eax
81000480:	6a 15                	push   $0x15
81000482:	6a 01                	push   $0x1
81000484:	68 a0 84 00 81       	push   $0x810084a0
81000489:	e8 a0 29 00 00       	call   81002e2e <fwrite>
8100048e:	83 c4 10             	add    $0x10,%esp
    }
    FILE* from, *to;
    from = fopen(argv[1], "rb");
81000491:	8b 45 0c             	mov    0xc(%ebp),%eax
81000494:	83 c0 04             	add    $0x4,%eax
81000497:	8b 00                	mov    (%eax),%eax
81000499:	83 ec 08             	sub    $0x8,%esp
8100049c:	68 b6 84 00 81       	push   $0x810084b6
810004a1:	50                   	push   %eax
810004a2:	e8 fe 14 00 00       	call   810019a5 <fopen>
810004a7:	83 c4 10             	add    $0x10,%esp
810004aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
    to = fopen(argv[2], "wb");
810004ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810004b0:	83 c0 08             	add    $0x8,%eax
810004b3:	8b 00                	mov    (%eax),%eax
810004b5:	83 ec 08             	sub    $0x8,%esp
810004b8:	68 b9 84 00 81       	push   $0x810084b9
810004bd:	50                   	push   %eax
810004be:	e8 e2 14 00 00       	call   810019a5 <fopen>
810004c3:	83 c4 10             	add    $0x10,%esp
810004c6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    char buf[255];
    int size = 0;
810004c9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    while((size = fread(buf, 1, 255, from)) > 0)
810004d0:	eb 18                	jmp    810004ea <do_cp+0x82>
    {
        fwrite(buf, 1, size, to);
810004d2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810004d5:	ff 75 f0             	pushl  -0x10(%ebp)
810004d8:	50                   	push   %eax
810004d9:	6a 01                	push   $0x1
810004db:	8d 85 ed fe ff ff    	lea    -0x113(%ebp),%eax
810004e1:	50                   	push   %eax
810004e2:	e8 47 29 00 00       	call   81002e2e <fwrite>
810004e7:	83 c4 10             	add    $0x10,%esp
    while((size = fread(buf, 1, 255, from)) > 0)
810004ea:	ff 75 f4             	pushl  -0xc(%ebp)
810004ed:	68 ff 00 00 00       	push   $0xff
810004f2:	6a 01                	push   $0x1
810004f4:	8d 85 ed fe ff ff    	lea    -0x113(%ebp),%eax
810004fa:	50                   	push   %eax
810004fb:	e8 53 18 00 00       	call   81001d53 <fread>
81000500:	83 c4 10             	add    $0x10,%esp
81000503:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000506:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100050a:	7f c6                	jg     810004d2 <do_cp+0x6a>
    }
    // free(buf);
    if(from)
8100050c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000510:	74 0e                	je     81000520 <do_cp+0xb8>
        fclose(from);
81000512:	83 ec 0c             	sub    $0xc,%esp
81000515:	ff 75 f4             	pushl  -0xc(%ebp)
81000518:	e8 76 0a 00 00       	call   81000f93 <fclose>
8100051d:	83 c4 10             	add    $0x10,%esp
    if(to)
81000520:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000524:	74 0e                	je     81000534 <do_cp+0xcc>
        fclose(to);
81000526:	83 ec 0c             	sub    $0xc,%esp
81000529:	ff 75 f0             	pushl  -0x10(%ebp)
8100052c:	e8 62 0a 00 00       	call   81000f93 <fclose>
81000531:	83 c4 10             	add    $0x10,%esp
    return 0;
81000534:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000539:	c9                   	leave  
8100053a:	c3                   	ret    

8100053b <do_ls>:
static int do_ls(int argc, char** argv)
{
8100053b:	55                   	push   %ebp
8100053c:	89 e5                	mov    %esp,%ebp
8100053e:	83 ec 18             	sub    $0x18,%esp
    DIR* dir = opendir("temp");
81000541:	83 ec 0c             	sub    $0xc,%esp
81000544:	68 bc 84 00 81       	push   $0x810084bc
81000549:	e8 b4 07 00 00       	call   81000d02 <opendir>
8100054e:	83 c4 10             	add    $0x10,%esp
81000551:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(dir == (DIR*)0)
81000554:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000558:	75 57                	jne    810005b1 <do_ls+0x76>
    {
        fprintf(stderr, "open dir failed\n");
8100055a:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100055f:	8b 40 0c             	mov    0xc(%eax),%eax
81000562:	50                   	push   %eax
81000563:	6a 10                	push   $0x10
81000565:	6a 01                	push   $0x1
81000567:	68 c1 84 00 81       	push   $0x810084c1
8100056c:	e8 bd 28 00 00       	call   81002e2e <fwrite>
81000571:	83 c4 10             	add    $0x10,%esp
        return -1;
81000574:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000579:	eb 60                	jmp    810005db <do_ls+0xa0>
    }
    struct dirent* dirent ;
    while((dirent = readdir(dir)) != NULL){
        printf("%c %s %d\n", dirent->type == FILE_DIR ? 'd': 'f', dirent->name, dirent->size);
8100057b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100057e:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
81000584:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000587:	8d 4a 08             	lea    0x8(%edx),%ecx
8100058a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100058d:	8b 52 04             	mov    0x4(%edx),%edx
81000590:	83 fa 02             	cmp    $0x2,%edx
81000593:	75 07                	jne    8100059c <do_ls+0x61>
81000595:	ba 64 00 00 00       	mov    $0x64,%edx
8100059a:	eb 05                	jmp    810005a1 <do_ls+0x66>
8100059c:	ba 66 00 00 00       	mov    $0x66,%edx
810005a1:	50                   	push   %eax
810005a2:	51                   	push   %ecx
810005a3:	52                   	push   %edx
810005a4:	68 d2 84 00 81       	push   $0x810084d2
810005a9:	e8 15 51 00 00       	call   810056c3 <iprintf>
810005ae:	83 c4 10             	add    $0x10,%esp
    while((dirent = readdir(dir)) != NULL){
810005b1:	83 ec 0c             	sub    $0xc,%esp
810005b4:	ff 75 f4             	pushl  -0xc(%ebp)
810005b7:	e8 b1 07 00 00       	call   81000d6d <readdir>
810005bc:	83 c4 10             	add    $0x10,%esp
810005bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810005c2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005c6:	75 b3                	jne    8100057b <do_ls+0x40>

    }
    closedir(dir);
810005c8:	83 ec 0c             	sub    $0xc,%esp
810005cb:	ff 75 f4             	pushl  -0xc(%ebp)
810005ce:	e8 0d 08 00 00       	call   81000de0 <closedir>
810005d3:	83 c4 10             	add    $0x10,%esp
    return 0;
810005d6:	b8 00 00 00 00       	mov    $0x0,%eax
}
810005db:	c9                   	leave  
810005dc:	c3                   	ret    

810005dd <do_rm>:
static int do_rm(int argc, char** argv)
{
810005dd:	55                   	push   %ebp
810005de:	89 e5                	mov    %esp,%ebp
810005e0:	83 ec 08             	sub    $0x8,%esp
    if(argc < 2)
810005e3:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810005e7:	7f 1a                	jg     81000603 <do_rm+0x26>
    {
    fprintf(stderr, "no path\n");
810005e9:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810005ee:	8b 40 0c             	mov    0xc(%eax),%eax
810005f1:	50                   	push   %eax
810005f2:	6a 08                	push   $0x8
810005f4:	6a 01                	push   $0x1
810005f6:	68 dc 84 00 81       	push   $0x810084dc
810005fb:	e8 2e 28 00 00       	call   81002e2e <fwrite>
81000600:	83 c4 10             	add    $0x10,%esp
    }
    unlink(argv[1]);
81000603:	8b 45 0c             	mov    0xc(%ebp),%eax
81000606:	83 c0 04             	add    $0x4,%eax
81000609:	8b 00                	mov    (%eax),%eax
8100060b:	83 ec 0c             	sub    $0xc,%esp
8100060e:	50                   	push   %eax
8100060f:	e8 27 06 00 00       	call   81000c3b <unlink>
81000614:	83 c4 10             	add    $0x10,%esp
}
81000617:	90                   	nop
81000618:	c9                   	leave  
81000619:	c3                   	ret    

8100061a <run_exec_file>:
        .useage = "echo -- echo something",
        .do_func = do_exit,
    }
};

static void run_exec_file (const char * path, int argc, char ** argv) {
8100061a:	55                   	push   %ebp
8100061b:	89 e5                	mov    %esp,%ebp
8100061d:	83 ec 18             	sub    $0x18,%esp
    int pid = fork();
81000620:	e8 b5 04 00 00       	call   81000ada <fork>
81000625:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (pid < 0) {
81000628:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100062c:	79 1e                	jns    8100064c <run_exec_file+0x32>
        fprintf(stderr, "fork failed: %s", path);
8100062e:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000633:	8b 40 0c             	mov    0xc(%eax),%eax
81000636:	83 ec 04             	sub    $0x4,%esp
81000639:	ff 75 08             	pushl  0x8(%ebp)
8100063c:	68 e0 85 00 81       	push   $0x810085e0
81000641:	50                   	push   %eax
81000642:	e8 a6 13 00 00       	call   810019ed <fiprintf>
81000647:	83 c4 10             	add    $0x10,%esp
    } else {
        int status;
        int pid = wait(&status);
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
    }
}
8100064a:	eb 7d                	jmp    810006c9 <run_exec_file+0xaf>
    } else if (pid == 0) {
8100064c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000650:	75 42                	jne    81000694 <run_exec_file+0x7a>
        int err = execve(path, argv, (char * const *)0);
81000652:	83 ec 04             	sub    $0x4,%esp
81000655:	6a 00                	push   $0x0
81000657:	ff 75 10             	pushl  0x10(%ebp)
8100065a:	ff 75 08             	pushl  0x8(%ebp)
8100065d:	e8 b0 04 00 00       	call   81000b12 <execve>
81000662:	83 c4 10             	add    $0x10,%esp
81000665:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (err < 0) {
81000668:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100066c:	79 1c                	jns    8100068a <run_exec_file+0x70>
            fprintf(stderr, "exec failed: %s", path);
8100066e:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000673:	8b 40 0c             	mov    0xc(%eax),%eax
81000676:	83 ec 04             	sub    $0x4,%esp
81000679:	ff 75 08             	pushl  0x8(%ebp)
8100067c:	68 f0 85 00 81       	push   $0x810085f0
81000681:	50                   	push   %eax
81000682:	e8 66 13 00 00       	call   810019ed <fiprintf>
81000687:	83 c4 10             	add    $0x10,%esp
        exit(-1);
8100068a:	83 ec 0c             	sub    $0xc,%esp
8100068d:	6a ff                	push   $0xffffffff
8100068f:	e8 b4 07 00 00       	call   81000e48 <exit>
        int pid = wait(&status);
81000694:	83 ec 0c             	sub    $0xc,%esp
81000697:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100069a:	50                   	push   %eax
8100069b:	e8 41 06 00 00       	call   81000ce1 <wait>
810006a0:	83 c4 10             	add    $0x10,%esp
810006a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
810006a6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810006a9:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810006ae:	8b 40 0c             	mov    0xc(%eax),%eax
810006b1:	83 ec 0c             	sub    $0xc,%esp
810006b4:	ff 75 f0             	pushl  -0x10(%ebp)
810006b7:	52                   	push   %edx
810006b8:	ff 75 08             	pushl  0x8(%ebp)
810006bb:	68 00 86 00 81       	push   $0x81008600
810006c0:	50                   	push   %eax
810006c1:	e8 27 13 00 00       	call   810019ed <fiprintf>
810006c6:	83 c4 20             	add    $0x20,%esp
}
810006c9:	90                   	nop
810006ca:	c9                   	leave  
810006cb:	c3                   	ret    

810006cc <cli_init>:
static void cli_init(const char * promot, const cli_cmd_t * cmd_list, int cnt) {
810006cc:	55                   	push   %ebp
810006cd:	89 e5                	mov    %esp,%ebp
810006cf:	83 ec 08             	sub    $0x8,%esp
    client.promot = promot;
810006d2:	8b 45 08             	mov    0x8(%ebp),%eax
810006d5:	a3 48 98 00 81       	mov    %eax,0x81009848
    
    memset(client.curr_input, 0, CLI_INPUT_SIZE);
810006da:	83 ec 04             	sub    $0x4,%esp
810006dd:	68 00 04 00 00       	push   $0x400
810006e2:	6a 00                	push   $0x0
810006e4:	68 40 94 00 81       	push   $0x81009440
810006e9:	e8 7f 43 00 00       	call   81004a6d <memset>
810006ee:	83 c4 10             	add    $0x10,%esp
    
    client.cmd_start = cmd_list;
810006f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810006f4:	a3 40 98 00 81       	mov    %eax,0x81009840
    client.cmd_end = cmd_list + cnt;
810006f9:	8b 55 10             	mov    0x10(%ebp),%edx
810006fc:	89 d0                	mov    %edx,%eax
810006fe:	01 c0                	add    %eax,%eax
81000700:	01 d0                	add    %edx,%eax
81000702:	c1 e0 02             	shl    $0x2,%eax
81000705:	89 c2                	mov    %eax,%edx
81000707:	8b 45 0c             	mov    0xc(%ebp),%eax
8100070a:	01 d0                	add    %edx,%eax
8100070c:	a3 44 98 00 81       	mov    %eax,0x81009844
}
81000711:	90                   	nop
81000712:	c9                   	leave  
81000713:	c3                   	ret    

81000714 <find_exec_path>:
static const char * find_exec_path (const char * file_name) {
81000714:	55                   	push   %ebp
81000715:	89 e5                	mov    %esp,%ebp
81000717:	83 ec 18             	sub    $0x18,%esp
    int fd = open(file_name, 0);
8100071a:	83 ec 08             	sub    $0x8,%esp
8100071d:	6a 00                	push   $0x0
8100071f:	ff 75 08             	pushl  0x8(%ebp)
81000722:	e8 19 04 00 00       	call   81000b40 <open>
81000727:	83 c4 10             	add    $0x10,%esp
8100072a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    static char path[255];
    if (fd < 0) {
8100072d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000731:	79 4f                	jns    81000782 <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
81000733:	83 ec 04             	sub    $0x4,%esp
81000736:	ff 75 08             	pushl  0x8(%ebp)
81000739:	68 1d 86 00 81       	push   $0x8100861d
8100073e:	68 60 98 00 81       	push   $0x81009860
81000743:	e8 62 60 00 00       	call   810067aa <siprintf>
81000748:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
8100074b:	83 ec 08             	sub    $0x8,%esp
8100074e:	6a 00                	push   $0x0
81000750:	68 60 98 00 81       	push   $0x81009860
81000755:	e8 e6 03 00 00       	call   81000b40 <open>
8100075a:	83 c4 10             	add    $0x10,%esp
8100075d:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if(fd < 0)
81000760:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000764:	79 07                	jns    8100076d <find_exec_path+0x59>
        {
            return (const char*)0;
81000766:	b8 00 00 00 00       	mov    $0x0,%eax
8100076b:	eb 26                	jmp    81000793 <find_exec_path+0x7f>
        }
        close(fd);
8100076d:	83 ec 0c             	sub    $0xc,%esp
81000770:	ff 75 f4             	pushl  -0xc(%ebp)
81000773:	e8 7a 04 00 00       	call   81000bf2 <close>
81000778:	83 c4 10             	add    $0x10,%esp
        return path;
8100077b:	b8 60 98 00 81       	mov    $0x81009860,%eax
81000780:	eb 11                	jmp    81000793 <find_exec_path+0x7f>
    }

    close(fd);
81000782:	83 ec 0c             	sub    $0xc,%esp
81000785:	ff 75 f4             	pushl  -0xc(%ebp)
81000788:	e8 65 04 00 00       	call   81000bf2 <close>
8100078d:	83 c4 10             	add    $0x10,%esp
    return file_name;
81000790:	8b 45 08             	mov    0x8(%ebp),%eax
}
81000793:	c9                   	leave  
81000794:	c3                   	ret    

81000795 <find_buildin>:
cli_cmd_t* find_buildin(char* s){
81000795:	55                   	push   %ebp
81000796:	89 e5                	mov    %esp,%ebp
81000798:	83 ec 18             	sub    $0x18,%esp
    for(cli_cmd_t* start = client.cmd_start; start != client.cmd_end; ++start)
8100079b:	a1 40 98 00 81       	mov    0x81009840,%eax
810007a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810007a3:	eb 21                	jmp    810007c6 <find_buildin+0x31>
    {
        if(strcmp(s, start->name) == 0)
810007a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a8:	8b 00                	mov    (%eax),%eax
810007aa:	83 ec 08             	sub    $0x8,%esp
810007ad:	50                   	push   %eax
810007ae:	ff 75 08             	pushl  0x8(%ebp)
810007b1:	e8 66 62 00 00       	call   81006a1c <strcmp>
810007b6:	83 c4 10             	add    $0x10,%esp
810007b9:	85 c0                	test   %eax,%eax
810007bb:	75 05                	jne    810007c2 <find_buildin+0x2d>
            return start;
810007bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007c0:	eb 13                	jmp    810007d5 <find_buildin+0x40>
    for(cli_cmd_t* start = client.cmd_start; start != client.cmd_end; ++start)
810007c2:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810007c6:	a1 44 98 00 81       	mov    0x81009844,%eax
810007cb:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810007ce:	75 d5                	jne    810007a5 <find_buildin+0x10>
    }
    return (cli_cmd_t*) 0;   
810007d0:	b8 00 00 00 00       	mov    $0x0,%eax
}
810007d5:	c9                   	leave  
810007d6:	c3                   	ret    

810007d7 <run_buildin>:

int  run_buildin(cli_cmd_t* cmd, int argc, char**argv)
{
810007d7:	55                   	push   %ebp
810007d8:	89 e5                	mov    %esp,%ebp
810007da:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810007dd:	8b 45 08             	mov    0x8(%ebp),%eax
810007e0:	8b 40 08             	mov    0x8(%eax),%eax
810007e3:	83 ec 08             	sub    $0x8,%esp
810007e6:	ff 75 10             	pushl  0x10(%ebp)
810007e9:	ff 75 0c             	pushl  0xc(%ebp)
810007ec:	ff d0                	call   *%eax
810007ee:	83 c4 10             	add    $0x10,%esp
810007f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(ret < 0)
810007f4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007f8:	79 1c                	jns    81000816 <run_buildin+0x3f>
        fprintf(stderr, "err : %d\n", ret);
810007fa:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810007ff:	8b 40 0c             	mov    0xc(%eax),%eax
81000802:	83 ec 04             	sub    $0x4,%esp
81000805:	ff 75 f4             	pushl  -0xc(%ebp)
81000808:	68 24 86 00 81       	push   $0x81008624
8100080d:	50                   	push   %eax
8100080e:	e8 da 11 00 00       	call   810019ed <fiprintf>
81000813:	83 c4 10             	add    $0x10,%esp
}
81000816:	90                   	nop
81000817:	c9                   	leave  
81000818:	c3                   	ret    

81000819 <main>:
int main (int argc, char **argv) {
81000819:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100081d:	83 e4 f0             	and    $0xfffffff0,%esp
81000820:	ff 71 fc             	pushl  -0x4(%ecx)
81000823:	55                   	push   %ebp
81000824:	89 e5                	mov    %esp,%ebp
81000826:	51                   	push   %ecx
81000827:	83 ec 54             	sub    $0x54,%esp
8100082a:	89 c8                	mov    %ecx,%eax
	open(argv[0], 0);
8100082c:	8b 40 04             	mov    0x4(%eax),%eax
8100082f:	8b 00                	mov    (%eax),%eax
81000831:	83 ec 08             	sub    $0x8,%esp
81000834:	6a 00                	push   $0x0
81000836:	50                   	push   %eax
81000837:	e8 04 03 00 00       	call   81000b40 <open>
8100083c:	83 c4 10             	add    $0x10,%esp
    dup(0);     
8100083f:	83 ec 0c             	sub    $0xc,%esp
81000842:	6a 00                	push   $0x0
81000844:	e8 55 04 00 00       	call   81000c9e <dup>
81000849:	83 c4 10             	add    $0x10,%esp
    dup(0);     
8100084c:	83 ec 0c             	sub    $0xc,%esp
8100084f:	6a 00                	push   $0x0
81000851:	e8 48 04 00 00       	call   81000c9e <dup>
81000856:	83 c4 10             	add    $0x10,%esp

   	cli_init(promot, cmd_list, sizeof(cmd_list) / sizeof(cli_cmd_t));
81000859:	a1 40 8a 00 81       	mov    0x81008a40,%eax
8100085e:	83 ec 04             	sub    $0x4,%esp
81000861:	6a 08                	push   $0x8
81000863:	68 80 85 00 81       	push   $0x81008580
81000868:	50                   	push   %eax
81000869:	e8 5e fe ff ff       	call   810006cc <cli_init>
8100086e:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        show_promot();
81000871:	e8 8a f7 ff ff       	call   81000000 <show_promot>
        char* str = fgets(client.curr_input, CLI_INPUT_SIZE, stdin);
81000876:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100087b:	8b 40 04             	mov    0x4(%eax),%eax
8100087e:	83 ec 04             	sub    $0x4,%esp
81000881:	50                   	push   %eax
81000882:	68 00 04 00 00       	push   $0x400
81000887:	68 40 94 00 81       	push   $0x81009440
8100088c:	e8 1e 0c 00 00       	call   810014af <fgets>
81000891:	83 c4 10             	add    $0x10,%esp
81000894:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (str == (char *)0) {
81000897:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100089b:	75 0a                	jne    810008a7 <main+0x8e>
        }
        
        fprintf(stderr, ESC_COLOR_ERROR"unknown err %s\n"ESC_COLOR_DEFAULT, argv[0]);
    }

    return 0;
8100089d:	b8 00 00 00 00       	mov    $0x0,%eax
810008a2:	e9 24 01 00 00       	jmp    810009cb <main+0x1b2>
        char* c = strchr(client.curr_input, '\n');
810008a7:	83 ec 08             	sub    $0x8,%esp
810008aa:	6a 0a                	push   $0xa
810008ac:	68 40 94 00 81       	push   $0x81009440
810008b1:	e8 6a 60 00 00       	call   81006920 <strchr>
810008b6:	83 c4 10             	add    $0x10,%esp
810008b9:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if(c)
810008bc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810008c0:	74 06                	je     810008c8 <main+0xaf>
            *c = '\0';
810008c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810008c5:	c6 00 00             	movb   $0x0,(%eax)
        c = strchr(client.curr_input, '\r');
810008c8:	83 ec 08             	sub    $0x8,%esp
810008cb:	6a 0d                	push   $0xd
810008cd:	68 40 94 00 81       	push   $0x81009440
810008d2:	e8 49 60 00 00       	call   81006920 <strchr>
810008d7:	83 c4 10             	add    $0x10,%esp
810008da:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if(c)
810008dd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810008e1:	74 06                	je     810008e9 <main+0xd0>
            *c = '\0';
810008e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810008e6:	c6 00 00             	movb   $0x0,(%eax)
        const char* space = " ";
810008e9:	c7 45 e4 2e 86 00 81 	movl   $0x8100862e,-0x1c(%ebp)
        int argc = 0;
810008f0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        memset(argv, 0, sizeof(argv));
810008f7:	83 ec 04             	sub    $0x4,%esp
810008fa:	6a 28                	push   $0x28
810008fc:	6a 00                	push   $0x0
810008fe:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000901:	50                   	push   %eax
81000902:	e8 66 41 00 00       	call   81004a6d <memset>
81000907:	83 c4 10             	add    $0x10,%esp
        char* token = strtok(client.curr_input, space);
8100090a:	83 ec 08             	sub    $0x8,%esp
8100090d:	ff 75 e4             	pushl  -0x1c(%ebp)
81000910:	68 40 94 00 81       	push   $0x81009440
81000915:	e8 2f 62 00 00       	call   81006b49 <strtok>
8100091a:	83 c4 10             	add    $0x10,%esp
8100091d:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while(token)
81000920:	eb 23                	jmp    81000945 <main+0x12c>
            argv[argc++] = token;
81000922:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000925:	8d 50 01             	lea    0x1(%eax),%edx
81000928:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100092b:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100092e:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
            token = strtok(NULL, space);
81000932:	83 ec 08             	sub    $0x8,%esp
81000935:	ff 75 e4             	pushl  -0x1c(%ebp)
81000938:	6a 00                	push   $0x0
8100093a:	e8 0a 62 00 00       	call   81006b49 <strtok>
8100093f:	83 c4 10             	add    $0x10,%esp
81000942:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while(token)
81000945:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000949:	75 d7                	jne    81000922 <main+0x109>
        cli_cmd_t* cmd = find_buildin(argv[0]);
8100094b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100094e:	83 ec 0c             	sub    $0xc,%esp
81000951:	50                   	push   %eax
81000952:	e8 3e fe ff ff       	call   81000795 <find_buildin>
81000957:	83 c4 10             	add    $0x10,%esp
8100095a:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if(cmd)
8100095d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000961:	74 17                	je     8100097a <main+0x161>
            run_buildin(cmd, argc, argv);
81000963:	83 ec 04             	sub    $0x4,%esp
81000966:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000969:	50                   	push   %eax
8100096a:	ff 75 f4             	pushl  -0xc(%ebp)
8100096d:	ff 75 e0             	pushl  -0x20(%ebp)
81000970:	e8 62 fe ff ff       	call   810007d7 <run_buildin>
81000975:	83 c4 10             	add    $0x10,%esp
            continue;
81000978:	eb 4c                	jmp    810009c6 <main+0x1ad>
            const char * path = find_exec_path(argv[0]);
8100097a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100097d:	83 ec 0c             	sub    $0xc,%esp
81000980:	50                   	push   %eax
81000981:	e8 8e fd ff ff       	call   81000714 <find_exec_path>
81000986:	83 c4 10             	add    $0x10,%esp
81000989:	89 45 dc             	mov    %eax,-0x24(%ebp)
            if (path) {
8100098c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000990:	74 17                	je     810009a9 <main+0x190>
                run_exec_file(path, argc, argv);
81000992:	83 ec 04             	sub    $0x4,%esp
81000995:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000998:	50                   	push   %eax
81000999:	ff 75 f4             	pushl  -0xc(%ebp)
8100099c:	ff 75 dc             	pushl  -0x24(%ebp)
8100099f:	e8 76 fc ff ff       	call   8100061a <run_exec_file>
810009a4:	83 c4 10             	add    $0x10,%esp
                continue;
810009a7:	eb 1d                	jmp    810009c6 <main+0x1ad>
        fprintf(stderr, ESC_COLOR_ERROR"unknown err %s\n"ESC_COLOR_DEFAULT, argv[0]);
810009a9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810009ac:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810009b1:	8b 40 0c             	mov    0xc(%eax),%eax
810009b4:	83 ec 04             	sub    $0x4,%esp
810009b7:	52                   	push   %edx
810009b8:	68 30 86 00 81       	push   $0x81008630
810009bd:	50                   	push   %eax
810009be:	e8 2a 10 00 00       	call   810019ed <fiprintf>
810009c3:	83 c4 10             	add    $0x10,%esp
    for (;;) {
810009c6:	e9 a6 fe ff ff       	jmp    81000871 <main+0x58>
810009cb:	8b 4d fc             	mov    -0x4(%ebp),%ecx
810009ce:	c9                   	leave  
810009cf:	8d 61 fc             	lea    -0x4(%ecx),%esp
810009d2:	c3                   	ret    

810009d3 <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
810009d3:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
810009d6:	8e d8                	mov    %eax,%ds
    mov %ax, %es
810009d8:	8e c0                	mov    %eax,%es
    mov %ax, %fs
810009da:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
810009dc:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
810009de:	e9 00 00 00 00       	jmp    810009e3 <cstart>

810009e3 <cstart>:
#include <stdlib.h>
int main(int argc, char** argv);

extern uint8_t s_bss[], e_bss[];
void cstart(int argc, char** argv)
{
810009e3:	55                   	push   %ebp
810009e4:	89 e5                	mov    %esp,%ebp
810009e6:	83 ec 18             	sub    $0x18,%esp
    
    uint8_t * start = s_bss;
810009e9:	c7 45 f4 30 94 00 81 	movl   $0x81009430,-0xc(%ebp)
    while (start < e_bss) {
810009f0:	eb 0c                	jmp    810009fe <cstart+0x1b>
        *start++ = 0;
810009f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009f5:	8d 50 01             	lea    0x1(%eax),%edx
810009f8:	89 55 f4             	mov    %edx,-0xc(%ebp)
810009fb:	c6 00 00             	movb   $0x0,(%eax)
    while (start < e_bss) {
810009fe:	81 7d f4 a0 9f 00 81 	cmpl   $0x81009fa0,-0xc(%ebp)
81000a05:	72 eb                	jb     810009f2 <cstart+0xf>
    }

    exit(main(argc, argv));
81000a07:	83 ec 08             	sub    $0x8,%esp
81000a0a:	ff 75 0c             	pushl  0xc(%ebp)
81000a0d:	ff 75 08             	pushl  0x8(%ebp)
81000a10:	e8 04 fe ff ff       	call   81000819 <main>
81000a15:	83 c4 10             	add    $0x10,%esp
81000a18:	83 ec 0c             	sub    $0xc,%esp
81000a1b:	50                   	push   %eax
81000a1c:	e8 27 04 00 00       	call   81000e48 <exit>

81000a21 <sys_call>:
    uint32_t arg2;
    uint32_t arg3;
}sys_arg_t;

static inline int sys_call(sys_arg_t* args)
{
81000a21:	55                   	push   %ebp
81000a22:	89 e5                	mov    %esp,%ebp
81000a24:	57                   	push   %edi
81000a25:	56                   	push   %esi
81000a26:	53                   	push   %ebx
81000a27:	83 ec 10             	sub    $0x10,%esp
	uint32_t addr[] = {0, SYSTEM_SELECTOR | 0};
81000a2a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000a31:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg2]\n\t"
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[a])":"=a"(ret)
        :[arg3]"r"(args->arg3), [arg2]"r"(args->arg2),
81000a38:	8b 45 08             	mov    0x8(%ebp),%eax
81000a3b:	8b 40 10             	mov    0x10(%eax),%eax
81000a3e:	8b 55 08             	mov    0x8(%ebp),%edx
81000a41:	8b 52 0c             	mov    0xc(%edx),%edx
        [arg1]"r"(args->arg1),[arg0]"r"(args->arg0),[id]"r"(args->id),[a]"r"(addr));
81000a44:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000a47:	8b 49 08             	mov    0x8(%ecx),%ecx
81000a4a:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000a4d:	8b 5b 04             	mov    0x4(%ebx),%ebx
81000a50:	8b 75 08             	mov    0x8(%ebp),%esi
81000a53:	8b 36                	mov    (%esi),%esi
	__asm__ __volatile__(
81000a55:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000a58:	50                   	push   %eax
81000a59:	52                   	push   %edx
81000a5a:	51                   	push   %ecx
81000a5b:	53                   	push   %ebx
81000a5c:	56                   	push   %esi
81000a5d:	ff 1f                	lcall  *(%edi)
81000a5f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return ret;
81000a62:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000a65:	83 c4 10             	add    $0x10,%esp
81000a68:	5b                   	pop    %ebx
81000a69:	5e                   	pop    %esi
81000a6a:	5f                   	pop    %edi
81000a6b:	5d                   	pop    %ebp
81000a6c:	c3                   	ret    

81000a6d <sleep>:
#include "lib_syscall.h"

void sleep (int ms)
{
81000a6d:	55                   	push   %ebp
81000a6e:	89 e5                	mov    %esp,%ebp
81000a70:	83 ec 20             	sub    $0x20,%esp
    if(ms < 0)
81000a73:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000a77:	78 1b                	js     81000a94 <sleep+0x27>
        return;
    sys_arg_t args;
    args.id = SYS_SLEEP;
81000a79:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000a80:	8b 45 08             	mov    0x8(%ebp),%eax
81000a83:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000a86:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a89:	50                   	push   %eax
81000a8a:	e8 92 ff ff ff       	call   81000a21 <sys_call>
81000a8f:	83 c4 04             	add    $0x4,%esp
81000a92:	eb 01                	jmp    81000a95 <sleep+0x28>
        return;
81000a94:	90                   	nop
}
81000a95:	c9                   	leave  
81000a96:	c3                   	ret    

81000a97 <getpid>:

uint32_t getpid(void)
{
81000a97:	55                   	push   %ebp
81000a98:	89 e5                	mov    %esp,%ebp
81000a9a:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_GETPID;
81000a9d:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000aa4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aa7:	50                   	push   %eax
81000aa8:	e8 74 ff ff ff       	call   81000a21 <sys_call>
81000aad:	83 c4 04             	add    $0x4,%esp
}
81000ab0:	c9                   	leave  
81000ab1:	c3                   	ret    

81000ab2 <mprint_msg>:

void mprint_msg(char* fmt, int value)
{
81000ab2:	55                   	push   %ebp
81000ab3:	89 e5                	mov    %esp,%ebp
81000ab5:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_PRINTMSG;
81000ab8:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (uint32_t)fmt;
81000abf:	8b 45 08             	mov    0x8(%ebp),%eax
81000ac2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (uint32_t)value;
81000ac5:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ac8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000acb:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ace:	50                   	push   %eax
81000acf:	e8 4d ff ff ff       	call   81000a21 <sys_call>
81000ad4:	83 c4 04             	add    $0x4,%esp
}
81000ad7:	90                   	nop
81000ad8:	c9                   	leave  
81000ad9:	c3                   	ret    

81000ada <fork>:

int fork(void)
{
81000ada:	55                   	push   %ebp
81000adb:	89 e5                	mov    %esp,%ebp
81000add:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_FORK;
81000ae0:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    sys_call(&args);
81000ae7:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aea:	50                   	push   %eax
81000aeb:	e8 31 ff ff ff       	call   81000a21 <sys_call>
81000af0:	83 c4 04             	add    $0x4,%esp
}
81000af3:	90                   	nop
81000af4:	c9                   	leave  
81000af5:	c3                   	ret    

81000af6 <yield>:

int yield(void)
{
81000af6:	55                   	push   %ebp
81000af7:	89 e5                	mov    %esp,%ebp
81000af9:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_YIELD;
81000afc:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    sys_call(&args);
81000b03:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b06:	50                   	push   %eax
81000b07:	e8 15 ff ff ff       	call   81000a21 <sys_call>
81000b0c:	83 c4 04             	add    $0x4,%esp
}
81000b0f:	90                   	nop
81000b10:	c9                   	leave  
81000b11:	c3                   	ret    

81000b12 <execve>:

int execve(const char*name , char* const* argv, char* const* env)
{
81000b12:	55                   	push   %ebp
81000b13:	89 e5                	mov    %esp,%ebp
81000b15:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_EXECVE;
81000b18:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000b1f:	8b 45 08             	mov    0x8(%ebp),%eax
81000b22:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000b25:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b28:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000b2b:	8b 45 10             	mov    0x10(%ebp),%eax
81000b2e:	89 45 f8             	mov    %eax,-0x8(%ebp)
    sys_call(&args);
81000b31:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b34:	50                   	push   %eax
81000b35:	e8 e7 fe ff ff       	call   81000a21 <sys_call>
81000b3a:	83 c4 04             	add    $0x4,%esp
}
81000b3d:	90                   	nop
81000b3e:	c9                   	leave  
81000b3f:	c3                   	ret    

81000b40 <open>:

int open(const char* name, int flag, ...)
{
81000b40:	55                   	push   %ebp
81000b41:	89 e5                	mov    %esp,%ebp
81000b43:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_OPEN;
81000b46:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000b4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b50:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flag;
81000b53:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b56:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000b59:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b5c:	50                   	push   %eax
81000b5d:	e8 bf fe ff ff       	call   81000a21 <sys_call>
81000b62:	83 c4 04             	add    $0x4,%esp
}
81000b65:	90                   	nop
81000b66:	c9                   	leave  
81000b67:	c3                   	ret    

81000b68 <read>:
int read(int fd, char* buf, int size)
{
81000b68:	55                   	push   %ebp
81000b69:	89 e5                	mov    %esp,%ebp
81000b6b:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_READ;
81000b6e:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = fd;
81000b75:	8b 45 08             	mov    0x8(%ebp),%eax
81000b78:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)buf;
81000b7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b7e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = size;
81000b81:	8b 45 10             	mov    0x10(%ebp),%eax
81000b84:	89 45 f8             	mov    %eax,-0x8(%ebp)
    sys_call(&args);
81000b87:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b8a:	50                   	push   %eax
81000b8b:	e8 91 fe ff ff       	call   81000a21 <sys_call>
81000b90:	83 c4 04             	add    $0x4,%esp
}
81000b93:	90                   	nop
81000b94:	c9                   	leave  
81000b95:	c3                   	ret    

81000b96 <write>:
int write(int fd, char* buf, int size)
{
81000b96:	55                   	push   %ebp
81000b97:	89 e5                	mov    %esp,%ebp
81000b99:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_WRITE;
81000b9c:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = fd;
81000ba3:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)buf;
81000ba9:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bac:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = size;
81000baf:	8b 45 10             	mov    0x10(%ebp),%eax
81000bb2:	89 45 f8             	mov    %eax,-0x8(%ebp)
    sys_call(&args);
81000bb5:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bb8:	50                   	push   %eax
81000bb9:	e8 63 fe ff ff       	call   81000a21 <sys_call>
81000bbe:	83 c4 04             	add    $0x4,%esp
}
81000bc1:	90                   	nop
81000bc2:	c9                   	leave  
81000bc3:	c3                   	ret    

81000bc4 <lseek>:
int lseek(int fd, int ptr, int dir)
{
81000bc4:	55                   	push   %ebp
81000bc5:	89 e5                	mov    %esp,%ebp
81000bc7:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_LSEEK;
81000bca:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = fd;
81000bd1:	8b 45 08             	mov    0x8(%ebp),%eax
81000bd4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = ptr;
81000bd7:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bda:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000bdd:	8b 45 10             	mov    0x10(%ebp),%eax
81000be0:	89 45 f8             	mov    %eax,-0x8(%ebp)
    sys_call(&args);
81000be3:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000be6:	50                   	push   %eax
81000be7:	e8 35 fe ff ff       	call   81000a21 <sys_call>
81000bec:	83 c4 04             	add    $0x4,%esp
}
81000bef:	90                   	nop
81000bf0:	c9                   	leave  
81000bf1:	c3                   	ret    

81000bf2 <close>:
int close(int fd)
{
81000bf2:	55                   	push   %ebp
81000bf3:	89 e5                	mov    %esp,%ebp
81000bf5:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_CLOSE;
81000bf8:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = fd;
81000bff:	8b 45 08             	mov    0x8(%ebp),%eax
81000c02:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000c05:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c08:	50                   	push   %eax
81000c09:	e8 13 fe ff ff       	call   81000a21 <sys_call>
81000c0e:	83 c4 04             	add    $0x4,%esp
}
81000c11:	90                   	nop
81000c12:	c9                   	leave  
81000c13:	c3                   	ret    

81000c14 <fstat>:

int fstat(int file, struct stat *st) {
81000c14:	55                   	push   %ebp
81000c15:	89 e5                	mov    %esp,%ebp
81000c17:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_FSTAT;
81000c1a:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
81000c21:	8b 45 08             	mov    0x8(%ebp),%eax
81000c24:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000c27:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c2a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000c2d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c30:	50                   	push   %eax
81000c31:	e8 eb fd ff ff       	call   81000a21 <sys_call>
81000c36:	83 c4 04             	add    $0x4,%esp
}
81000c39:	c9                   	leave  
81000c3a:	c3                   	ret    

81000c3b <unlink>:
int unlink(const char* path)
{
81000c3b:	55                   	push   %ebp
81000c3c:	89 e5                	mov    %esp,%ebp
81000c3e:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_UNLINK;
81000c41:	c7 45 ec 3c 00 00 00 	movl   $0x3c,-0x14(%ebp)
    args.arg0 = (int)path;
81000c48:	8b 45 08             	mov    0x8(%ebp),%eax
81000c4b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000c4e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c51:	50                   	push   %eax
81000c52:	e8 ca fd ff ff       	call   81000a21 <sys_call>
81000c57:	83 c4 04             	add    $0x4,%esp
}
81000c5a:	c9                   	leave  
81000c5b:	c3                   	ret    

81000c5c <isatty>:
int isatty(int file) {
81000c5c:	55                   	push   %ebp
81000c5d:	89 e5                	mov    %esp,%ebp
81000c5f:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_ISATTY;
81000c62:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)file;
81000c69:	8b 45 08             	mov    0x8(%ebp),%eax
81000c6c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000c6f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c72:	50                   	push   %eax
81000c73:	e8 a9 fd ff ff       	call   81000a21 <sys_call>
81000c78:	83 c4 04             	add    $0x4,%esp
}
81000c7b:	c9                   	leave  
81000c7c:	c3                   	ret    

81000c7d <sbrk>:

void * sbrk(ptrdiff_t incr) {
81000c7d:	55                   	push   %ebp
81000c7e:	89 e5                	mov    %esp,%ebp
81000c80:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_SBRK;
81000c83:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
81000c8a:	8b 45 08             	mov    0x8(%ebp),%eax
81000c8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000c90:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c93:	50                   	push   %eax
81000c94:	e8 88 fd ff ff       	call   81000a21 <sys_call>
81000c99:	83 c4 04             	add    $0x4,%esp
}
81000c9c:	c9                   	leave  
81000c9d:	c3                   	ret    

81000c9e <dup>:

int dup(int file) {
81000c9e:	55                   	push   %ebp
81000c9f:	89 e5                	mov    %esp,%ebp
81000ca1:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_DUP;
81000ca4:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)file;
81000cab:	8b 45 08             	mov    0x8(%ebp),%eax
81000cae:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000cb1:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cb4:	50                   	push   %eax
81000cb5:	e8 67 fd ff ff       	call   81000a21 <sys_call>
81000cba:	83 c4 04             	add    $0x4,%esp
}
81000cbd:	c9                   	leave  
81000cbe:	c3                   	ret    

81000cbf <_exit>:

void _exit(int status)
{
81000cbf:	55                   	push   %ebp
81000cc0:	89 e5                	mov    %esp,%ebp
81000cc2:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_EXIT;
81000cc5:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000ccc:	8b 45 08             	mov    0x8(%ebp),%eax
81000ccf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000cd2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cd5:	50                   	push   %eax
81000cd6:	e8 46 fd ff ff       	call   81000a21 <sys_call>
81000cdb:	83 c4 04             	add    $0x4,%esp
}
81000cde:	90                   	nop
81000cdf:	c9                   	leave  
81000ce0:	c3                   	ret    

81000ce1 <wait>:

int wait(int* status)
{
81000ce1:	55                   	push   %ebp
81000ce2:	89 e5                	mov    %esp,%ebp
81000ce4:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_WAIT;
81000ce7:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000cee:	8b 45 08             	mov    0x8(%ebp),%eax
81000cf1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000cf4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cf7:	50                   	push   %eax
81000cf8:	e8 24 fd ff ff       	call   81000a21 <sys_call>
81000cfd:	83 c4 04             	add    $0x4,%esp
}
81000d00:	c9                   	leave  
81000d01:	c3                   	ret    

81000d02 <opendir>:



DIR* opendir(const char* path)
{
81000d02:	55                   	push   %ebp
81000d03:	89 e5                	mov    %esp,%ebp
81000d05:	83 ec 28             	sub    $0x28,%esp
    DIR* dir = (DIR*)malloc(sizeof(DIR));
81000d08:	83 ec 0c             	sub    $0xc,%esp
81000d0b:	68 10 01 00 00       	push   $0x110
81000d10:	e8 ac 30 00 00       	call   81003dc1 <malloc>
81000d15:	83 c4 10             	add    $0x10,%esp
81000d18:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(dir == (DIR*)0)
81000d1b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d1f:	75 07                	jne    81000d28 <opendir+0x26>
    {
        return (DIR*)0;
81000d21:	b8 00 00 00 00       	mov    $0x0,%eax
81000d26:	eb 43                	jmp    81000d6b <opendir+0x69>
    }
    sys_arg_t args;
    args.id = SYS_OPENDIR;
81000d28:	c7 45 dc 3d 00 00 00 	movl   $0x3d,-0x24(%ebp)
    args.arg0 = (int)path;
81000d2f:	8b 45 08             	mov    0x8(%ebp),%eax
81000d32:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000d35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d38:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
81000d3b:	83 ec 0c             	sub    $0xc,%esp
81000d3e:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000d41:	50                   	push   %eax
81000d42:	e8 da fc ff ff       	call   81000a21 <sys_call>
81000d47:	83 c4 10             	add    $0x10,%esp
81000d4a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if(err < 0)
81000d4d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000d51:	79 15                	jns    81000d68 <opendir+0x66>
    {
        free(dir);
81000d53:	83 ec 0c             	sub    $0xc,%esp
81000d56:	ff 75 f4             	pushl  -0xc(%ebp)
81000d59:	e8 7f 30 00 00       	call   81003ddd <free>
81000d5e:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000d61:	b8 00 00 00 00       	mov    $0x0,%eax
81000d66:	eb 03                	jmp    81000d6b <opendir+0x69>
    }
    return dir;
81000d68:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000d6b:	c9                   	leave  
81000d6c:	c3                   	ret    

81000d6d <readdir>:

struct dirent* readdir(DIR* dir)
{
81000d6d:	55                   	push   %ebp
81000d6e:	89 e5                	mov    %esp,%ebp
81000d70:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_READDIR;
81000d73:	c7 45 e8 3e 00 00 00 	movl   $0x3e,-0x18(%ebp)
    args.arg0 = (int)dir;
81000d7a:	8b 45 08             	mov    0x8(%ebp),%eax
81000d7d:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
81000d80:	8b 45 08             	mov    0x8(%ebp),%eax
81000d83:	83 c0 04             	add    $0x4,%eax
81000d86:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
81000d89:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000d8c:	50                   	push   %eax
81000d8d:	e8 8f fc ff ff       	call   81000a21 <sys_call>
81000d92:	83 c4 04             	add    $0x4,%esp
81000d95:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if(err < 0)
81000d98:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000d9c:	79 07                	jns    81000da5 <readdir+0x38>
    {
        return (struct dirent*)0;
81000d9e:	b8 00 00 00 00       	mov    $0x0,%eax
81000da3:	eb 06                	jmp    81000dab <readdir+0x3e>
    }
    return &dir->dirent;
81000da5:	8b 45 08             	mov    0x8(%ebp),%eax
81000da8:	83 c0 04             	add    $0x4,%eax
}
81000dab:	c9                   	leave  
81000dac:	c3                   	ret    

81000dad <ioctl>:

int ioctl(int file, int cmd, int arg0, int arg1) {
81000dad:	55                   	push   %ebp
81000dae:	89 e5                	mov    %esp,%ebp
81000db0:	83 ec 20             	sub    $0x20,%esp
    sys_arg_t args;
    args.id = SYS_IOCTL;
81000db3:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = file;
81000dba:	8b 45 08             	mov    0x8(%ebp),%eax
81000dbd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
81000dc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81000dc3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
81000dc6:	8b 45 10             	mov    0x10(%ebp),%eax
81000dc9:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
81000dcc:	8b 45 14             	mov    0x14(%ebp),%eax
81000dcf:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
81000dd2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dd5:	50                   	push   %eax
81000dd6:	e8 46 fc ff ff       	call   81000a21 <sys_call>
81000ddb:	83 c4 04             	add    $0x4,%esp
}
81000dde:	c9                   	leave  
81000ddf:	c3                   	ret    

81000de0 <closedir>:

int closedir(DIR* dir)
{
81000de0:	55                   	push   %ebp
81000de1:	89 e5                	mov    %esp,%ebp
81000de3:	83 ec 28             	sub    $0x28,%esp
    sys_arg_t args;
    args.id = SYS_CLOSEDIR;
81000de6:	c7 45 e4 3f 00 00 00 	movl   $0x3f,-0x1c(%ebp)
    args.arg0 = (int)dir;
81000ded:	8b 45 08             	mov    0x8(%ebp),%eax
81000df0:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
81000df3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81000df6:	50                   	push   %eax
81000df7:	e8 25 fc ff ff       	call   81000a21 <sys_call>
81000dfc:	83 c4 04             	add    $0x4,%esp
    free(dir);
81000dff:	83 ec 0c             	sub    $0xc,%esp
81000e02:	ff 75 08             	pushl  0x8(%ebp)
81000e05:	e8 d3 2f 00 00       	call   81003ddd <free>
81000e0a:	83 c4 10             	add    $0x10,%esp
    return 0;
81000e0d:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000e12:	c9                   	leave  
81000e13:	c3                   	ret    

81000e14 <atoi>:
81000e14:	55                   	push   %ebp
81000e15:	89 e5                	mov    %esp,%ebp
81000e17:	83 ec 08             	sub    $0x8,%esp
81000e1a:	83 ec 04             	sub    $0x4,%esp
81000e1d:	6a 0a                	push   $0xa
81000e1f:	6a 00                	push   $0x0
81000e21:	ff 75 08             	pushl  0x8(%ebp)
81000e24:	e8 5d 60 00 00       	call   81006e86 <strtol>
81000e29:	83 c4 10             	add    $0x10,%esp
81000e2c:	c9                   	leave  
81000e2d:	c3                   	ret    

81000e2e <_atoi_r>:
81000e2e:	55                   	push   %ebp
81000e2f:	89 e5                	mov    %esp,%ebp
81000e31:	83 ec 08             	sub    $0x8,%esp
81000e34:	6a 0a                	push   $0xa
81000e36:	6a 00                	push   $0x0
81000e38:	ff 75 0c             	pushl  0xc(%ebp)
81000e3b:	ff 75 08             	pushl  0x8(%ebp)
81000e3e:	e8 f9 5f 00 00       	call   81006e3c <_strtol_r>
81000e43:	83 c4 10             	add    $0x10,%esp
81000e46:	c9                   	leave  
81000e47:	c3                   	ret    

81000e48 <exit>:
81000e48:	55                   	push   %ebp
81000e49:	89 e5                	mov    %esp,%ebp
81000e4b:	83 ec 08             	sub    $0x8,%esp
81000e4e:	83 ec 08             	sub    $0x8,%esp
81000e51:	6a 00                	push   $0x0
81000e53:	ff 75 08             	pushl  0x8(%ebp)
81000e56:	e8 28 63 00 00       	call   81007183 <__call_exitprocs>
81000e5b:	83 c4 10             	add    $0x10,%esp
81000e5e:	a1 d4 86 00 81       	mov    0x810086d4,%eax
81000e63:	8b 40 3c             	mov    0x3c(%eax),%eax
81000e66:	85 c0                	test   %eax,%eax
81000e68:	74 17                	je     81000e81 <exit+0x39>
81000e6a:	a1 d4 86 00 81       	mov    0x810086d4,%eax
81000e6f:	8b 40 3c             	mov    0x3c(%eax),%eax
81000e72:	8b 15 d4 86 00 81    	mov    0x810086d4,%edx
81000e78:	83 ec 0c             	sub    $0xc,%esp
81000e7b:	52                   	push   %edx
81000e7c:	ff d0                	call   *%eax
81000e7e:	83 c4 10             	add    $0x10,%esp
81000e81:	83 ec 0c             	sub    $0xc,%esp
81000e84:	ff 75 08             	pushl  0x8(%ebp)
81000e87:	e8 33 fe ff ff       	call   81000cbf <_exit>

81000e8c <_fclose_r>:
81000e8c:	55                   	push   %ebp
81000e8d:	89 e5                	mov    %esp,%ebp
81000e8f:	53                   	push   %ebx
81000e90:	83 ec 14             	sub    $0x14,%esp
81000e93:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e96:	85 db                	test   %ebx,%ebx
81000e98:	75 0a                	jne    81000ea4 <_fclose_r+0x18>
81000e9a:	b8 00 00 00 00       	mov    $0x0,%eax
81000e9f:	e9 ea 00 00 00       	jmp    81000f8e <_fclose_r+0x102>
81000ea4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea7:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000eaa:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000eae:	74 18                	je     81000ec8 <_fclose_r+0x3c>
81000eb0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000eb3:	8b 40 38             	mov    0x38(%eax),%eax
81000eb6:	85 c0                	test   %eax,%eax
81000eb8:	75 0e                	jne    81000ec8 <_fclose_r+0x3c>
81000eba:	83 ec 0c             	sub    $0xc,%esp
81000ebd:	ff 75 f0             	pushl  -0x10(%ebp)
81000ec0:	e8 fe 08 00 00       	call   810017c3 <__sinit>
81000ec5:	83 c4 10             	add    $0x10,%esp
81000ec8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ecc:	66 85 c0             	test   %ax,%ax
81000ecf:	75 0a                	jne    81000edb <_fclose_r+0x4f>
81000ed1:	b8 00 00 00 00       	mov    $0x0,%eax
81000ed6:	e9 b3 00 00 00       	jmp    81000f8e <_fclose_r+0x102>
81000edb:	83 ec 08             	sub    $0x8,%esp
81000ede:	53                   	push   %ebx
81000edf:	ff 75 08             	pushl  0x8(%ebp)
81000ee2:	e8 c9 00 00 00       	call   81000fb0 <__sflush_r>
81000ee7:	83 c4 10             	add    $0x10,%esp
81000eea:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000eed:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000ef0:	85 c0                	test   %eax,%eax
81000ef2:	74 1d                	je     81000f11 <_fclose_r+0x85>
81000ef4:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000ef7:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000efa:	83 ec 08             	sub    $0x8,%esp
81000efd:	52                   	push   %edx
81000efe:	ff 75 08             	pushl  0x8(%ebp)
81000f01:	ff d0                	call   *%eax
81000f03:	83 c4 10             	add    $0x10,%esp
81000f06:	85 c0                	test   %eax,%eax
81000f08:	79 07                	jns    81000f11 <_fclose_r+0x85>
81000f0a:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000f11:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f15:	98                   	cwtl   
81000f16:	25 80 00 00 00       	and    $0x80,%eax
81000f1b:	85 c0                	test   %eax,%eax
81000f1d:	74 12                	je     81000f31 <_fclose_r+0xa5>
81000f1f:	8b 43 10             	mov    0x10(%ebx),%eax
81000f22:	83 ec 08             	sub    $0x8,%esp
81000f25:	50                   	push   %eax
81000f26:	ff 75 08             	pushl  0x8(%ebp)
81000f29:	e8 4a 0e 00 00       	call   81001d78 <_free_r>
81000f2e:	83 c4 10             	add    $0x10,%esp
81000f31:	8b 43 30             	mov    0x30(%ebx),%eax
81000f34:	85 c0                	test   %eax,%eax
81000f36:	74 23                	je     81000f5b <_fclose_r+0xcf>
81000f38:	8b 53 30             	mov    0x30(%ebx),%edx
81000f3b:	8d 43 40             	lea    0x40(%ebx),%eax
81000f3e:	39 c2                	cmp    %eax,%edx
81000f40:	74 12                	je     81000f54 <_fclose_r+0xc8>
81000f42:	8b 43 30             	mov    0x30(%ebx),%eax
81000f45:	83 ec 08             	sub    $0x8,%esp
81000f48:	50                   	push   %eax
81000f49:	ff 75 08             	pushl  0x8(%ebp)
81000f4c:	e8 27 0e 00 00       	call   81001d78 <_free_r>
81000f51:	83 c4 10             	add    $0x10,%esp
81000f54:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000f5b:	8b 43 44             	mov    0x44(%ebx),%eax
81000f5e:	85 c0                	test   %eax,%eax
81000f60:	74 19                	je     81000f7b <_fclose_r+0xef>
81000f62:	8b 43 44             	mov    0x44(%ebx),%eax
81000f65:	83 ec 08             	sub    $0x8,%esp
81000f68:	50                   	push   %eax
81000f69:	ff 75 08             	pushl  0x8(%ebp)
81000f6c:	e8 07 0e 00 00       	call   81001d78 <_free_r>
81000f71:	83 c4 10             	add    $0x10,%esp
81000f74:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000f7b:	e8 dc 08 00 00       	call   8100185c <__sfp_lock_acquire>
81000f80:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000f86:	e8 d7 08 00 00       	call   81001862 <__sfp_lock_release>
81000f8b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f8e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000f91:	c9                   	leave  
81000f92:	c3                   	ret    

81000f93 <fclose>:
81000f93:	55                   	push   %ebp
81000f94:	89 e5                	mov    %esp,%ebp
81000f96:	83 ec 08             	sub    $0x8,%esp
81000f99:	8b 55 08             	mov    0x8(%ebp),%edx
81000f9c:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81000fa1:	83 ec 08             	sub    $0x8,%esp
81000fa4:	52                   	push   %edx
81000fa5:	50                   	push   %eax
81000fa6:	e8 e1 fe ff ff       	call   81000e8c <_fclose_r>
81000fab:	83 c4 10             	add    $0x10,%esp
81000fae:	c9                   	leave  
81000faf:	c3                   	ret    

81000fb0 <__sflush_r>:
81000fb0:	55                   	push   %ebp
81000fb1:	89 e5                	mov    %esp,%ebp
81000fb3:	57                   	push   %edi
81000fb4:	56                   	push   %esi
81000fb5:	53                   	push   %ebx
81000fb6:	83 ec 1c             	sub    $0x1c,%esp
81000fb9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fbc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fc0:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000fc4:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000fc8:	83 e0 08             	and    $0x8,%eax
81000fcb:	85 c0                	test   %eax,%eax
81000fcd:	0f 85 93 01 00 00    	jne    81001166 <__sflush_r+0x1b6>
81000fd3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fd7:	80 cc 08             	or     $0x8,%ah
81000fda:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000fde:	8b 43 04             	mov    0x4(%ebx),%eax
81000fe1:	85 c0                	test   %eax,%eax
81000fe3:	7f 0b                	jg     81000ff0 <__sflush_r+0x40>
81000fe5:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000fe8:	85 c0                	test   %eax,%eax
81000fea:	0f 8e 6f 01 00 00    	jle    8100115f <__sflush_r+0x1af>
81000ff0:	8b 43 28             	mov    0x28(%ebx),%eax
81000ff3:	85 c0                	test   %eax,%eax
81000ff5:	0f 84 64 01 00 00    	je     8100115f <__sflush_r+0x1af>
81000ffb:	8b 45 08             	mov    0x8(%ebp),%eax
81000ffe:	8b 00                	mov    (%eax),%eax
81001000:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001003:	8b 45 08             	mov    0x8(%ebp),%eax
81001006:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100100c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001010:	98                   	cwtl   
81001011:	25 00 10 00 00       	and    $0x1000,%eax
81001016:	85 c0                	test   %eax,%eax
81001018:	74 08                	je     81001022 <__sflush_r+0x72>
8100101a:	8b 43 50             	mov    0x50(%ebx),%eax
8100101d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001020:	eb 64                	jmp    81001086 <__sflush_r+0xd6>
81001022:	8b 43 28             	mov    0x28(%ebx),%eax
81001025:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001028:	6a 01                	push   $0x1
8100102a:	6a 00                	push   $0x0
8100102c:	52                   	push   %edx
8100102d:	ff 75 08             	pushl  0x8(%ebp)
81001030:	ff d0                	call   *%eax
81001032:	83 c4 10             	add    $0x10,%esp
81001035:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001038:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100103c:	75 48                	jne    81001086 <__sflush_r+0xd6>
8100103e:	8b 45 08             	mov    0x8(%ebp),%eax
81001041:	8b 00                	mov    (%eax),%eax
81001043:	85 c0                	test   %eax,%eax
81001045:	74 3f                	je     81001086 <__sflush_r+0xd6>
81001047:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
8100104e:	8b 45 08             	mov    0x8(%ebp),%eax
81001051:	8b 00                	mov    (%eax),%eax
81001053:	83 f8 1d             	cmp    $0x1d,%eax
81001056:	74 0a                	je     81001062 <__sflush_r+0xb2>
81001058:	8b 45 08             	mov    0x8(%ebp),%eax
8100105b:	8b 00                	mov    (%eax),%eax
8100105d:	83 f8 16             	cmp    $0x16,%eax
81001060:	75 11                	jne    81001073 <__sflush_r+0xc3>
81001062:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81001069:	8b 45 08             	mov    0x8(%ebp),%eax
8100106c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100106f:	89 10                	mov    %edx,(%eax)
81001071:	eb 0b                	jmp    8100107e <__sflush_r+0xce>
81001073:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001077:	83 c8 40             	or     $0x40,%eax
8100107a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100107e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001081:	e9 48 01 00 00       	jmp    810011ce <__sflush_r+0x21e>
81001086:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100108a:	98                   	cwtl   
8100108b:	83 e0 04             	and    $0x4,%eax
8100108e:	85 c0                	test   %eax,%eax
81001090:	74 13                	je     810010a5 <__sflush_r+0xf5>
81001092:	8b 43 04             	mov    0x4(%ebx),%eax
81001095:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81001098:	8b 43 30             	mov    0x30(%ebx),%eax
8100109b:	85 c0                	test   %eax,%eax
8100109d:	74 06                	je     810010a5 <__sflush_r+0xf5>
8100109f:	8b 43 3c             	mov    0x3c(%ebx),%eax
810010a2:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810010a5:	8b 43 28             	mov    0x28(%ebx),%eax
810010a8:	8b 53 1c             	mov    0x1c(%ebx),%edx
810010ab:	6a 00                	push   $0x0
810010ad:	ff 75 e4             	pushl  -0x1c(%ebp)
810010b0:	52                   	push   %edx
810010b1:	ff 75 08             	pushl  0x8(%ebp)
810010b4:	ff d0                	call   *%eax
810010b6:	83 c4 10             	add    $0x10,%esp
810010b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810010bc:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810010c0:	75 1d                	jne    810010df <__sflush_r+0x12f>
810010c2:	8b 45 08             	mov    0x8(%ebp),%eax
810010c5:	8b 00                	mov    (%eax),%eax
810010c7:	85 c0                	test   %eax,%eax
810010c9:	74 14                	je     810010df <__sflush_r+0x12f>
810010cb:	8b 45 08             	mov    0x8(%ebp),%eax
810010ce:	8b 00                	mov    (%eax),%eax
810010d0:	83 f8 1d             	cmp    $0x1d,%eax
810010d3:	74 0a                	je     810010df <__sflush_r+0x12f>
810010d5:	8b 45 08             	mov    0x8(%ebp),%eax
810010d8:	8b 00                	mov    (%eax),%eax
810010da:	83 f8 16             	cmp    $0x16,%eax
810010dd:	75 6e                	jne    8100114d <__sflush_r+0x19d>
810010df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010e3:	80 e4 f7             	and    $0xf7,%ah
810010e6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010ea:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810010f1:	8b 43 10             	mov    0x10(%ebx),%eax
810010f4:	89 03                	mov    %eax,(%ebx)
810010f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010fa:	98                   	cwtl   
810010fb:	25 00 10 00 00       	and    $0x1000,%eax
81001100:	85 c0                	test   %eax,%eax
81001102:	74 15                	je     81001119 <__sflush_r+0x169>
81001104:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001108:	75 09                	jne    81001113 <__sflush_r+0x163>
8100110a:	8b 45 08             	mov    0x8(%ebp),%eax
8100110d:	8b 00                	mov    (%eax),%eax
8100110f:	85 c0                	test   %eax,%eax
81001111:	75 06                	jne    81001119 <__sflush_r+0x169>
81001113:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001116:	89 43 50             	mov    %eax,0x50(%ebx)
81001119:	8b 45 08             	mov    0x8(%ebp),%eax
8100111c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100111f:	89 10                	mov    %edx,(%eax)
81001121:	8b 43 30             	mov    0x30(%ebx),%eax
81001124:	85 c0                	test   %eax,%eax
81001126:	74 37                	je     8100115f <__sflush_r+0x1af>
81001128:	8b 53 30             	mov    0x30(%ebx),%edx
8100112b:	8d 43 40             	lea    0x40(%ebx),%eax
8100112e:	39 c2                	cmp    %eax,%edx
81001130:	74 12                	je     81001144 <__sflush_r+0x194>
81001132:	8b 43 30             	mov    0x30(%ebx),%eax
81001135:	83 ec 08             	sub    $0x8,%esp
81001138:	50                   	push   %eax
81001139:	ff 75 08             	pushl  0x8(%ebp)
8100113c:	e8 37 0c 00 00       	call   81001d78 <_free_r>
81001141:	83 c4 10             	add    $0x10,%esp
81001144:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100114b:	eb 12                	jmp    8100115f <__sflush_r+0x1af>
8100114d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001151:	83 c8 40             	or     $0x40,%eax
81001154:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001158:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100115d:	eb 6f                	jmp    810011ce <__sflush_r+0x21e>
8100115f:	b8 00 00 00 00       	mov    $0x0,%eax
81001164:	eb 68                	jmp    810011ce <__sflush_r+0x21e>
81001166:	8b 73 10             	mov    0x10(%ebx),%esi
81001169:	85 f6                	test   %esi,%esi
8100116b:	75 07                	jne    81001174 <__sflush_r+0x1c4>
8100116d:	b8 00 00 00 00       	mov    $0x0,%eax
81001172:	eb 5a                	jmp    810011ce <__sflush_r+0x21e>
81001174:	8b 03                	mov    (%ebx),%eax
81001176:	29 f0                	sub    %esi,%eax
81001178:	89 c7                	mov    %eax,%edi
8100117a:	89 33                	mov    %esi,(%ebx)
8100117c:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001180:	83 e0 03             	and    $0x3,%eax
81001183:	85 c0                	test   %eax,%eax
81001185:	75 05                	jne    8100118c <__sflush_r+0x1dc>
81001187:	8b 43 14             	mov    0x14(%ebx),%eax
8100118a:	eb 05                	jmp    81001191 <__sflush_r+0x1e1>
8100118c:	b8 00 00 00 00       	mov    $0x0,%eax
81001191:	89 43 08             	mov    %eax,0x8(%ebx)
81001194:	eb 2f                	jmp    810011c5 <__sflush_r+0x215>
81001196:	8b 43 24             	mov    0x24(%ebx),%eax
81001199:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100119c:	57                   	push   %edi
8100119d:	56                   	push   %esi
8100119e:	52                   	push   %edx
8100119f:	ff 75 08             	pushl  0x8(%ebp)
810011a2:	ff d0                	call   *%eax
810011a4:	83 c4 10             	add    $0x10,%esp
810011a7:	85 c0                	test   %eax,%eax
810011a9:	7f 12                	jg     810011bd <__sflush_r+0x20d>
810011ab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011af:	83 c8 40             	or     $0x40,%eax
810011b2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810011bb:	eb 11                	jmp    810011ce <__sflush_r+0x21e>
810011bd:	89 c1                	mov    %eax,%ecx
810011bf:	89 c8                	mov    %ecx,%eax
810011c1:	01 c6                	add    %eax,%esi
810011c3:	29 cf                	sub    %ecx,%edi
810011c5:	85 ff                	test   %edi,%edi
810011c7:	7f cd                	jg     81001196 <__sflush_r+0x1e6>
810011c9:	b8 00 00 00 00       	mov    $0x0,%eax
810011ce:	8d 65 f4             	lea    -0xc(%ebp),%esp
810011d1:	5b                   	pop    %ebx
810011d2:	5e                   	pop    %esi
810011d3:	5f                   	pop    %edi
810011d4:	5d                   	pop    %ebp
810011d5:	c3                   	ret    

810011d6 <_fflush_r>:
810011d6:	55                   	push   %ebp
810011d7:	89 e5                	mov    %esp,%ebp
810011d9:	53                   	push   %ebx
810011da:	83 ec 14             	sub    $0x14,%esp
810011dd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810011e0:	8b 45 08             	mov    0x8(%ebp),%eax
810011e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810011ea:	74 18                	je     81001204 <_fflush_r+0x2e>
810011ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011ef:	8b 40 38             	mov    0x38(%eax),%eax
810011f2:	85 c0                	test   %eax,%eax
810011f4:	75 0e                	jne    81001204 <_fflush_r+0x2e>
810011f6:	83 ec 0c             	sub    $0xc,%esp
810011f9:	ff 75 f4             	pushl  -0xc(%ebp)
810011fc:	e8 c2 05 00 00       	call   810017c3 <__sinit>
81001201:	83 c4 10             	add    $0x10,%esp
81001204:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001208:	66 85 c0             	test   %ax,%ax
8100120b:	75 07                	jne    81001214 <_fflush_r+0x3e>
8100120d:	b8 00 00 00 00       	mov    $0x0,%eax
81001212:	eb 15                	jmp    81001229 <_fflush_r+0x53>
81001214:	83 ec 08             	sub    $0x8,%esp
81001217:	53                   	push   %ebx
81001218:	ff 75 08             	pushl  0x8(%ebp)
8100121b:	e8 90 fd ff ff       	call   81000fb0 <__sflush_r>
81001220:	83 c4 10             	add    $0x10,%esp
81001223:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001226:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001229:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100122c:	c9                   	leave  
8100122d:	c3                   	ret    

8100122e <fflush>:
8100122e:	55                   	push   %ebp
8100122f:	89 e5                	mov    %esp,%ebp
81001231:	83 ec 08             	sub    $0x8,%esp
81001234:	8b 55 08             	mov    0x8(%ebp),%edx
81001237:	85 d2                	test   %edx,%edx
81001239:	75 18                	jne    81001253 <fflush+0x25>
8100123b:	a1 d4 86 00 81       	mov    0x810086d4,%eax
81001240:	83 ec 08             	sub    $0x8,%esp
81001243:	68 d6 11 00 81       	push   $0x810011d6
81001248:	50                   	push   %eax
81001249:	e8 bd 1a 00 00       	call   81002d0b <_fwalk_reent>
8100124e:	83 c4 10             	add    $0x10,%esp
81001251:	eb 12                	jmp    81001265 <fflush+0x37>
81001253:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81001258:	83 ec 08             	sub    $0x8,%esp
8100125b:	52                   	push   %edx
8100125c:	50                   	push   %eax
8100125d:	e8 74 ff ff ff       	call   810011d6 <_fflush_r>
81001262:	83 c4 10             	add    $0x10,%esp
81001265:	c9                   	leave  
81001266:	c3                   	ret    

81001267 <_fgetc_r>:
81001267:	55                   	push   %ebp
81001268:	89 e5                	mov    %esp,%ebp
8100126a:	83 ec 18             	sub    $0x18,%esp
8100126d:	8b 45 08             	mov    0x8(%ebp),%eax
81001270:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001273:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001277:	74 18                	je     81001291 <_fgetc_r+0x2a>
81001279:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100127c:	8b 40 38             	mov    0x38(%eax),%eax
8100127f:	85 c0                	test   %eax,%eax
81001281:	75 0e                	jne    81001291 <_fgetc_r+0x2a>
81001283:	83 ec 0c             	sub    $0xc,%esp
81001286:	ff 75 f4             	pushl  -0xc(%ebp)
81001289:	e8 35 05 00 00       	call   810017c3 <__sinit>
8100128e:	83 c4 10             	add    $0x10,%esp
81001291:	8b 45 0c             	mov    0xc(%ebp),%eax
81001294:	8b 40 04             	mov    0x4(%eax),%eax
81001297:	8d 50 ff             	lea    -0x1(%eax),%edx
8100129a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100129d:	89 50 04             	mov    %edx,0x4(%eax)
810012a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810012a3:	8b 40 04             	mov    0x4(%eax),%eax
810012a6:	85 c0                	test   %eax,%eax
810012a8:	79 13                	jns    810012bd <_fgetc_r+0x56>
810012aa:	83 ec 08             	sub    $0x8,%esp
810012ad:	ff 75 0c             	pushl  0xc(%ebp)
810012b0:	ff 75 08             	pushl  0x8(%ebp)
810012b3:	e8 d1 51 00 00       	call   81006489 <__srget_r>
810012b8:	83 c4 10             	add    $0x10,%esp
810012bb:	eb 13                	jmp    810012d0 <_fgetc_r+0x69>
810012bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810012c0:	8b 00                	mov    (%eax),%eax
810012c2:	8d 48 01             	lea    0x1(%eax),%ecx
810012c5:	8b 55 0c             	mov    0xc(%ebp),%edx
810012c8:	89 0a                	mov    %ecx,(%edx)
810012ca:	0f b6 00             	movzbl (%eax),%eax
810012cd:	0f b6 c0             	movzbl %al,%eax
810012d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012d3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012d6:	c9                   	leave  
810012d7:	c3                   	ret    

810012d8 <fgetc>:
810012d8:	55                   	push   %ebp
810012d9:	89 e5                	mov    %esp,%ebp
810012db:	83 ec 18             	sub    $0x18,%esp
810012de:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810012e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012ec:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810012f0:	74 18                	je     8100130a <fgetc+0x32>
810012f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012f5:	8b 40 38             	mov    0x38(%eax),%eax
810012f8:	85 c0                	test   %eax,%eax
810012fa:	75 0e                	jne    8100130a <fgetc+0x32>
810012fc:	83 ec 0c             	sub    $0xc,%esp
810012ff:	ff 75 f0             	pushl  -0x10(%ebp)
81001302:	e8 bc 04 00 00       	call   810017c3 <__sinit>
81001307:	83 c4 10             	add    $0x10,%esp
8100130a:	8b 45 08             	mov    0x8(%ebp),%eax
8100130d:	8b 40 04             	mov    0x4(%eax),%eax
81001310:	8d 50 ff             	lea    -0x1(%eax),%edx
81001313:	8b 45 08             	mov    0x8(%ebp),%eax
81001316:	89 50 04             	mov    %edx,0x4(%eax)
81001319:	8b 45 08             	mov    0x8(%ebp),%eax
8100131c:	8b 40 04             	mov    0x4(%eax),%eax
8100131f:	85 c0                	test   %eax,%eax
81001321:	79 13                	jns    81001336 <fgetc+0x5e>
81001323:	83 ec 08             	sub    $0x8,%esp
81001326:	ff 75 08             	pushl  0x8(%ebp)
81001329:	ff 75 f4             	pushl  -0xc(%ebp)
8100132c:	e8 58 51 00 00       	call   81006489 <__srget_r>
81001331:	83 c4 10             	add    $0x10,%esp
81001334:	eb 13                	jmp    81001349 <fgetc+0x71>
81001336:	8b 45 08             	mov    0x8(%ebp),%eax
81001339:	8b 00                	mov    (%eax),%eax
8100133b:	8d 48 01             	lea    0x1(%eax),%ecx
8100133e:	8b 55 08             	mov    0x8(%ebp),%edx
81001341:	89 0a                	mov    %ecx,(%edx)
81001343:	0f b6 00             	movzbl (%eax),%eax
81001346:	0f b6 c0             	movzbl %al,%eax
81001349:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100134c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100134f:	c9                   	leave  
81001350:	c3                   	ret    

81001351 <_fgets_r>:
81001351:	55                   	push   %ebp
81001352:	89 e5                	mov    %esp,%ebp
81001354:	83 ec 28             	sub    $0x28,%esp
81001357:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100135b:	7f 0a                	jg     81001367 <_fgets_r+0x16>
8100135d:	b8 00 00 00 00       	mov    $0x0,%eax
81001362:	e9 46 01 00 00       	jmp    810014ad <_fgets_r+0x15c>
81001367:	8b 45 0c             	mov    0xc(%ebp),%eax
8100136a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100136d:	8b 45 08             	mov    0x8(%ebp),%eax
81001370:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001373:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001377:	74 18                	je     81001391 <_fgets_r+0x40>
81001379:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100137c:	8b 40 38             	mov    0x38(%eax),%eax
8100137f:	85 c0                	test   %eax,%eax
81001381:	75 0e                	jne    81001391 <_fgets_r+0x40>
81001383:	83 ec 0c             	sub    $0xc,%esp
81001386:	ff 75 ec             	pushl  -0x14(%ebp)
81001389:	e8 35 04 00 00       	call   810017c3 <__sinit>
8100138e:	83 c4 10             	add    $0x10,%esp
81001391:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001395:	8b 45 14             	mov    0x14(%ebp),%eax
81001398:	8b 40 04             	mov    0x4(%eax),%eax
8100139b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100139e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810013a2:	75 34                	jne    810013d8 <_fgets_r+0x87>
810013a4:	83 ec 08             	sub    $0x8,%esp
810013a7:	ff 75 14             	pushl  0x14(%ebp)
810013aa:	ff 75 08             	pushl  0x8(%ebp)
810013ad:	e8 d6 4e 00 00       	call   81006288 <__srefill_r>
810013b2:	83 c4 10             	add    $0x10,%esp
810013b5:	85 c0                	test   %eax,%eax
810013b7:	74 16                	je     810013cf <_fgets_r+0x7e>
810013b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013bc:	3b 45 0c             	cmp    0xc(%ebp),%eax
810013bf:	0f 85 de 00 00 00    	jne    810014a3 <_fgets_r+0x152>
810013c5:	b8 00 00 00 00       	mov    $0x0,%eax
810013ca:	e9 de 00 00 00       	jmp    810014ad <_fgets_r+0x15c>
810013cf:	8b 45 14             	mov    0x14(%ebp),%eax
810013d2:	8b 40 04             	mov    0x4(%eax),%eax
810013d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013d8:	8b 45 14             	mov    0x14(%ebp),%eax
810013db:	8b 00                	mov    (%eax),%eax
810013dd:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013e0:	8b 45 10             	mov    0x10(%ebp),%eax
810013e3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810013e6:	76 06                	jbe    810013ee <_fgets_r+0x9d>
810013e8:	8b 45 10             	mov    0x10(%ebp),%eax
810013eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013ee:	83 ec 04             	sub    $0x4,%esp
810013f1:	ff 75 f4             	pushl  -0xc(%ebp)
810013f4:	6a 0a                	push   $0xa
810013f6:	ff 75 e8             	pushl  -0x18(%ebp)
810013f9:	e8 b2 34 00 00       	call   810048b0 <memchr>
810013fe:	83 c4 10             	add    $0x10,%esp
81001401:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001404:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001408:	74 4a                	je     81001454 <_fgets_r+0x103>
8100140a:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100140e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001411:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001414:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001417:	8b 45 14             	mov    0x14(%ebp),%eax
8100141a:	8b 40 04             	mov    0x4(%eax),%eax
8100141d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001420:	89 c2                	mov    %eax,%edx
81001422:	8b 45 14             	mov    0x14(%ebp),%eax
81001425:	89 50 04             	mov    %edx,0x4(%eax)
81001428:	8b 45 14             	mov    0x14(%ebp),%eax
8100142b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100142e:	89 10                	mov    %edx,(%eax)
81001430:	83 ec 04             	sub    $0x4,%esp
81001433:	ff 75 f4             	pushl  -0xc(%ebp)
81001436:	ff 75 e8             	pushl  -0x18(%ebp)
81001439:	ff 75 f0             	pushl  -0x10(%ebp)
8100143c:	e8 57 35 00 00       	call   81004998 <memcpy>
81001441:	83 c4 10             	add    $0x10,%esp
81001444:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001447:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100144a:	01 d0                	add    %edx,%eax
8100144c:	c6 00 00             	movb   $0x0,(%eax)
8100144f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001452:	eb 59                	jmp    810014ad <_fgets_r+0x15c>
81001454:	8b 45 14             	mov    0x14(%ebp),%eax
81001457:	8b 40 04             	mov    0x4(%eax),%eax
8100145a:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100145d:	89 c2                	mov    %eax,%edx
8100145f:	8b 45 14             	mov    0x14(%ebp),%eax
81001462:	89 50 04             	mov    %edx,0x4(%eax)
81001465:	8b 45 14             	mov    0x14(%ebp),%eax
81001468:	8b 10                	mov    (%eax),%edx
8100146a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100146d:	01 c2                	add    %eax,%edx
8100146f:	8b 45 14             	mov    0x14(%ebp),%eax
81001472:	89 10                	mov    %edx,(%eax)
81001474:	83 ec 04             	sub    $0x4,%esp
81001477:	ff 75 f4             	pushl  -0xc(%ebp)
8100147a:	ff 75 e8             	pushl  -0x18(%ebp)
8100147d:	ff 75 f0             	pushl  -0x10(%ebp)
81001480:	e8 13 35 00 00       	call   81004998 <memcpy>
81001485:	83 c4 10             	add    $0x10,%esp
81001488:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100148b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100148e:	8b 45 10             	mov    0x10(%ebp),%eax
81001491:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001494:	89 45 10             	mov    %eax,0x10(%ebp)
81001497:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100149b:	0f 85 f4 fe ff ff    	jne    81001395 <_fgets_r+0x44>
810014a1:	eb 01                	jmp    810014a4 <_fgets_r+0x153>
810014a3:	90                   	nop
810014a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014a7:	c6 00 00             	movb   $0x0,(%eax)
810014aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810014ad:	c9                   	leave  
810014ae:	c3                   	ret    

810014af <fgets>:
810014af:	55                   	push   %ebp
810014b0:	89 e5                	mov    %esp,%ebp
810014b2:	83 ec 08             	sub    $0x8,%esp
810014b5:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810014ba:	ff 75 10             	pushl  0x10(%ebp)
810014bd:	ff 75 0c             	pushl  0xc(%ebp)
810014c0:	ff 75 08             	pushl  0x8(%ebp)
810014c3:	50                   	push   %eax
810014c4:	e8 88 fe ff ff       	call   81001351 <_fgets_r>
810014c9:	83 c4 10             	add    $0x10,%esp
810014cc:	c9                   	leave  
810014cd:	c3                   	ret    

810014ce <std>:
810014ce:	55                   	push   %ebp
810014cf:	89 e5                	mov    %esp,%ebp
810014d1:	83 ec 08             	sub    $0x8,%esp
810014d4:	8b 45 08             	mov    0x8(%ebp),%eax
810014d7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810014dd:	8b 45 08             	mov    0x8(%ebp),%eax
810014e0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810014e7:	8b 45 08             	mov    0x8(%ebp),%eax
810014ea:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810014f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810014f4:	89 c2                	mov    %eax,%edx
810014f6:	8b 45 08             	mov    0x8(%ebp),%eax
810014f9:	66 89 50 0c          	mov    %dx,0xc(%eax)
810014fd:	8b 45 08             	mov    0x8(%ebp),%eax
81001500:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001507:	8b 45 10             	mov    0x10(%ebp),%eax
8100150a:	89 c2                	mov    %eax,%edx
8100150c:	8b 45 08             	mov    0x8(%ebp),%eax
8100150f:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001513:	8b 45 08             	mov    0x8(%ebp),%eax
81001516:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100151d:	8b 45 08             	mov    0x8(%ebp),%eax
81001520:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001527:	8b 45 08             	mov    0x8(%ebp),%eax
8100152a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001531:	8b 45 08             	mov    0x8(%ebp),%eax
81001534:	83 c0 5c             	add    $0x5c,%eax
81001537:	83 ec 04             	sub    $0x4,%esp
8100153a:	6a 08                	push   $0x8
8100153c:	6a 00                	push   $0x0
8100153e:	50                   	push   %eax
8100153f:	e8 29 35 00 00       	call   81004a6d <memset>
81001544:	83 c4 10             	add    $0x10,%esp
81001547:	8b 45 08             	mov    0x8(%ebp),%eax
8100154a:	8b 55 08             	mov    0x8(%ebp),%edx
8100154d:	89 50 1c             	mov    %edx,0x1c(%eax)
81001550:	8b 45 08             	mov    0x8(%ebp),%eax
81001553:	c7 40 20 02 68 00 81 	movl   $0x81006802,0x20(%eax)
8100155a:	8b 45 08             	mov    0x8(%ebp),%eax
8100155d:	c7 40 24 50 68 00 81 	movl   $0x81006850,0x24(%eax)
81001564:	8b 45 08             	mov    0x8(%ebp),%eax
81001567:	c7 40 28 ab 68 00 81 	movl   $0x810068ab,0x28(%eax)
8100156e:	8b 45 08             	mov    0x8(%ebp),%eax
81001571:	c7 40 2c f5 68 00 81 	movl   $0x810068f5,0x2c(%eax)
81001578:	90                   	nop
81001579:	c9                   	leave  
8100157a:	c3                   	ret    

8100157b <stdin_init>:
8100157b:	55                   	push   %ebp
8100157c:	89 e5                	mov    %esp,%ebp
8100157e:	83 ec 08             	sub    $0x8,%esp
81001581:	83 ec 04             	sub    $0x4,%esp
81001584:	6a 00                	push   $0x0
81001586:	6a 04                	push   $0x4
81001588:	ff 75 08             	pushl  0x8(%ebp)
8100158b:	e8 3e ff ff ff       	call   810014ce <std>
81001590:	83 c4 10             	add    $0x10,%esp
81001593:	90                   	nop
81001594:	c9                   	leave  
81001595:	c3                   	ret    

81001596 <stdout_init>:
81001596:	55                   	push   %ebp
81001597:	89 e5                	mov    %esp,%ebp
81001599:	83 ec 08             	sub    $0x8,%esp
8100159c:	83 ec 04             	sub    $0x4,%esp
8100159f:	6a 01                	push   $0x1
810015a1:	6a 09                	push   $0x9
810015a3:	ff 75 08             	pushl  0x8(%ebp)
810015a6:	e8 23 ff ff ff       	call   810014ce <std>
810015ab:	83 c4 10             	add    $0x10,%esp
810015ae:	90                   	nop
810015af:	c9                   	leave  
810015b0:	c3                   	ret    

810015b1 <stderr_init>:
810015b1:	55                   	push   %ebp
810015b2:	89 e5                	mov    %esp,%ebp
810015b4:	83 ec 08             	sub    $0x8,%esp
810015b7:	83 ec 04             	sub    $0x4,%esp
810015ba:	6a 02                	push   $0x2
810015bc:	6a 12                	push   $0x12
810015be:	ff 75 08             	pushl  0x8(%ebp)
810015c1:	e8 08 ff ff ff       	call   810014ce <std>
810015c6:	83 c4 10             	add    $0x10,%esp
810015c9:	90                   	nop
810015ca:	c9                   	leave  
810015cb:	c3                   	ret    

810015cc <__sfmoreglue>:
810015cc:	55                   	push   %ebp
810015cd:	89 e5                	mov    %esp,%ebp
810015cf:	53                   	push   %ebx
810015d0:	83 ec 14             	sub    $0x14,%esp
810015d3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810015d6:	8d 43 ff             	lea    -0x1(%ebx),%eax
810015d9:	6b c0 68             	imul   $0x68,%eax,%eax
810015dc:	83 c0 74             	add    $0x74,%eax
810015df:	83 ec 08             	sub    $0x8,%esp
810015e2:	50                   	push   %eax
810015e3:	ff 75 08             	pushl  0x8(%ebp)
810015e6:	e8 a2 2a 00 00       	call   8100408d <_malloc_r>
810015eb:	83 c4 10             	add    $0x10,%esp
810015ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810015f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810015f5:	75 07                	jne    810015fe <__sfmoreglue+0x32>
810015f7:	b8 00 00 00 00       	mov    $0x0,%eax
810015fc:	eb 38                	jmp    81001636 <__sfmoreglue+0x6a>
810015fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001601:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001607:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100160a:	89 58 04             	mov    %ebx,0x4(%eax)
8100160d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001610:	8d 50 0c             	lea    0xc(%eax),%edx
81001613:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001616:	89 50 08             	mov    %edx,0x8(%eax)
81001619:	89 d8                	mov    %ebx,%eax
8100161b:	6b c0 68             	imul   $0x68,%eax,%eax
8100161e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001621:	83 c2 0c             	add    $0xc,%edx
81001624:	83 ec 04             	sub    $0x4,%esp
81001627:	50                   	push   %eax
81001628:	6a 00                	push   $0x0
8100162a:	52                   	push   %edx
8100162b:	e8 3d 34 00 00       	call   81004a6d <memset>
81001630:	83 c4 10             	add    $0x10,%esp
81001633:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001636:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001639:	c9                   	leave  
8100163a:	c3                   	ret    

8100163b <__sfp>:
8100163b:	55                   	push   %ebp
8100163c:	89 e5                	mov    %esp,%ebp
8100163e:	83 ec 18             	sub    $0x18,%esp
81001641:	e8 16 02 00 00       	call   8100185c <__sfp_lock_acquire>
81001646:	a1 d4 86 00 81       	mov    0x810086d4,%eax
8100164b:	8b 40 38             	mov    0x38(%eax),%eax
8100164e:	85 c0                	test   %eax,%eax
81001650:	75 11                	jne    81001663 <__sfp+0x28>
81001652:	a1 d4 86 00 81       	mov    0x810086d4,%eax
81001657:	83 ec 0c             	sub    $0xc,%esp
8100165a:	50                   	push   %eax
8100165b:	e8 63 01 00 00       	call   810017c3 <__sinit>
81001660:	83 c4 10             	add    $0x10,%esp
81001663:	a1 d4 86 00 81       	mov    0x810086d4,%eax
81001668:	05 e0 02 00 00       	add    $0x2e0,%eax
8100166d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001670:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001673:	8b 40 08             	mov    0x8(%eax),%eax
81001676:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001679:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100167c:	8b 40 04             	mov    0x4(%eax),%eax
8100167f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001682:	eb 10                	jmp    81001694 <__sfp+0x59>
81001684:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001687:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100168b:	66 85 c0             	test   %ax,%ax
8100168e:	74 58                	je     810016e8 <__sfp+0xad>
81001690:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001694:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001698:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100169c:	79 e6                	jns    81001684 <__sfp+0x49>
8100169e:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016a1:	8b 00                	mov    (%eax),%eax
810016a3:	85 c0                	test   %eax,%eax
810016a5:	75 1e                	jne    810016c5 <__sfp+0x8a>
810016a7:	83 ec 08             	sub    $0x8,%esp
810016aa:	6a 04                	push   $0x4
810016ac:	ff 75 08             	pushl  0x8(%ebp)
810016af:	e8 18 ff ff ff       	call   810015cc <__sfmoreglue>
810016b4:	83 c4 10             	add    $0x10,%esp
810016b7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810016ba:	89 02                	mov    %eax,(%edx)
810016bc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016bf:	8b 00                	mov    (%eax),%eax
810016c1:	85 c0                	test   %eax,%eax
810016c3:	74 0a                	je     810016cf <__sfp+0x94>
810016c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016c8:	8b 00                	mov    (%eax),%eax
810016ca:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016cd:	eb a1                	jmp    81001670 <__sfp+0x35>
810016cf:	90                   	nop
810016d0:	e8 8d 01 00 00       	call   81001862 <__sfp_lock_release>
810016d5:	8b 45 08             	mov    0x8(%ebp),%eax
810016d8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810016de:	b8 00 00 00 00       	mov    $0x0,%eax
810016e3:	e9 9e 00 00 00       	jmp    81001786 <__sfp+0x14b>
810016e8:	90                   	nop
810016e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016ec:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810016f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016f5:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810016fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016fe:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001705:	e8 58 01 00 00       	call   81001862 <__sfp_lock_release>
8100170a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100170d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001713:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001716:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100171d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001720:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001727:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001731:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001734:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100173b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173e:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001745:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001748:	83 c0 5c             	add    $0x5c,%eax
8100174b:	83 ec 04             	sub    $0x4,%esp
8100174e:	6a 08                	push   $0x8
81001750:	6a 00                	push   $0x0
81001752:	50                   	push   %eax
81001753:	e8 15 33 00 00       	call   81004a6d <memset>
81001758:	83 c4 10             	add    $0x10,%esp
8100175b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100175e:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001765:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001768:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100176f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001772:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81001779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100177c:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001783:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001786:	c9                   	leave  
81001787:	c3                   	ret    

81001788 <_cleanup_r>:
81001788:	55                   	push   %ebp
81001789:	89 e5                	mov    %esp,%ebp
8100178b:	83 ec 18             	sub    $0x18,%esp
8100178e:	c7 45 f4 8c 0e 00 81 	movl   $0x81000e8c,-0xc(%ebp)
81001795:	83 ec 08             	sub    $0x8,%esp
81001798:	ff 75 f4             	pushl  -0xc(%ebp)
8100179b:	ff 75 08             	pushl  0x8(%ebp)
8100179e:	e8 68 15 00 00       	call   81002d0b <_fwalk_reent>
810017a3:	83 c4 10             	add    $0x10,%esp
810017a6:	90                   	nop
810017a7:	c9                   	leave  
810017a8:	c3                   	ret    

810017a9 <_cleanup>:
810017a9:	55                   	push   %ebp
810017aa:	89 e5                	mov    %esp,%ebp
810017ac:	83 ec 08             	sub    $0x8,%esp
810017af:	a1 d4 86 00 81       	mov    0x810086d4,%eax
810017b4:	83 ec 0c             	sub    $0xc,%esp
810017b7:	50                   	push   %eax
810017b8:	e8 cb ff ff ff       	call   81001788 <_cleanup_r>
810017bd:	83 c4 10             	add    $0x10,%esp
810017c0:	90                   	nop
810017c1:	c9                   	leave  
810017c2:	c3                   	ret    

810017c3 <__sinit>:
810017c3:	55                   	push   %ebp
810017c4:	89 e5                	mov    %esp,%ebp
810017c6:	83 ec 08             	sub    $0x8,%esp
810017c9:	e8 9a 00 00 00       	call   81001868 <__sinit_lock_acquire>
810017ce:	8b 45 08             	mov    0x8(%ebp),%eax
810017d1:	8b 40 38             	mov    0x38(%eax),%eax
810017d4:	85 c0                	test   %eax,%eax
810017d6:	74 07                	je     810017df <__sinit+0x1c>
810017d8:	e8 91 00 00 00       	call   8100186e <__sinit_lock_release>
810017dd:	eb 7b                	jmp    8100185a <__sinit+0x97>
810017df:	8b 45 08             	mov    0x8(%ebp),%eax
810017e2:	c7 40 3c 88 17 00 81 	movl   $0x81001788,0x3c(%eax)
810017e9:	8b 45 08             	mov    0x8(%ebp),%eax
810017ec:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810017f3:	00 00 00 
810017f6:	8b 45 08             	mov    0x8(%ebp),%eax
810017f9:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001800:	00 00 00 
81001803:	8b 45 08             	mov    0x8(%ebp),%eax
81001806:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100180c:	8b 45 08             	mov    0x8(%ebp),%eax
8100180f:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001815:	8b 45 08             	mov    0x8(%ebp),%eax
81001818:	8b 40 04             	mov    0x4(%eax),%eax
8100181b:	83 ec 0c             	sub    $0xc,%esp
8100181e:	50                   	push   %eax
8100181f:	e8 57 fd ff ff       	call   8100157b <stdin_init>
81001824:	83 c4 10             	add    $0x10,%esp
81001827:	8b 45 08             	mov    0x8(%ebp),%eax
8100182a:	8b 40 08             	mov    0x8(%eax),%eax
8100182d:	83 ec 0c             	sub    $0xc,%esp
81001830:	50                   	push   %eax
81001831:	e8 60 fd ff ff       	call   81001596 <stdout_init>
81001836:	83 c4 10             	add    $0x10,%esp
81001839:	8b 45 08             	mov    0x8(%ebp),%eax
8100183c:	8b 40 0c             	mov    0xc(%eax),%eax
8100183f:	83 ec 0c             	sub    $0xc,%esp
81001842:	50                   	push   %eax
81001843:	e8 69 fd ff ff       	call   810015b1 <stderr_init>
81001848:	83 c4 10             	add    $0x10,%esp
8100184b:	8b 45 08             	mov    0x8(%ebp),%eax
8100184e:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001855:	e8 14 00 00 00       	call   8100186e <__sinit_lock_release>
8100185a:	c9                   	leave  
8100185b:	c3                   	ret    

8100185c <__sfp_lock_acquire>:
8100185c:	55                   	push   %ebp
8100185d:	89 e5                	mov    %esp,%ebp
8100185f:	90                   	nop
81001860:	5d                   	pop    %ebp
81001861:	c3                   	ret    

81001862 <__sfp_lock_release>:
81001862:	55                   	push   %ebp
81001863:	89 e5                	mov    %esp,%ebp
81001865:	90                   	nop
81001866:	5d                   	pop    %ebp
81001867:	c3                   	ret    

81001868 <__sinit_lock_acquire>:
81001868:	55                   	push   %ebp
81001869:	89 e5                	mov    %esp,%ebp
8100186b:	90                   	nop
8100186c:	5d                   	pop    %ebp
8100186d:	c3                   	ret    

8100186e <__sinit_lock_release>:
8100186e:	55                   	push   %ebp
8100186f:	89 e5                	mov    %esp,%ebp
81001871:	90                   	nop
81001872:	5d                   	pop    %ebp
81001873:	c3                   	ret    

81001874 <__fp_lock>:
81001874:	55                   	push   %ebp
81001875:	89 e5                	mov    %esp,%ebp
81001877:	b8 00 00 00 00       	mov    $0x0,%eax
8100187c:	5d                   	pop    %ebp
8100187d:	c3                   	ret    

8100187e <__fp_unlock>:
8100187e:	55                   	push   %ebp
8100187f:	89 e5                	mov    %esp,%ebp
81001881:	b8 00 00 00 00       	mov    $0x0,%eax
81001886:	5d                   	pop    %ebp
81001887:	c3                   	ret    

81001888 <__fp_lock_all>:
81001888:	55                   	push   %ebp
81001889:	89 e5                	mov    %esp,%ebp
8100188b:	83 ec 08             	sub    $0x8,%esp
8100188e:	e8 c9 ff ff ff       	call   8100185c <__sfp_lock_acquire>
81001893:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81001898:	83 ec 08             	sub    $0x8,%esp
8100189b:	68 74 18 00 81       	push   $0x81001874
810018a0:	50                   	push   %eax
810018a1:	e8 fd 13 00 00       	call   81002ca3 <_fwalk>
810018a6:	83 c4 10             	add    $0x10,%esp
810018a9:	90                   	nop
810018aa:	c9                   	leave  
810018ab:	c3                   	ret    

810018ac <__fp_unlock_all>:
810018ac:	55                   	push   %ebp
810018ad:	89 e5                	mov    %esp,%ebp
810018af:	83 ec 08             	sub    $0x8,%esp
810018b2:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810018b7:	83 ec 08             	sub    $0x8,%esp
810018ba:	68 7e 18 00 81       	push   $0x8100187e
810018bf:	50                   	push   %eax
810018c0:	e8 de 13 00 00       	call   81002ca3 <_fwalk>
810018c5:	83 c4 10             	add    $0x10,%esp
810018c8:	e8 95 ff ff ff       	call   81001862 <__sfp_lock_release>
810018cd:	90                   	nop
810018ce:	c9                   	leave  
810018cf:	c3                   	ret    

810018d0 <_fopen_r>:
810018d0:	55                   	push   %ebp
810018d1:	89 e5                	mov    %esp,%ebp
810018d3:	56                   	push   %esi
810018d4:	53                   	push   %ebx
810018d5:	83 ec 10             	sub    $0x10,%esp
810018d8:	83 ec 04             	sub    $0x4,%esp
810018db:	8d 45 f0             	lea    -0x10(%ebp),%eax
810018de:	50                   	push   %eax
810018df:	ff 75 10             	pushl  0x10(%ebp)
810018e2:	ff 75 08             	pushl  0x8(%ebp)
810018e5:	e8 f8 59 00 00       	call   810072e2 <__sflags>
810018ea:	83 c4 10             	add    $0x10,%esp
810018ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018f0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810018f4:	75 0a                	jne    81001900 <_fopen_r+0x30>
810018f6:	b8 00 00 00 00       	mov    $0x0,%eax
810018fb:	e9 9e 00 00 00       	jmp    8100199e <_fopen_r+0xce>
81001900:	83 ec 0c             	sub    $0xc,%esp
81001903:	ff 75 08             	pushl  0x8(%ebp)
81001906:	e8 30 fd ff ff       	call   8100163b <__sfp>
8100190b:	83 c4 10             	add    $0x10,%esp
8100190e:	89 c3                	mov    %eax,%ebx
81001910:	85 db                	test   %ebx,%ebx
81001912:	75 0a                	jne    8100191e <_fopen_r+0x4e>
81001914:	b8 00 00 00 00       	mov    $0x0,%eax
81001919:	e9 80 00 00 00       	jmp    8100199e <_fopen_r+0xce>
8100191e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001921:	68 b6 01 00 00       	push   $0x1b6
81001926:	50                   	push   %eax
81001927:	ff 75 0c             	pushl  0xc(%ebp)
8100192a:	ff 75 08             	pushl  0x8(%ebp)
8100192d:	e8 1e 3d 00 00       	call   81005650 <_open_r>
81001932:	83 c4 10             	add    $0x10,%esp
81001935:	89 c6                	mov    %eax,%esi
81001937:	85 f6                	test   %esi,%esi
81001939:	79 17                	jns    81001952 <_fopen_r+0x82>
8100193b:	e8 1c ff ff ff       	call   8100185c <__sfp_lock_acquire>
81001940:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001946:	e8 17 ff ff ff       	call   81001862 <__sfp_lock_release>
8100194b:	b8 00 00 00 00       	mov    $0x0,%eax
81001950:	eb 4c                	jmp    8100199e <_fopen_r+0xce>
81001952:	89 f0                	mov    %esi,%eax
81001954:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001958:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100195b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100195f:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001962:	c7 43 20 02 68 00 81 	movl   $0x81006802,0x20(%ebx)
81001969:	c7 43 24 50 68 00 81 	movl   $0x81006850,0x24(%ebx)
81001970:	c7 43 28 ab 68 00 81 	movl   $0x810068ab,0x28(%ebx)
81001977:	c7 43 2c f5 68 00 81 	movl   $0x810068f5,0x2c(%ebx)
8100197e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001982:	98                   	cwtl   
81001983:	25 00 01 00 00       	and    $0x100,%eax
81001988:	85 c0                	test   %eax,%eax
8100198a:	74 10                	je     8100199c <_fopen_r+0xcc>
8100198c:	6a 02                	push   $0x2
8100198e:	6a 00                	push   $0x0
81001990:	53                   	push   %ebx
81001991:	ff 75 08             	pushl  0x8(%ebp)
81001994:	e8 1b 09 00 00       	call   810022b4 <_fseek_r>
81001999:	83 c4 10             	add    $0x10,%esp
8100199c:	89 d8                	mov    %ebx,%eax
8100199e:	8d 65 f8             	lea    -0x8(%ebp),%esp
810019a1:	5b                   	pop    %ebx
810019a2:	5e                   	pop    %esi
810019a3:	5d                   	pop    %ebp
810019a4:	c3                   	ret    

810019a5 <fopen>:
810019a5:	55                   	push   %ebp
810019a6:	89 e5                	mov    %esp,%ebp
810019a8:	83 ec 08             	sub    $0x8,%esp
810019ab:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810019b0:	83 ec 04             	sub    $0x4,%esp
810019b3:	ff 75 0c             	pushl  0xc(%ebp)
810019b6:	ff 75 08             	pushl  0x8(%ebp)
810019b9:	50                   	push   %eax
810019ba:	e8 11 ff ff ff       	call   810018d0 <_fopen_r>
810019bf:	83 c4 10             	add    $0x10,%esp
810019c2:	c9                   	leave  
810019c3:	c3                   	ret    

810019c4 <_fiprintf_r>:
810019c4:	55                   	push   %ebp
810019c5:	89 e5                	mov    %esp,%ebp
810019c7:	83 ec 18             	sub    $0x18,%esp
810019ca:	8d 45 14             	lea    0x14(%ebp),%eax
810019cd:	89 45 f0             	mov    %eax,-0x10(%ebp)
810019d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019d3:	50                   	push   %eax
810019d4:	ff 75 10             	pushl  0x10(%ebp)
810019d7:	ff 75 0c             	pushl  0xc(%ebp)
810019da:	ff 75 08             	pushl  0x8(%ebp)
810019dd:	e8 2e 33 00 00       	call   81004d10 <_vfiprintf_r>
810019e2:	83 c4 10             	add    $0x10,%esp
810019e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019eb:	c9                   	leave  
810019ec:	c3                   	ret    

810019ed <fiprintf>:
810019ed:	55                   	push   %ebp
810019ee:	89 e5                	mov    %esp,%ebp
810019f0:	83 ec 18             	sub    $0x18,%esp
810019f3:	8d 45 10             	lea    0x10(%ebp),%eax
810019f6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810019f9:	8b 55 f0             	mov    -0x10(%ebp),%edx
810019fc:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81001a01:	52                   	push   %edx
81001a02:	ff 75 0c             	pushl  0xc(%ebp)
81001a05:	ff 75 08             	pushl  0x8(%ebp)
81001a08:	50                   	push   %eax
81001a09:	e8 02 33 00 00       	call   81004d10 <_vfiprintf_r>
81001a0e:	83 c4 10             	add    $0x10,%esp
81001a11:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a17:	c9                   	leave  
81001a18:	c3                   	ret    

81001a19 <_fputs_r>:
81001a19:	55                   	push   %ebp
81001a1a:	89 e5                	mov    %esp,%ebp
81001a1c:	83 ec 28             	sub    $0x28,%esp
81001a1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a22:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001a25:	83 ec 0c             	sub    $0xc,%esp
81001a28:	ff 75 0c             	pushl  0xc(%ebp)
81001a2b:	e8 a0 50 00 00       	call   81006ad0 <strlen>
81001a30:	83 c4 10             	add    $0x10,%esp
81001a33:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001a36:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a39:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001a3c:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001a3f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001a42:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001a49:	8b 45 08             	mov    0x8(%ebp),%eax
81001a4c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a4f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001a53:	74 18                	je     81001a6d <_fputs_r+0x54>
81001a55:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a58:	8b 40 38             	mov    0x38(%eax),%eax
81001a5b:	85 c0                	test   %eax,%eax
81001a5d:	75 0e                	jne    81001a6d <_fputs_r+0x54>
81001a5f:	83 ec 0c             	sub    $0xc,%esp
81001a62:	ff 75 f4             	pushl  -0xc(%ebp)
81001a65:	e8 59 fd ff ff       	call   810017c3 <__sinit>
81001a6a:	83 c4 10             	add    $0x10,%esp
81001a6d:	8b 45 10             	mov    0x10(%ebp),%eax
81001a70:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001a74:	98                   	cwtl   
81001a75:	25 00 20 00 00       	and    $0x2000,%eax
81001a7a:	85 c0                	test   %eax,%eax
81001a7c:	75 24                	jne    81001aa2 <_fputs_r+0x89>
81001a7e:	8b 45 10             	mov    0x10(%ebp),%eax
81001a81:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001a85:	80 cc 20             	or     $0x20,%ah
81001a88:	89 c2                	mov    %eax,%edx
81001a8a:	8b 45 10             	mov    0x10(%ebp),%eax
81001a8d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001a91:	8b 45 10             	mov    0x10(%ebp),%eax
81001a94:	8b 40 64             	mov    0x64(%eax),%eax
81001a97:	80 e4 df             	and    $0xdf,%ah
81001a9a:	89 c2                	mov    %eax,%edx
81001a9c:	8b 45 10             	mov    0x10(%ebp),%eax
81001a9f:	89 50 64             	mov    %edx,0x64(%eax)
81001aa2:	83 ec 04             	sub    $0x4,%esp
81001aa5:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001aa8:	50                   	push   %eax
81001aa9:	ff 75 10             	pushl  0x10(%ebp)
81001aac:	ff 75 08             	pushl  0x8(%ebp)
81001aaf:	e8 51 0d 00 00       	call   81002805 <__sfvwrite_r>
81001ab4:	83 c4 10             	add    $0x10,%esp
81001ab7:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001aba:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001abd:	c9                   	leave  
81001abe:	c3                   	ret    

81001abf <fputs>:
81001abf:	55                   	push   %ebp
81001ac0:	89 e5                	mov    %esp,%ebp
81001ac2:	83 ec 08             	sub    $0x8,%esp
81001ac5:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81001aca:	83 ec 04             	sub    $0x4,%esp
81001acd:	ff 75 0c             	pushl  0xc(%ebp)
81001ad0:	ff 75 08             	pushl  0x8(%ebp)
81001ad3:	50                   	push   %eax
81001ad4:	e8 40 ff ff ff       	call   81001a19 <_fputs_r>
81001ad9:	83 c4 10             	add    $0x10,%esp
81001adc:	c9                   	leave  
81001add:	c3                   	ret    

81001ade <_fread_r>:
81001ade:	55                   	push   %ebp
81001adf:	89 e5                	mov    %esp,%ebp
81001ae1:	57                   	push   %edi
81001ae2:	56                   	push   %esi
81001ae3:	53                   	push   %ebx
81001ae4:	83 ec 2c             	sub    $0x2c,%esp
81001ae7:	8b 45 14             	mov    0x14(%ebp),%eax
81001aea:	0f af 45 10          	imul   0x10(%ebp),%eax
81001aee:	89 c3                	mov    %eax,%ebx
81001af0:	85 db                	test   %ebx,%ebx
81001af2:	75 0a                	jne    81001afe <_fread_r+0x20>
81001af4:	b8 00 00 00 00       	mov    $0x0,%eax
81001af9:	e9 4d 02 00 00       	jmp    81001d4b <_fread_r+0x26d>
81001afe:	8b 45 08             	mov    0x8(%ebp),%eax
81001b01:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001b04:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001b08:	74 18                	je     81001b22 <_fread_r+0x44>
81001b0a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001b0d:	8b 40 38             	mov    0x38(%eax),%eax
81001b10:	85 c0                	test   %eax,%eax
81001b12:	75 0e                	jne    81001b22 <_fread_r+0x44>
81001b14:	83 ec 0c             	sub    $0xc,%esp
81001b17:	ff 75 e4             	pushl  -0x1c(%ebp)
81001b1a:	e8 a4 fc ff ff       	call   810017c3 <__sinit>
81001b1f:	83 c4 10             	add    $0x10,%esp
81001b22:	8b 45 18             	mov    0x18(%ebp),%eax
81001b25:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b29:	98                   	cwtl   
81001b2a:	25 00 20 00 00       	and    $0x2000,%eax
81001b2f:	85 c0                	test   %eax,%eax
81001b31:	75 24                	jne    81001b57 <_fread_r+0x79>
81001b33:	8b 45 18             	mov    0x18(%ebp),%eax
81001b36:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b3a:	80 cc 20             	or     $0x20,%ah
81001b3d:	89 c2                	mov    %eax,%edx
81001b3f:	8b 45 18             	mov    0x18(%ebp),%eax
81001b42:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001b46:	8b 45 18             	mov    0x18(%ebp),%eax
81001b49:	8b 40 64             	mov    0x64(%eax),%eax
81001b4c:	80 e4 df             	and    $0xdf,%ah
81001b4f:	89 c2                	mov    %eax,%edx
81001b51:	8b 45 18             	mov    0x18(%ebp),%eax
81001b54:	89 50 64             	mov    %edx,0x64(%eax)
81001b57:	8b 45 18             	mov    0x18(%ebp),%eax
81001b5a:	8b 40 04             	mov    0x4(%eax),%eax
81001b5d:	85 c0                	test   %eax,%eax
81001b5f:	79 0a                	jns    81001b6b <_fread_r+0x8d>
81001b61:	8b 45 18             	mov    0x18(%ebp),%eax
81001b64:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001b6b:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001b6e:	8b 75 0c             	mov    0xc(%ebp),%esi
81001b71:	8b 45 18             	mov    0x18(%ebp),%eax
81001b74:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b78:	98                   	cwtl   
81001b79:	83 e0 02             	and    $0x2,%eax
81001b7c:	85 c0                	test   %eax,%eax
81001b7e:	0f 84 88 01 00 00    	je     81001d0c <_fread_r+0x22e>
81001b84:	8b 45 18             	mov    0x18(%ebp),%eax
81001b87:	8b 40 04             	mov    0x4(%eax),%eax
81001b8a:	39 c3                	cmp    %eax,%ebx
81001b8c:	0f 46 c3             	cmovbe %ebx,%eax
81001b8f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b92:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001b95:	8b 45 18             	mov    0x18(%ebp),%eax
81001b98:	8b 00                	mov    (%eax),%eax
81001b9a:	83 ec 04             	sub    $0x4,%esp
81001b9d:	52                   	push   %edx
81001b9e:	50                   	push   %eax
81001b9f:	56                   	push   %esi
81001ba0:	e8 f3 2d 00 00       	call   81004998 <memcpy>
81001ba5:	83 c4 10             	add    $0x10,%esp
81001ba8:	8b 45 18             	mov    0x18(%ebp),%eax
81001bab:	8b 10                	mov    (%eax),%edx
81001bad:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001bb0:	01 c2                	add    %eax,%edx
81001bb2:	8b 45 18             	mov    0x18(%ebp),%eax
81001bb5:	89 10                	mov    %edx,(%eax)
81001bb7:	8b 45 18             	mov    0x18(%ebp),%eax
81001bba:	8b 40 04             	mov    0x4(%eax),%eax
81001bbd:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001bc0:	89 c2                	mov    %eax,%edx
81001bc2:	8b 45 18             	mov    0x18(%ebp),%eax
81001bc5:	89 50 04             	mov    %edx,0x4(%eax)
81001bc8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001bcb:	01 c6                	add    %eax,%esi
81001bcd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001bd0:	29 c3                	sub    %eax,%ebx
81001bd2:	8b 45 18             	mov    0x18(%ebp),%eax
81001bd5:	8b 40 30             	mov    0x30(%eax),%eax
81001bd8:	85 c0                	test   %eax,%eax
81001bda:	0f 84 d0 00 00 00    	je     81001cb0 <_fread_r+0x1d2>
81001be0:	85 db                	test   %ebx,%ebx
81001be2:	0f 84 c8 00 00 00    	je     81001cb0 <_fread_r+0x1d2>
81001be8:	8b 45 18             	mov    0x18(%ebp),%eax
81001beb:	8b 40 30             	mov    0x30(%eax),%eax
81001bee:	8b 55 18             	mov    0x18(%ebp),%edx
81001bf1:	83 c2 40             	add    $0x40,%edx
81001bf4:	39 d0                	cmp    %edx,%eax
81001bf6:	74 15                	je     81001c0d <_fread_r+0x12f>
81001bf8:	8b 45 18             	mov    0x18(%ebp),%eax
81001bfb:	8b 40 30             	mov    0x30(%eax),%eax
81001bfe:	83 ec 08             	sub    $0x8,%esp
81001c01:	50                   	push   %eax
81001c02:	ff 75 08             	pushl  0x8(%ebp)
81001c05:	e8 6e 01 00 00       	call   81001d78 <_free_r>
81001c0a:	83 c4 10             	add    $0x10,%esp
81001c0d:	8b 45 18             	mov    0x18(%ebp),%eax
81001c10:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001c17:	e9 94 00 00 00       	jmp    81001cb0 <_fread_r+0x1d2>
81001c1c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001c23:	8b 45 18             	mov    0x18(%ebp),%eax
81001c26:	8b 40 10             	mov    0x10(%eax),%eax
81001c29:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001c2c:	8b 45 18             	mov    0x18(%ebp),%eax
81001c2f:	8b 00                	mov    (%eax),%eax
81001c31:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001c34:	8b 45 18             	mov    0x18(%ebp),%eax
81001c37:	8b 40 14             	mov    0x14(%eax),%eax
81001c3a:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001c3d:	8b 45 18             	mov    0x18(%ebp),%eax
81001c40:	89 70 10             	mov    %esi,0x10(%eax)
81001c43:	89 da                	mov    %ebx,%edx
81001c45:	8b 45 18             	mov    0x18(%ebp),%eax
81001c48:	89 50 14             	mov    %edx,0x14(%eax)
81001c4b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4e:	89 30                	mov    %esi,(%eax)
81001c50:	83 ec 08             	sub    $0x8,%esp
81001c53:	ff 75 18             	pushl  0x18(%ebp)
81001c56:	ff 75 08             	pushl  0x8(%ebp)
81001c59:	e8 2a 46 00 00       	call   81006288 <__srefill_r>
81001c5e:	83 c4 10             	add    $0x10,%esp
81001c61:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001c64:	8b 45 18             	mov    0x18(%ebp),%eax
81001c67:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001c6a:	89 50 10             	mov    %edx,0x10(%eax)
81001c6d:	8b 45 18             	mov    0x18(%ebp),%eax
81001c70:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001c73:	89 50 14             	mov    %edx,0x14(%eax)
81001c76:	8b 45 18             	mov    0x18(%ebp),%eax
81001c79:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001c7c:	89 10                	mov    %edx,(%eax)
81001c7e:	8b 45 18             	mov    0x18(%ebp),%eax
81001c81:	8b 40 04             	mov    0x4(%eax),%eax
81001c84:	29 c3                	sub    %eax,%ebx
81001c86:	8b 45 18             	mov    0x18(%ebp),%eax
81001c89:	8b 40 04             	mov    0x4(%eax),%eax
81001c8c:	01 c6                	add    %eax,%esi
81001c8e:	8b 45 18             	mov    0x18(%ebp),%eax
81001c91:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c98:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001c9c:	74 12                	je     81001cb0 <_fread_r+0x1d2>
81001c9e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ca1:	29 d8                	sub    %ebx,%eax
81001ca3:	ba 00 00 00 00       	mov    $0x0,%edx
81001ca8:	f7 75 10             	divl   0x10(%ebp)
81001cab:	e9 9b 00 00 00       	jmp    81001d4b <_fread_r+0x26d>
81001cb0:	85 db                	test   %ebx,%ebx
81001cb2:	0f 85 64 ff ff ff    	jne    81001c1c <_fread_r+0x13e>
81001cb8:	e9 8b 00 00 00       	jmp    81001d48 <_fread_r+0x26a>
81001cbd:	89 fa                	mov    %edi,%edx
81001cbf:	8b 45 18             	mov    0x18(%ebp),%eax
81001cc2:	8b 00                	mov    (%eax),%eax
81001cc4:	83 ec 04             	sub    $0x4,%esp
81001cc7:	52                   	push   %edx
81001cc8:	50                   	push   %eax
81001cc9:	56                   	push   %esi
81001cca:	e8 c9 2c 00 00       	call   81004998 <memcpy>
81001ccf:	83 c4 10             	add    $0x10,%esp
81001cd2:	8b 45 18             	mov    0x18(%ebp),%eax
81001cd5:	8b 00                	mov    (%eax),%eax
81001cd7:	89 fa                	mov    %edi,%edx
81001cd9:	01 c2                	add    %eax,%edx
81001cdb:	8b 45 18             	mov    0x18(%ebp),%eax
81001cde:	89 10                	mov    %edx,(%eax)
81001ce0:	89 f8                	mov    %edi,%eax
81001ce2:	01 c6                	add    %eax,%esi
81001ce4:	89 f8                	mov    %edi,%eax
81001ce6:	29 c3                	sub    %eax,%ebx
81001ce8:	83 ec 08             	sub    $0x8,%esp
81001ceb:	ff 75 18             	pushl  0x18(%ebp)
81001cee:	ff 75 08             	pushl  0x8(%ebp)
81001cf1:	e8 92 45 00 00       	call   81006288 <__srefill_r>
81001cf6:	83 c4 10             	add    $0x10,%esp
81001cf9:	85 c0                	test   %eax,%eax
81001cfb:	74 0f                	je     81001d0c <_fread_r+0x22e>
81001cfd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d00:	29 d8                	sub    %ebx,%eax
81001d02:	ba 00 00 00 00       	mov    $0x0,%edx
81001d07:	f7 75 10             	divl   0x10(%ebp)
81001d0a:	eb 3f                	jmp    81001d4b <_fread_r+0x26d>
81001d0c:	8b 45 18             	mov    0x18(%ebp),%eax
81001d0f:	8b 78 04             	mov    0x4(%eax),%edi
81001d12:	89 f8                	mov    %edi,%eax
81001d14:	39 c3                	cmp    %eax,%ebx
81001d16:	77 a5                	ja     81001cbd <_fread_r+0x1df>
81001d18:	8b 45 18             	mov    0x18(%ebp),%eax
81001d1b:	8b 00                	mov    (%eax),%eax
81001d1d:	83 ec 04             	sub    $0x4,%esp
81001d20:	53                   	push   %ebx
81001d21:	50                   	push   %eax
81001d22:	56                   	push   %esi
81001d23:	e8 70 2c 00 00       	call   81004998 <memcpy>
81001d28:	83 c4 10             	add    $0x10,%esp
81001d2b:	8b 45 18             	mov    0x18(%ebp),%eax
81001d2e:	8b 40 04             	mov    0x4(%eax),%eax
81001d31:	29 d8                	sub    %ebx,%eax
81001d33:	89 c2                	mov    %eax,%edx
81001d35:	8b 45 18             	mov    0x18(%ebp),%eax
81001d38:	89 50 04             	mov    %edx,0x4(%eax)
81001d3b:	8b 45 18             	mov    0x18(%ebp),%eax
81001d3e:	8b 00                	mov    (%eax),%eax
81001d40:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001d43:	8b 45 18             	mov    0x18(%ebp),%eax
81001d46:	89 10                	mov    %edx,(%eax)
81001d48:	8b 45 14             	mov    0x14(%ebp),%eax
81001d4b:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001d4e:	5b                   	pop    %ebx
81001d4f:	5e                   	pop    %esi
81001d50:	5f                   	pop    %edi
81001d51:	5d                   	pop    %ebp
81001d52:	c3                   	ret    

81001d53 <fread>:
81001d53:	55                   	push   %ebp
81001d54:	89 e5                	mov    %esp,%ebp
81001d56:	83 ec 08             	sub    $0x8,%esp
81001d59:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81001d5e:	83 ec 0c             	sub    $0xc,%esp
81001d61:	ff 75 14             	pushl  0x14(%ebp)
81001d64:	ff 75 10             	pushl  0x10(%ebp)
81001d67:	ff 75 0c             	pushl  0xc(%ebp)
81001d6a:	ff 75 08             	pushl  0x8(%ebp)
81001d6d:	50                   	push   %eax
81001d6e:	e8 6b fd ff ff       	call   81001ade <_fread_r>
81001d73:	83 c4 20             	add    $0x20,%esp
81001d76:	c9                   	leave  
81001d77:	c3                   	ret    

81001d78 <_free_r>:
81001d78:	55                   	push   %ebp
81001d79:	89 e5                	mov    %esp,%ebp
81001d7b:	53                   	push   %ebx
81001d7c:	83 ec 34             	sub    $0x34,%esp
81001d7f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001d83:	0f 84 c4 03 00 00    	je     8100214d <_free_r+0x3d5>
81001d89:	83 ec 0c             	sub    $0xc,%esp
81001d8c:	ff 75 08             	pushl  0x8(%ebp)
81001d8f:	e8 61 2d 00 00       	call   81004af5 <__malloc_lock>
81001d94:	83 c4 10             	add    $0x10,%esp
81001d97:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d9a:	83 e8 08             	sub    $0x8,%eax
81001d9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001da0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001da3:	8b 40 04             	mov    0x4(%eax),%eax
81001da6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001da9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dac:	83 e0 fe             	and    $0xfffffffe,%eax
81001daf:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001db2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001db5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001db8:	01 d0                	add    %edx,%eax
81001dba:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001dbd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001dc0:	8b 40 04             	mov    0x4(%eax),%eax
81001dc3:	83 e0 fc             	and    $0xfffffffc,%eax
81001dc6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001dc9:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81001dce:	8b 40 08             	mov    0x8(%eax),%eax
81001dd1:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001dd4:	0f 85 94 00 00 00    	jne    81001e6e <_free_r+0xf6>
81001dda:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ddd:	01 45 f0             	add    %eax,-0x10(%ebp)
81001de0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001de3:	83 e0 01             	and    $0x1,%eax
81001de6:	85 c0                	test   %eax,%eax
81001de8:	75 3a                	jne    81001e24 <_free_r+0xac>
81001dea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ded:	8b 00                	mov    (%eax),%eax
81001def:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001df2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001df5:	f7 d8                	neg    %eax
81001df7:	01 45 f4             	add    %eax,-0xc(%ebp)
81001dfa:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001dfd:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e03:	8b 40 0c             	mov    0xc(%eax),%eax
81001e06:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001e09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e0c:	8b 40 08             	mov    0x8(%eax),%eax
81001e0f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e12:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e15:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001e18:	89 50 0c             	mov    %edx,0xc(%eax)
81001e1b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e1e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e21:	89 50 08             	mov    %edx,0x8(%eax)
81001e24:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e27:	83 c8 01             	or     $0x1,%eax
81001e2a:	89 c2                	mov    %eax,%edx
81001e2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e2f:	89 50 04             	mov    %edx,0x4(%eax)
81001e32:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
81001e37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e3a:	89 42 08             	mov    %eax,0x8(%edx)
81001e3d:	a1 a8 92 00 81       	mov    0x810092a8,%eax
81001e42:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001e45:	72 14                	jb     81001e5b <_free_r+0xe3>
81001e47:	a1 80 99 00 81       	mov    0x81009980,%eax
81001e4c:	83 ec 08             	sub    $0x8,%esp
81001e4f:	50                   	push   %eax
81001e50:	ff 75 08             	pushl  0x8(%ebp)
81001e53:	e8 fb 02 00 00       	call   81002153 <_malloc_trim_r>
81001e58:	83 c4 10             	add    $0x10,%esp
81001e5b:	83 ec 0c             	sub    $0xc,%esp
81001e5e:	ff 75 08             	pushl  0x8(%ebp)
81001e61:	e8 95 2c 00 00       	call   81004afb <__malloc_unlock>
81001e66:	83 c4 10             	add    $0x10,%esp
81001e69:	e9 e0 02 00 00       	jmp    8100214e <_free_r+0x3d6>
81001e6e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001e71:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001e74:	89 50 04             	mov    %edx,0x4(%eax)
81001e77:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001e7e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e81:	83 e0 01             	and    $0x1,%eax
81001e84:	85 c0                	test   %eax,%eax
81001e86:	75 52                	jne    81001eda <_free_r+0x162>
81001e88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e8b:	8b 00                	mov    (%eax),%eax
81001e8d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001e90:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001e93:	f7 d8                	neg    %eax
81001e95:	01 45 f4             	add    %eax,-0xc(%ebp)
81001e98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001e9b:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ea1:	8b 40 08             	mov    0x8(%eax),%eax
81001ea4:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
81001ea9:	39 d0                	cmp    %edx,%eax
81001eab:	75 09                	jne    81001eb6 <_free_r+0x13e>
81001ead:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001eb4:	eb 24                	jmp    81001eda <_free_r+0x162>
81001eb6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb9:	8b 40 0c             	mov    0xc(%eax),%eax
81001ebc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ebf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ec2:	8b 40 08             	mov    0x8(%eax),%eax
81001ec5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ec8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ecb:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001ece:	89 50 0c             	mov    %edx,0xc(%eax)
81001ed1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ed4:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ed7:	89 50 08             	mov    %edx,0x8(%eax)
81001eda:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001edd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ee0:	01 d0                	add    %edx,%eax
81001ee2:	8b 40 04             	mov    0x4(%eax),%eax
81001ee5:	83 e0 01             	and    $0x1,%eax
81001ee8:	85 c0                	test   %eax,%eax
81001eea:	75 75                	jne    81001f61 <_free_r+0x1e9>
81001eec:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001eef:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ef2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001ef6:	75 45                	jne    81001f3d <_free_r+0x1c5>
81001ef8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001efb:	8b 40 08             	mov    0x8(%eax),%eax
81001efe:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
81001f03:	39 d0                	cmp    %edx,%eax
81001f05:	75 36                	jne    81001f3d <_free_r+0x1c5>
81001f07:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001f0e:	b8 a8 8e 00 81       	mov    $0x81008ea8,%eax
81001f13:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001f16:	89 50 0c             	mov    %edx,0xc(%eax)
81001f19:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
81001f1e:	8b 40 0c             	mov    0xc(%eax),%eax
81001f21:	89 42 08             	mov    %eax,0x8(%edx)
81001f24:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
81001f29:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f2c:	89 50 0c             	mov    %edx,0xc(%eax)
81001f2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f32:	8b 50 0c             	mov    0xc(%eax),%edx
81001f35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f38:	89 50 08             	mov    %edx,0x8(%eax)
81001f3b:	eb 24                	jmp    81001f61 <_free_r+0x1e9>
81001f3d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f40:	8b 40 0c             	mov    0xc(%eax),%eax
81001f43:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f46:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f49:	8b 40 08             	mov    0x8(%eax),%eax
81001f4c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f4f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f52:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f55:	89 50 0c             	mov    %edx,0xc(%eax)
81001f58:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f5b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f5e:	89 50 08             	mov    %edx,0x8(%eax)
81001f61:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f64:	83 c8 01             	or     $0x1,%eax
81001f67:	89 c2                	mov    %eax,%edx
81001f69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f6c:	89 50 04             	mov    %edx,0x4(%eax)
81001f6f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001f72:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f75:	01 c2                	add    %eax,%edx
81001f77:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f7a:	89 02                	mov    %eax,(%edx)
81001f7c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001f80:	0f 85 b7 01 00 00    	jne    8100213d <_free_r+0x3c5>
81001f86:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001f8d:	77 7f                	ja     8100200e <_free_r+0x296>
81001f8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f92:	c1 e8 03             	shr    $0x3,%eax
81001f95:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001f98:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81001f9d:	8b 58 04             	mov    0x4(%eax),%ebx
81001fa0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001fa3:	8d 50 03             	lea    0x3(%eax),%edx
81001fa6:	85 c0                	test   %eax,%eax
81001fa8:	0f 48 c2             	cmovs  %edx,%eax
81001fab:	c1 f8 02             	sar    $0x2,%eax
81001fae:	ba 01 00 00 00       	mov    $0x1,%edx
81001fb3:	89 c1                	mov    %eax,%ecx
81001fb5:	d3 e2                	shl    %cl,%edx
81001fb7:	89 d0                	mov    %edx,%eax
81001fb9:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
81001fbe:	09 d8                	or     %ebx,%eax
81001fc0:	89 42 04             	mov    %eax,0x4(%edx)
81001fc3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001fc6:	83 c0 01             	add    $0x1,%eax
81001fc9:	01 c0                	add    %eax,%eax
81001fcb:	c1 e0 02             	shl    $0x2,%eax
81001fce:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
81001fd3:	83 e8 08             	sub    $0x8,%eax
81001fd6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fd9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fdc:	8b 40 08             	mov    0x8(%eax),%eax
81001fdf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fe2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fe5:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001fe8:	89 50 0c             	mov    %edx,0xc(%eax)
81001feb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fee:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ff1:	89 50 08             	mov    %edx,0x8(%eax)
81001ff4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ff7:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001ffa:	89 50 08             	mov    %edx,0x8(%eax)
81001ffd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002000:	8b 50 08             	mov    0x8(%eax),%edx
81002003:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002006:	89 50 0c             	mov    %edx,0xc(%eax)
81002009:	e9 2f 01 00 00       	jmp    8100213d <_free_r+0x3c5>
8100200e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002011:	c1 e8 09             	shr    $0x9,%eax
81002014:	85 c0                	test   %eax,%eax
81002016:	75 08                	jne    81002020 <_free_r+0x2a8>
81002018:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100201b:	c1 e8 03             	shr    $0x3,%eax
8100201e:	eb 77                	jmp    81002097 <_free_r+0x31f>
81002020:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002023:	c1 e8 09             	shr    $0x9,%eax
81002026:	83 f8 04             	cmp    $0x4,%eax
81002029:	77 0b                	ja     81002036 <_free_r+0x2be>
8100202b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100202e:	c1 e8 06             	shr    $0x6,%eax
81002031:	83 c0 38             	add    $0x38,%eax
81002034:	eb 61                	jmp    81002097 <_free_r+0x31f>
81002036:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002039:	c1 e8 09             	shr    $0x9,%eax
8100203c:	83 f8 14             	cmp    $0x14,%eax
8100203f:	77 0b                	ja     8100204c <_free_r+0x2d4>
81002041:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002044:	c1 e8 09             	shr    $0x9,%eax
81002047:	83 c0 5b             	add    $0x5b,%eax
8100204a:	eb 4b                	jmp    81002097 <_free_r+0x31f>
8100204c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100204f:	c1 e8 09             	shr    $0x9,%eax
81002052:	83 f8 54             	cmp    $0x54,%eax
81002055:	77 0b                	ja     81002062 <_free_r+0x2ea>
81002057:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100205a:	c1 e8 0c             	shr    $0xc,%eax
8100205d:	83 c0 6e             	add    $0x6e,%eax
81002060:	eb 35                	jmp    81002097 <_free_r+0x31f>
81002062:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002065:	c1 e8 09             	shr    $0x9,%eax
81002068:	3d 54 01 00 00       	cmp    $0x154,%eax
8100206d:	77 0b                	ja     8100207a <_free_r+0x302>
8100206f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002072:	c1 e8 0f             	shr    $0xf,%eax
81002075:	83 c0 77             	add    $0x77,%eax
81002078:	eb 1d                	jmp    81002097 <_free_r+0x31f>
8100207a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100207d:	c1 e8 09             	shr    $0x9,%eax
81002080:	3d 54 05 00 00       	cmp    $0x554,%eax
81002085:	77 0b                	ja     81002092 <_free_r+0x31a>
81002087:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100208a:	c1 e8 12             	shr    $0x12,%eax
8100208d:	83 c0 7c             	add    $0x7c,%eax
81002090:	eb 05                	jmp    81002097 <_free_r+0x31f>
81002092:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002097:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100209a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100209d:	83 c0 01             	add    $0x1,%eax
810020a0:	01 c0                	add    %eax,%eax
810020a2:	c1 e0 02             	shl    $0x2,%eax
810020a5:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
810020aa:	83 e8 08             	sub    $0x8,%eax
810020ad:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020b0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020b3:	8b 40 08             	mov    0x8(%eax),%eax
810020b6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020b9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020bc:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810020bf:	75 36                	jne    810020f7 <_free_r+0x37f>
810020c1:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810020c6:	8b 58 04             	mov    0x4(%eax),%ebx
810020c9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020cc:	8d 50 03             	lea    0x3(%eax),%edx
810020cf:	85 c0                	test   %eax,%eax
810020d1:	0f 48 c2             	cmovs  %edx,%eax
810020d4:	c1 f8 02             	sar    $0x2,%eax
810020d7:	ba 01 00 00 00       	mov    $0x1,%edx
810020dc:	89 c1                	mov    %eax,%ecx
810020de:	d3 e2                	shl    %cl,%edx
810020e0:	89 d0                	mov    %edx,%eax
810020e2:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
810020e7:	09 d8                	or     %ebx,%eax
810020e9:	89 42 04             	mov    %eax,0x4(%edx)
810020ec:	eb 28                	jmp    81002116 <_free_r+0x39e>
810020ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020f1:	8b 40 08             	mov    0x8(%eax),%eax
810020f4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020f7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020fa:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810020fd:	74 0e                	je     8100210d <_free_r+0x395>
810020ff:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002102:	8b 40 04             	mov    0x4(%eax),%eax
81002105:	83 e0 fc             	and    $0xfffffffc,%eax
81002108:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100210b:	72 e1                	jb     810020ee <_free_r+0x376>
8100210d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002110:	8b 40 0c             	mov    0xc(%eax),%eax
81002113:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002116:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002119:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100211c:	89 50 0c             	mov    %edx,0xc(%eax)
8100211f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002122:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002125:	89 50 08             	mov    %edx,0x8(%eax)
81002128:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100212b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100212e:	89 50 08             	mov    %edx,0x8(%eax)
81002131:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002134:	8b 50 08             	mov    0x8(%eax),%edx
81002137:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100213a:	89 50 0c             	mov    %edx,0xc(%eax)
8100213d:	83 ec 0c             	sub    $0xc,%esp
81002140:	ff 75 08             	pushl  0x8(%ebp)
81002143:	e8 b3 29 00 00       	call   81004afb <__malloc_unlock>
81002148:	83 c4 10             	add    $0x10,%esp
8100214b:	eb 01                	jmp    8100214e <_free_r+0x3d6>
8100214d:	90                   	nop
8100214e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002151:	c9                   	leave  
81002152:	c3                   	ret    

81002153 <_malloc_trim_r>:
81002153:	55                   	push   %ebp
81002154:	89 e5                	mov    %esp,%ebp
81002156:	83 ec 28             	sub    $0x28,%esp
81002159:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002160:	83 ec 0c             	sub    $0xc,%esp
81002163:	ff 75 08             	pushl  0x8(%ebp)
81002166:	e8 8a 29 00 00       	call   81004af5 <__malloc_lock>
8100216b:	83 c4 10             	add    $0x10,%esp
8100216e:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81002173:	8b 40 08             	mov    0x8(%eax),%eax
81002176:	8b 40 04             	mov    0x4(%eax),%eax
81002179:	83 e0 fc             	and    $0xfffffffc,%eax
8100217c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100217f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002182:	2b 45 0c             	sub    0xc(%ebp),%eax
81002185:	89 c2                	mov    %eax,%edx
81002187:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100218a:	01 d0                	add    %edx,%eax
8100218c:	83 e8 11             	sub    $0x11,%eax
8100218f:	ba 00 00 00 00       	mov    $0x0,%edx
81002194:	f7 75 f4             	divl   -0xc(%ebp)
81002197:	83 e8 01             	sub    $0x1,%eax
8100219a:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8100219e:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021a4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810021a7:	7d 18                	jge    810021c1 <_malloc_trim_r+0x6e>
810021a9:	83 ec 0c             	sub    $0xc,%esp
810021ac:	ff 75 08             	pushl  0x8(%ebp)
810021af:	e8 47 29 00 00       	call   81004afb <__malloc_unlock>
810021b4:	83 c4 10             	add    $0x10,%esp
810021b7:	b8 00 00 00 00       	mov    $0x0,%eax
810021bc:	e9 f1 00 00 00       	jmp    810022b2 <_malloc_trim_r+0x15f>
810021c1:	83 ec 08             	sub    $0x8,%esp
810021c4:	6a 00                	push   $0x0
810021c6:	ff 75 08             	pushl  0x8(%ebp)
810021c9:	e8 3b 43 00 00       	call   81006509 <_sbrk_r>
810021ce:	83 c4 10             	add    $0x10,%esp
810021d1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021d4:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810021d9:	8b 50 08             	mov    0x8(%eax),%edx
810021dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021df:	01 d0                	add    %edx,%eax
810021e1:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810021e4:	74 18                	je     810021fe <_malloc_trim_r+0xab>
810021e6:	83 ec 0c             	sub    $0xc,%esp
810021e9:	ff 75 08             	pushl  0x8(%ebp)
810021ec:	e8 0a 29 00 00       	call   81004afb <__malloc_unlock>
810021f1:	83 c4 10             	add    $0x10,%esp
810021f4:	b8 00 00 00 00       	mov    $0x0,%eax
810021f9:	e9 b4 00 00 00       	jmp    810022b2 <_malloc_trim_r+0x15f>
810021fe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002201:	f7 d8                	neg    %eax
81002203:	83 ec 08             	sub    $0x8,%esp
81002206:	50                   	push   %eax
81002207:	ff 75 08             	pushl  0x8(%ebp)
8100220a:	e8 fa 42 00 00       	call   81006509 <_sbrk_r>
8100220f:	83 c4 10             	add    $0x10,%esp
81002212:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002215:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002219:	75 61                	jne    8100227c <_malloc_trim_r+0x129>
8100221b:	83 ec 08             	sub    $0x8,%esp
8100221e:	6a 00                	push   $0x0
81002220:	ff 75 08             	pushl  0x8(%ebp)
81002223:	e8 e1 42 00 00       	call   81006509 <_sbrk_r>
81002228:	83 c4 10             	add    $0x10,%esp
8100222b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100222e:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81002233:	8b 50 08             	mov    0x8(%eax),%edx
81002236:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002239:	29 d0                	sub    %edx,%eax
8100223b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100223e:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002242:	7e 23                	jle    81002267 <_malloc_trim_r+0x114>
81002244:	8b 15 ac 92 00 81    	mov    0x810092ac,%edx
8100224a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100224d:	29 d0                	sub    %edx,%eax
8100224f:	a3 a0 99 00 81       	mov    %eax,0x810099a0
81002254:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002257:	83 c8 01             	or     $0x1,%eax
8100225a:	89 c2                	mov    %eax,%edx
8100225c:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81002261:	8b 40 08             	mov    0x8(%eax),%eax
81002264:	89 50 04             	mov    %edx,0x4(%eax)
81002267:	83 ec 0c             	sub    $0xc,%esp
8100226a:	ff 75 08             	pushl  0x8(%ebp)
8100226d:	e8 89 28 00 00       	call   81004afb <__malloc_unlock>
81002272:	83 c4 10             	add    $0x10,%esp
81002275:	b8 00 00 00 00       	mov    $0x0,%eax
8100227a:	eb 36                	jmp    810022b2 <_malloc_trim_r+0x15f>
8100227c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100227f:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002282:	83 c8 01             	or     $0x1,%eax
81002285:	89 c2                	mov    %eax,%edx
81002287:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
8100228c:	8b 40 08             	mov    0x8(%eax),%eax
8100228f:	89 50 04             	mov    %edx,0x4(%eax)
81002292:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81002297:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100229a:	a3 a0 99 00 81       	mov    %eax,0x810099a0
8100229f:	83 ec 0c             	sub    $0xc,%esp
810022a2:	ff 75 08             	pushl  0x8(%ebp)
810022a5:	e8 51 28 00 00       	call   81004afb <__malloc_unlock>
810022aa:	83 c4 10             	add    $0x10,%esp
810022ad:	b8 01 00 00 00       	mov    $0x1,%eax
810022b2:	c9                   	leave  
810022b3:	c3                   	ret    

810022b4 <_fseek_r>:
810022b4:	55                   	push   %ebp
810022b5:	89 e5                	mov    %esp,%ebp
810022b7:	83 ec 08             	sub    $0x8,%esp
810022ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810022bd:	ff 75 14             	pushl  0x14(%ebp)
810022c0:	ff 75 10             	pushl  0x10(%ebp)
810022c3:	50                   	push   %eax
810022c4:	ff 75 08             	pushl  0x8(%ebp)
810022c7:	e8 25 00 00 00       	call   810022f1 <_fseeko_r>
810022cc:	83 c4 10             	add    $0x10,%esp
810022cf:	c9                   	leave  
810022d0:	c3                   	ret    

810022d1 <fseek>:
810022d1:	55                   	push   %ebp
810022d2:	89 e5                	mov    %esp,%ebp
810022d4:	83 ec 08             	sub    $0x8,%esp
810022d7:	8b 55 08             	mov    0x8(%ebp),%edx
810022da:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810022df:	ff 75 10             	pushl  0x10(%ebp)
810022e2:	ff 75 0c             	pushl  0xc(%ebp)
810022e5:	52                   	push   %edx
810022e6:	50                   	push   %eax
810022e7:	e8 c8 ff ff ff       	call   810022b4 <_fseek_r>
810022ec:	83 c4 10             	add    $0x10,%esp
810022ef:	c9                   	leave  
810022f0:	c3                   	ret    

810022f1 <_fseeko_r>:
810022f1:	55                   	push   %ebp
810022f2:	89 e5                	mov    %esp,%ebp
810022f4:	56                   	push   %esi
810022f5:	53                   	push   %ebx
810022f6:	83 ec 60             	sub    $0x60,%esp
810022f9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810022fc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002303:	8b 45 08             	mov    0x8(%ebp),%eax
81002306:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002309:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100230d:	74 18                	je     81002327 <_fseeko_r+0x36>
8100230f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002312:	8b 40 38             	mov    0x38(%eax),%eax
81002315:	85 c0                	test   %eax,%eax
81002317:	75 0e                	jne    81002327 <_fseeko_r+0x36>
81002319:	83 ec 0c             	sub    $0xc,%esp
8100231c:	ff 75 e4             	pushl  -0x1c(%ebp)
8100231f:	e8 9f f4 ff ff       	call   810017c3 <__sinit>
81002324:	83 c4 10             	add    $0x10,%esp
81002327:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100232b:	98                   	cwtl   
8100232c:	25 00 01 00 00       	and    $0x100,%eax
81002331:	85 c0                	test   %eax,%eax
81002333:	74 1b                	je     81002350 <_fseeko_r+0x5f>
81002335:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002339:	98                   	cwtl   
8100233a:	83 e0 08             	and    $0x8,%eax
8100233d:	85 c0                	test   %eax,%eax
8100233f:	74 0f                	je     81002350 <_fseeko_r+0x5f>
81002341:	83 ec 08             	sub    $0x8,%esp
81002344:	53                   	push   %ebx
81002345:	ff 75 08             	pushl  0x8(%ebp)
81002348:	e8 89 ee ff ff       	call   810011d6 <_fflush_r>
8100234d:	83 c4 10             	add    $0x10,%esp
81002350:	8b 43 28             	mov    0x28(%ebx),%eax
81002353:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002356:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100235a:	75 13                	jne    8100236f <_fseeko_r+0x7e>
8100235c:	8b 45 08             	mov    0x8(%ebp),%eax
8100235f:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81002365:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100236a:	e9 2c 04 00 00       	jmp    8100279b <_fseeko_r+0x4aa>
8100236f:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002373:	0f 84 bc 00 00 00    	je     81002435 <_fseeko_r+0x144>
81002379:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
8100237d:	0f 8f bb 00 00 00    	jg     8100243e <_fseeko_r+0x14d>
81002383:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002387:	0f 84 a8 00 00 00    	je     81002435 <_fseeko_r+0x144>
8100238d:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81002391:	0f 85 a7 00 00 00    	jne    8100243e <_fseeko_r+0x14d>
81002397:	83 ec 08             	sub    $0x8,%esp
8100239a:	53                   	push   %ebx
8100239b:	ff 75 08             	pushl  0x8(%ebp)
8100239e:	e8 33 ee ff ff       	call   810011d6 <_fflush_r>
810023a3:	83 c4 10             	add    $0x10,%esp
810023a6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023aa:	98                   	cwtl   
810023ab:	25 00 10 00 00       	and    $0x1000,%eax
810023b0:	85 c0                	test   %eax,%eax
810023b2:	74 08                	je     810023bc <_fseeko_r+0xcb>
810023b4:	8b 43 50             	mov    0x50(%ebx),%eax
810023b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810023ba:	eb 26                	jmp    810023e2 <_fseeko_r+0xf1>
810023bc:	8b 43 1c             	mov    0x1c(%ebx),%eax
810023bf:	6a 01                	push   $0x1
810023c1:	6a 00                	push   $0x0
810023c3:	50                   	push   %eax
810023c4:	ff 75 08             	pushl  0x8(%ebp)
810023c7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810023ca:	ff d0                	call   *%eax
810023cc:	83 c4 10             	add    $0x10,%esp
810023cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810023d2:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810023d6:	75 0a                	jne    810023e2 <_fseeko_r+0xf1>
810023d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810023dd:	e9 b9 03 00 00       	jmp    8100279b <_fseeko_r+0x4aa>
810023e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023e6:	98                   	cwtl   
810023e7:	83 e0 04             	and    $0x4,%eax
810023ea:	85 c0                	test   %eax,%eax
810023ec:	74 15                	je     81002403 <_fseeko_r+0x112>
810023ee:	8b 43 04             	mov    0x4(%ebx),%eax
810023f1:	29 45 f0             	sub    %eax,-0x10(%ebp)
810023f4:	8b 43 30             	mov    0x30(%ebx),%eax
810023f7:	85 c0                	test   %eax,%eax
810023f9:	74 24                	je     8100241f <_fseeko_r+0x12e>
810023fb:	8b 43 3c             	mov    0x3c(%ebx),%eax
810023fe:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002401:	eb 1c                	jmp    8100241f <_fseeko_r+0x12e>
81002403:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002407:	98                   	cwtl   
81002408:	83 e0 08             	and    $0x8,%eax
8100240b:	85 c0                	test   %eax,%eax
8100240d:	74 10                	je     8100241f <_fseeko_r+0x12e>
8100240f:	8b 03                	mov    (%ebx),%eax
81002411:	85 c0                	test   %eax,%eax
81002413:	74 0a                	je     8100241f <_fseeko_r+0x12e>
81002415:	8b 03                	mov    (%ebx),%eax
81002417:	8b 53 10             	mov    0x10(%ebx),%edx
8100241a:	29 d0                	sub    %edx,%eax
8100241c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100241f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002422:	01 45 10             	add    %eax,0x10(%ebp)
81002425:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
8100242c:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002433:	eb 1c                	jmp    81002451 <_fseeko_r+0x160>
81002435:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100243c:	eb 13                	jmp    81002451 <_fseeko_r+0x160>
8100243e:	8b 45 08             	mov    0x8(%ebp),%eax
81002441:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81002447:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100244c:	e9 4a 03 00 00       	jmp    8100279b <_fseeko_r+0x4aa>
81002451:	8b 43 10             	mov    0x10(%ebx),%eax
81002454:	85 c0                	test   %eax,%eax
81002456:	75 0f                	jne    81002467 <_fseeko_r+0x176>
81002458:	83 ec 08             	sub    $0x8,%esp
8100245b:	53                   	push   %ebx
8100245c:	ff 75 08             	pushl  0x8(%ebp)
8100245f:	e8 dd 17 00 00       	call   81003c41 <__smakebuf_r>
81002464:	83 c4 10             	add    $0x10,%esp
81002467:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100246b:	98                   	cwtl   
8100246c:	25 1a 08 00 00       	and    $0x81a,%eax
81002471:	85 c0                	test   %eax,%eax
81002473:	0f 85 7d 02 00 00    	jne    810026f6 <_fseeko_r+0x405>
81002479:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100247d:	98                   	cwtl   
8100247e:	25 00 04 00 00       	and    $0x400,%eax
81002483:	85 c0                	test   %eax,%eax
81002485:	75 5f                	jne    810024e6 <_fseeko_r+0x1f5>
81002487:	81 7d e0 ab 68 00 81 	cmpl   $0x810068ab,-0x20(%ebp)
8100248e:	75 34                	jne    810024c4 <_fseeko_r+0x1d3>
81002490:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002494:	66 85 c0             	test   %ax,%ax
81002497:	78 2b                	js     810024c4 <_fseeko_r+0x1d3>
81002499:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100249d:	98                   	cwtl   
8100249e:	83 ec 04             	sub    $0x4,%esp
810024a1:	8d 55 98             	lea    -0x68(%ebp),%edx
810024a4:	52                   	push   %edx
810024a5:	50                   	push   %eax
810024a6:	ff 75 08             	pushl  0x8(%ebp)
810024a9:	e8 14 03 00 00       	call   810027c2 <_fstat_r>
810024ae:	83 c4 10             	add    $0x10,%esp
810024b1:	85 c0                	test   %eax,%eax
810024b3:	75 0f                	jne    810024c4 <_fseeko_r+0x1d3>
810024b5:	8b 45 9c             	mov    -0x64(%ebp),%eax
810024b8:	25 00 f0 00 00       	and    $0xf000,%eax
810024bd:	3d 00 80 00 00       	cmp    $0x8000,%eax
810024c2:	74 10                	je     810024d4 <_fseeko_r+0x1e3>
810024c4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024c8:	80 cc 08             	or     $0x8,%ah
810024cb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810024cf:	e9 2f 02 00 00       	jmp    81002703 <_fseeko_r+0x412>
810024d4:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
810024db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024df:	80 cc 04             	or     $0x4,%ah
810024e2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810024e6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810024ea:	75 08                	jne    810024f4 <_fseeko_r+0x203>
810024ec:	8b 45 10             	mov    0x10(%ebp),%eax
810024ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024f2:	eb 2b                	jmp    8100251f <_fseeko_r+0x22e>
810024f4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810024f8:	98                   	cwtl   
810024f9:	83 ec 04             	sub    $0x4,%esp
810024fc:	8d 55 98             	lea    -0x68(%ebp),%edx
810024ff:	52                   	push   %edx
81002500:	50                   	push   %eax
81002501:	ff 75 08             	pushl  0x8(%ebp)
81002504:	e8 b9 02 00 00       	call   810027c2 <_fstat_r>
81002509:	83 c4 10             	add    $0x10,%esp
8100250c:	85 c0                	test   %eax,%eax
8100250e:	0f 85 e5 01 00 00    	jne    810026f9 <_fseeko_r+0x408>
81002514:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002517:	8b 45 10             	mov    0x10(%ebp),%eax
8100251a:	01 d0                	add    %edx,%eax
8100251c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100251f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002523:	75 49                	jne    8100256e <_fseeko_r+0x27d>
81002525:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002529:	98                   	cwtl   
8100252a:	25 00 10 00 00       	and    $0x1000,%eax
8100252f:	85 c0                	test   %eax,%eax
81002531:	74 08                	je     8100253b <_fseeko_r+0x24a>
81002533:	8b 43 50             	mov    0x50(%ebx),%eax
81002536:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002539:	eb 20                	jmp    8100255b <_fseeko_r+0x26a>
8100253b:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100253e:	6a 01                	push   $0x1
81002540:	6a 00                	push   $0x0
81002542:	50                   	push   %eax
81002543:	ff 75 08             	pushl  0x8(%ebp)
81002546:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002549:	ff d0                	call   *%eax
8100254b:	83 c4 10             	add    $0x10,%esp
8100254e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002551:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002555:	0f 84 a1 01 00 00    	je     810026fc <_fseeko_r+0x40b>
8100255b:	8b 43 04             	mov    0x4(%ebx),%eax
8100255e:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002561:	8b 43 30             	mov    0x30(%ebx),%eax
81002564:	85 c0                	test   %eax,%eax
81002566:	74 06                	je     8100256e <_fseeko_r+0x27d>
81002568:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100256b:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100256e:	8b 43 30             	mov    0x30(%ebx),%eax
81002571:	85 c0                	test   %eax,%eax
81002573:	74 22                	je     81002597 <_fseeko_r+0x2a6>
81002575:	8b 43 04             	mov    0x4(%ebx),%eax
81002578:	01 45 f0             	add    %eax,-0x10(%ebp)
8100257b:	8b 43 38             	mov    0x38(%ebx),%eax
8100257e:	8b 53 10             	mov    0x10(%ebx),%edx
81002581:	29 d0                	sub    %edx,%eax
81002583:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002586:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002589:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100258c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100258f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002592:	01 45 ec             	add    %eax,-0x14(%ebp)
81002595:	eb 19                	jmp    810025b0 <_fseeko_r+0x2bf>
81002597:	8b 03                	mov    (%ebx),%eax
81002599:	8b 53 10             	mov    0x10(%ebx),%edx
8100259c:	29 d0                	sub    %edx,%eax
8100259e:	89 45 ec             	mov    %eax,-0x14(%ebp)
810025a1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810025a4:	2b 45 ec             	sub    -0x14(%ebp),%eax
810025a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810025aa:	8b 43 04             	mov    0x4(%ebx),%eax
810025ad:	01 45 ec             	add    %eax,-0x14(%ebp)
810025b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025b3:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810025b6:	7c 7c                	jl     81002634 <_fseeko_r+0x343>
810025b8:	8b 55 f0             	mov    -0x10(%ebp),%edx
810025bb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810025be:	01 c2                	add    %eax,%edx
810025c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025c3:	39 c2                	cmp    %eax,%edx
810025c5:	76 6d                	jbe    81002634 <_fseeko_r+0x343>
810025c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025ca:	2b 45 f0             	sub    -0x10(%ebp),%eax
810025cd:	89 c6                	mov    %eax,%esi
810025cf:	8b 43 10             	mov    0x10(%ebx),%eax
810025d2:	89 f2                	mov    %esi,%edx
810025d4:	01 d0                	add    %edx,%eax
810025d6:	89 03                	mov    %eax,(%ebx)
810025d8:	89 f2                	mov    %esi,%edx
810025da:	8b 45 ec             	mov    -0x14(%ebp),%eax
810025dd:	29 d0                	sub    %edx,%eax
810025df:	89 43 04             	mov    %eax,0x4(%ebx)
810025e2:	8b 43 30             	mov    0x30(%ebx),%eax
810025e5:	85 c0                	test   %eax,%eax
810025e7:	74 23                	je     8100260c <_fseeko_r+0x31b>
810025e9:	8b 53 30             	mov    0x30(%ebx),%edx
810025ec:	8d 43 40             	lea    0x40(%ebx),%eax
810025ef:	39 c2                	cmp    %eax,%edx
810025f1:	74 12                	je     81002605 <_fseeko_r+0x314>
810025f3:	8b 43 30             	mov    0x30(%ebx),%eax
810025f6:	83 ec 08             	sub    $0x8,%esp
810025f9:	50                   	push   %eax
810025fa:	ff 75 08             	pushl  0x8(%ebp)
810025fd:	e8 76 f7 ff ff       	call   81001d78 <_free_r>
81002602:	83 c4 10             	add    $0x10,%esp
81002605:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100260c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002610:	83 e0 df             	and    $0xffffffdf,%eax
81002613:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002617:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100261a:	83 ec 04             	sub    $0x4,%esp
8100261d:	6a 08                	push   $0x8
8100261f:	6a 00                	push   $0x0
81002621:	50                   	push   %eax
81002622:	e8 46 24 00 00       	call   81004a6d <memset>
81002627:	83 c4 10             	add    $0x10,%esp
8100262a:	b8 00 00 00 00       	mov    $0x0,%eax
8100262f:	e9 67 01 00 00       	jmp    8100279b <_fseeko_r+0x4aa>
81002634:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002637:	f7 d8                	neg    %eax
81002639:	23 45 f4             	and    -0xc(%ebp),%eax
8100263c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100263f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002642:	6a 00                	push   $0x0
81002644:	ff 75 f0             	pushl  -0x10(%ebp)
81002647:	50                   	push   %eax
81002648:	ff 75 08             	pushl  0x8(%ebp)
8100264b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100264e:	ff d0                	call   *%eax
81002650:	83 c4 10             	add    $0x10,%esp
81002653:	83 f8 ff             	cmp    $0xffffffff,%eax
81002656:	0f 84 a3 00 00 00    	je     810026ff <_fseeko_r+0x40e>
8100265c:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002663:	8b 43 10             	mov    0x10(%ebx),%eax
81002666:	89 03                	mov    %eax,(%ebx)
81002668:	8b 43 30             	mov    0x30(%ebx),%eax
8100266b:	85 c0                	test   %eax,%eax
8100266d:	74 23                	je     81002692 <_fseeko_r+0x3a1>
8100266f:	8b 53 30             	mov    0x30(%ebx),%edx
81002672:	8d 43 40             	lea    0x40(%ebx),%eax
81002675:	39 c2                	cmp    %eax,%edx
81002677:	74 12                	je     8100268b <_fseeko_r+0x39a>
81002679:	8b 43 30             	mov    0x30(%ebx),%eax
8100267c:	83 ec 08             	sub    $0x8,%esp
8100267f:	50                   	push   %eax
81002680:	ff 75 08             	pushl  0x8(%ebp)
81002683:	e8 f0 f6 ff ff       	call   81001d78 <_free_r>
81002688:	83 c4 10             	add    $0x10,%esp
8100268b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002692:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002696:	83 e0 df             	and    $0xffffffdf,%eax
81002699:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100269d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026a0:	2b 45 f0             	sub    -0x10(%ebp),%eax
810026a3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026a6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810026aa:	74 2d                	je     810026d9 <_fseeko_r+0x3e8>
810026ac:	83 ec 08             	sub    $0x8,%esp
810026af:	53                   	push   %ebx
810026b0:	ff 75 08             	pushl  0x8(%ebp)
810026b3:	e8 d0 3b 00 00       	call   81006288 <__srefill_r>
810026b8:	83 c4 10             	add    $0x10,%esp
810026bb:	85 c0                	test   %eax,%eax
810026bd:	75 43                	jne    81002702 <_fseeko_r+0x411>
810026bf:	8b 43 04             	mov    0x4(%ebx),%eax
810026c2:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810026c5:	77 3b                	ja     81002702 <_fseeko_r+0x411>
810026c7:	8b 13                	mov    (%ebx),%edx
810026c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026cc:	01 d0                	add    %edx,%eax
810026ce:	89 03                	mov    %eax,(%ebx)
810026d0:	8b 43 04             	mov    0x4(%ebx),%eax
810026d3:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026d6:	89 43 04             	mov    %eax,0x4(%ebx)
810026d9:	8d 43 5c             	lea    0x5c(%ebx),%eax
810026dc:	83 ec 04             	sub    $0x4,%esp
810026df:	6a 08                	push   $0x8
810026e1:	6a 00                	push   $0x0
810026e3:	50                   	push   %eax
810026e4:	e8 84 23 00 00       	call   81004a6d <memset>
810026e9:	83 c4 10             	add    $0x10,%esp
810026ec:	b8 00 00 00 00       	mov    $0x0,%eax
810026f1:	e9 a5 00 00 00       	jmp    8100279b <_fseeko_r+0x4aa>
810026f6:	90                   	nop
810026f7:	eb 0a                	jmp    81002703 <_fseeko_r+0x412>
810026f9:	90                   	nop
810026fa:	eb 07                	jmp    81002703 <_fseeko_r+0x412>
810026fc:	90                   	nop
810026fd:	eb 04                	jmp    81002703 <_fseeko_r+0x412>
810026ff:	90                   	nop
81002700:	eb 01                	jmp    81002703 <_fseeko_r+0x412>
81002702:	90                   	nop
81002703:	83 ec 08             	sub    $0x8,%esp
81002706:	53                   	push   %ebx
81002707:	ff 75 08             	pushl  0x8(%ebp)
8100270a:	e8 c7 ea ff ff       	call   810011d6 <_fflush_r>
8100270f:	83 c4 10             	add    $0x10,%esp
81002712:	85 c0                	test   %eax,%eax
81002714:	75 1a                	jne    81002730 <_fseeko_r+0x43f>
81002716:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002719:	ff 75 14             	pushl  0x14(%ebp)
8100271c:	ff 75 10             	pushl  0x10(%ebp)
8100271f:	50                   	push   %eax
81002720:	ff 75 08             	pushl  0x8(%ebp)
81002723:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002726:	ff d0                	call   *%eax
81002728:	83 c4 10             	add    $0x10,%esp
8100272b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100272e:	75 07                	jne    81002737 <_fseeko_r+0x446>
81002730:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002735:	eb 64                	jmp    8100279b <_fseeko_r+0x4aa>
81002737:	8b 43 30             	mov    0x30(%ebx),%eax
8100273a:	85 c0                	test   %eax,%eax
8100273c:	74 23                	je     81002761 <_fseeko_r+0x470>
8100273e:	8b 53 30             	mov    0x30(%ebx),%edx
81002741:	8d 43 40             	lea    0x40(%ebx),%eax
81002744:	39 c2                	cmp    %eax,%edx
81002746:	74 12                	je     8100275a <_fseeko_r+0x469>
81002748:	8b 43 30             	mov    0x30(%ebx),%eax
8100274b:	83 ec 08             	sub    $0x8,%esp
8100274e:	50                   	push   %eax
8100274f:	ff 75 08             	pushl  0x8(%ebp)
81002752:	e8 21 f6 ff ff       	call   81001d78 <_free_r>
81002757:	83 c4 10             	add    $0x10,%esp
8100275a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002761:	8b 43 10             	mov    0x10(%ebx),%eax
81002764:	89 03                	mov    %eax,(%ebx)
81002766:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100276d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002771:	83 e0 df             	and    $0xffffffdf,%eax
81002774:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002778:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100277c:	80 e4 f7             	and    $0xf7,%ah
8100277f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002783:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002786:	83 ec 04             	sub    $0x4,%esp
81002789:	6a 08                	push   $0x8
8100278b:	6a 00                	push   $0x0
8100278d:	50                   	push   %eax
8100278e:	e8 da 22 00 00       	call   81004a6d <memset>
81002793:	83 c4 10             	add    $0x10,%esp
81002796:	b8 00 00 00 00       	mov    $0x0,%eax
8100279b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100279e:	5b                   	pop    %ebx
8100279f:	5e                   	pop    %esi
810027a0:	5d                   	pop    %ebp
810027a1:	c3                   	ret    

810027a2 <fseeko>:
810027a2:	55                   	push   %ebp
810027a3:	89 e5                	mov    %esp,%ebp
810027a5:	83 ec 08             	sub    $0x8,%esp
810027a8:	8b 55 08             	mov    0x8(%ebp),%edx
810027ab:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810027b0:	ff 75 10             	pushl  0x10(%ebp)
810027b3:	ff 75 0c             	pushl  0xc(%ebp)
810027b6:	52                   	push   %edx
810027b7:	50                   	push   %eax
810027b8:	e8 34 fb ff ff       	call   810022f1 <_fseeko_r>
810027bd:	83 c4 10             	add    $0x10,%esp
810027c0:	c9                   	leave  
810027c1:	c3                   	ret    

810027c2 <_fstat_r>:
810027c2:	55                   	push   %ebp
810027c3:	89 e5                	mov    %esp,%ebp
810027c5:	83 ec 18             	sub    $0x18,%esp
810027c8:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
810027cf:	00 00 00 
810027d2:	83 ec 08             	sub    $0x8,%esp
810027d5:	ff 75 10             	pushl  0x10(%ebp)
810027d8:	ff 75 0c             	pushl  0xc(%ebp)
810027db:	e8 34 e4 ff ff       	call   81000c14 <fstat>
810027e0:	83 c4 10             	add    $0x10,%esp
810027e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027e6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810027ea:	75 14                	jne    81002800 <_fstat_r+0x3e>
810027ec:	a1 cc 99 00 81       	mov    0x810099cc,%eax
810027f1:	85 c0                	test   %eax,%eax
810027f3:	74 0b                	je     81002800 <_fstat_r+0x3e>
810027f5:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
810027fb:	8b 45 08             	mov    0x8(%ebp),%eax
810027fe:	89 10                	mov    %edx,(%eax)
81002800:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002803:	c9                   	leave  
81002804:	c3                   	ret    

81002805 <__sfvwrite_r>:
81002805:	55                   	push   %ebp
81002806:	89 e5                	mov    %esp,%ebp
81002808:	57                   	push   %edi
81002809:	56                   	push   %esi
8100280a:	53                   	push   %ebx
8100280b:	83 ec 3c             	sub    $0x3c,%esp
8100280e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002811:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81002818:	8b 45 10             	mov    0x10(%ebp),%eax
8100281b:	8b 78 08             	mov    0x8(%eax),%edi
8100281e:	85 ff                	test   %edi,%edi
81002820:	75 0a                	jne    8100282c <__sfvwrite_r+0x27>
81002822:	b8 00 00 00 00       	mov    $0x0,%eax
81002827:	e9 6f 04 00 00       	jmp    81002c9b <__sfvwrite_r+0x496>
8100282c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002830:	98                   	cwtl   
81002831:	83 e0 08             	and    $0x8,%eax
81002834:	85 c0                	test   %eax,%eax
81002836:	74 07                	je     8100283f <__sfvwrite_r+0x3a>
81002838:	8b 43 10             	mov    0x10(%ebx),%eax
8100283b:	85 c0                	test   %eax,%eax
8100283d:	75 1d                	jne    8100285c <__sfvwrite_r+0x57>
8100283f:	83 ec 08             	sub    $0x8,%esp
81002842:	53                   	push   %ebx
81002843:	ff 75 08             	pushl  0x8(%ebp)
81002846:	e8 dd 47 00 00       	call   81007028 <__swsetup_r>
8100284b:	83 c4 10             	add    $0x10,%esp
8100284e:	85 c0                	test   %eax,%eax
81002850:	74 0a                	je     8100285c <__sfvwrite_r+0x57>
81002852:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002857:	e9 3f 04 00 00       	jmp    81002c9b <__sfvwrite_r+0x496>
8100285c:	8b 45 10             	mov    0x10(%ebp),%eax
8100285f:	8b 00                	mov    (%eax),%eax
81002861:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002864:	bf 00 00 00 00       	mov    $0x0,%edi
81002869:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100286d:	98                   	cwtl   
8100286e:	83 e0 02             	and    $0x2,%eax
81002871:	85 c0                	test   %eax,%eax
81002873:	74 68                	je     810028dd <__sfvwrite_r+0xd8>
81002875:	eb 11                	jmp    81002888 <__sfvwrite_r+0x83>
81002877:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100287a:	8b 08                	mov    (%eax),%ecx
8100287c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100287f:	8b 78 04             	mov    0x4(%eax),%edi
81002882:	83 c0 08             	add    $0x8,%eax
81002885:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002888:	85 ff                	test   %edi,%edi
8100288a:	74 eb                	je     81002877 <__sfvwrite_r+0x72>
8100288c:	8b 4b 24             	mov    0x24(%ebx),%ecx
8100288f:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81002894:	39 c7                	cmp    %eax,%edi
81002896:	0f 46 c7             	cmovbe %edi,%eax
81002899:	89 c2                	mov    %eax,%edx
8100289b:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100289e:	52                   	push   %edx
8100289f:	ff 75 c4             	pushl  -0x3c(%ebp)
810028a2:	50                   	push   %eax
810028a3:	ff 75 08             	pushl  0x8(%ebp)
810028a6:	ff d1                	call   *%ecx
810028a8:	83 c4 10             	add    $0x10,%esp
810028ab:	89 c6                	mov    %eax,%esi
810028ad:	85 f6                	test   %esi,%esi
810028af:	0f 8e cf 03 00 00    	jle    81002c84 <__sfvwrite_r+0x47f>
810028b5:	89 f0                	mov    %esi,%eax
810028b7:	01 45 c4             	add    %eax,-0x3c(%ebp)
810028ba:	89 f0                	mov    %esi,%eax
810028bc:	29 c7                	sub    %eax,%edi
810028be:	8b 45 10             	mov    0x10(%ebp),%eax
810028c1:	8b 40 08             	mov    0x8(%eax),%eax
810028c4:	89 f2                	mov    %esi,%edx
810028c6:	29 d0                	sub    %edx,%eax
810028c8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810028cb:	89 41 08             	mov    %eax,0x8(%ecx)
810028ce:	8b 45 10             	mov    0x10(%ebp),%eax
810028d1:	8b 40 08             	mov    0x8(%eax),%eax
810028d4:	85 c0                	test   %eax,%eax
810028d6:	75 b0                	jne    81002888 <__sfvwrite_r+0x83>
810028d8:	e9 a0 03 00 00       	jmp    81002c7d <__sfvwrite_r+0x478>
810028dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028e1:	98                   	cwtl   
810028e2:	83 e0 01             	and    $0x1,%eax
810028e5:	85 c0                	test   %eax,%eax
810028e7:	0f 85 44 02 00 00    	jne    81002b31 <__sfvwrite_r+0x32c>
810028ed:	eb 11                	jmp    81002900 <__sfvwrite_r+0xfb>
810028ef:	8b 45 c0             	mov    -0x40(%ebp),%eax
810028f2:	8b 08                	mov    (%eax),%ecx
810028f4:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810028f7:	8b 78 04             	mov    0x4(%eax),%edi
810028fa:	83 c0 08             	add    $0x8,%eax
810028fd:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002900:	85 ff                	test   %edi,%edi
81002902:	74 eb                	je     810028ef <__sfvwrite_r+0xea>
81002904:	8b 73 08             	mov    0x8(%ebx),%esi
81002907:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100290b:	98                   	cwtl   
8100290c:	25 00 02 00 00       	and    $0x200,%eax
81002911:	85 c0                	test   %eax,%eax
81002913:	0f 84 4f 01 00 00    	je     81002a68 <__sfvwrite_r+0x263>
81002919:	89 f0                	mov    %esi,%eax
8100291b:	39 c7                	cmp    %eax,%edi
8100291d:	0f 82 12 01 00 00    	jb     81002a35 <__sfvwrite_r+0x230>
81002923:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002927:	98                   	cwtl   
81002928:	25 80 04 00 00       	and    $0x480,%eax
8100292d:	85 c0                	test   %eax,%eax
8100292f:	0f 84 00 01 00 00    	je     81002a35 <__sfvwrite_r+0x230>
81002935:	8b 03                	mov    (%ebx),%eax
81002937:	8b 53 10             	mov    0x10(%ebx),%edx
8100293a:	29 d0                	sub    %edx,%eax
8100293c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100293f:	8b 53 14             	mov    0x14(%ebx),%edx
81002942:	89 d0                	mov    %edx,%eax
81002944:	01 c0                	add    %eax,%eax
81002946:	01 d0                	add    %edx,%eax
81002948:	89 c2                	mov    %eax,%edx
8100294a:	c1 ea 1f             	shr    $0x1f,%edx
8100294d:	01 d0                	add    %edx,%eax
8100294f:	d1 f8                	sar    %eax
81002951:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002954:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002957:	01 f8                	add    %edi,%eax
81002959:	8d 50 01             	lea    0x1(%eax),%edx
8100295c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100295f:	39 c2                	cmp    %eax,%edx
81002961:	76 0b                	jbe    8100296e <__sfvwrite_r+0x169>
81002963:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002966:	01 f8                	add    %edi,%eax
81002968:	83 c0 01             	add    $0x1,%eax
8100296b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100296e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002972:	98                   	cwtl   
81002973:	25 00 04 00 00       	and    $0x400,%eax
81002978:	85 c0                	test   %eax,%eax
8100297a:	74 4f                	je     810029cb <__sfvwrite_r+0x1c6>
8100297c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100297f:	83 ec 08             	sub    $0x8,%esp
81002982:	50                   	push   %eax
81002983:	ff 75 08             	pushl  0x8(%ebp)
81002986:	e8 02 17 00 00       	call   8100408d <_malloc_r>
8100298b:	83 c4 10             	add    $0x10,%esp
8100298e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002991:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002995:	75 0e                	jne    810029a5 <__sfvwrite_r+0x1a0>
81002997:	8b 45 08             	mov    0x8(%ebp),%eax
8100299a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810029a0:	e9 e6 02 00 00       	jmp    81002c8b <__sfvwrite_r+0x486>
810029a5:	8b 55 d0             	mov    -0x30(%ebp),%edx
810029a8:	8b 43 10             	mov    0x10(%ebx),%eax
810029ab:	83 ec 04             	sub    $0x4,%esp
810029ae:	52                   	push   %edx
810029af:	50                   	push   %eax
810029b0:	ff 75 dc             	pushl  -0x24(%ebp)
810029b3:	e8 e0 1f 00 00       	call   81004998 <memcpy>
810029b8:	83 c4 10             	add    $0x10,%esp
810029bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029bf:	66 25 7f fb          	and    $0xfb7f,%ax
810029c3:	0c 80                	or     $0x80,%al
810029c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810029c9:	eb 49                	jmp    81002a14 <__sfvwrite_r+0x20f>
810029cb:	8b 55 d8             	mov    -0x28(%ebp),%edx
810029ce:	8b 43 10             	mov    0x10(%ebx),%eax
810029d1:	83 ec 04             	sub    $0x4,%esp
810029d4:	52                   	push   %edx
810029d5:	50                   	push   %eax
810029d6:	ff 75 08             	pushl  0x8(%ebp)
810029d9:	e8 0c 2e 00 00       	call   810057ea <_realloc_r>
810029de:	83 c4 10             	add    $0x10,%esp
810029e1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810029e4:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810029e8:	75 2a                	jne    81002a14 <__sfvwrite_r+0x20f>
810029ea:	8b 43 10             	mov    0x10(%ebx),%eax
810029ed:	83 ec 08             	sub    $0x8,%esp
810029f0:	50                   	push   %eax
810029f1:	ff 75 08             	pushl  0x8(%ebp)
810029f4:	e8 7f f3 ff ff       	call   81001d78 <_free_r>
810029f9:	83 c4 10             	add    $0x10,%esp
810029fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a00:	24 7f                	and    $0x7f,%al
81002a02:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a06:	8b 45 08             	mov    0x8(%ebp),%eax
81002a09:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002a0f:	e9 77 02 00 00       	jmp    81002c8b <__sfvwrite_r+0x486>
81002a14:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a17:	89 43 10             	mov    %eax,0x10(%ebx)
81002a1a:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002a1d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a20:	01 d0                	add    %edx,%eax
81002a22:	89 03                	mov    %eax,(%ebx)
81002a24:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a27:	89 43 14             	mov    %eax,0x14(%ebx)
81002a2a:	89 fe                	mov    %edi,%esi
81002a2c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a2f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002a32:	89 43 08             	mov    %eax,0x8(%ebx)
81002a35:	89 f0                	mov    %esi,%eax
81002a37:	39 c7                	cmp    %eax,%edi
81002a39:	73 02                	jae    81002a3d <__sfvwrite_r+0x238>
81002a3b:	89 fe                	mov    %edi,%esi
81002a3d:	89 f2                	mov    %esi,%edx
81002a3f:	8b 03                	mov    (%ebx),%eax
81002a41:	83 ec 04             	sub    $0x4,%esp
81002a44:	52                   	push   %edx
81002a45:	ff 75 c4             	pushl  -0x3c(%ebp)
81002a48:	50                   	push   %eax
81002a49:	e8 92 1f 00 00       	call   810049e0 <memmove>
81002a4e:	83 c4 10             	add    $0x10,%esp
81002a51:	8b 43 08             	mov    0x8(%ebx),%eax
81002a54:	29 f0                	sub    %esi,%eax
81002a56:	89 43 08             	mov    %eax,0x8(%ebx)
81002a59:	8b 03                	mov    (%ebx),%eax
81002a5b:	89 f2                	mov    %esi,%edx
81002a5d:	01 d0                	add    %edx,%eax
81002a5f:	89 03                	mov    %eax,(%ebx)
81002a61:	89 fe                	mov    %edi,%esi
81002a63:	e9 9d 00 00 00       	jmp    81002b05 <__sfvwrite_r+0x300>
81002a68:	8b 13                	mov    (%ebx),%edx
81002a6a:	8b 43 10             	mov    0x10(%ebx),%eax
81002a6d:	39 c2                	cmp    %eax,%edx
81002a6f:	77 07                	ja     81002a78 <__sfvwrite_r+0x273>
81002a71:	8b 43 14             	mov    0x14(%ebx),%eax
81002a74:	39 c7                	cmp    %eax,%edi
81002a76:	73 4c                	jae    81002ac4 <__sfvwrite_r+0x2bf>
81002a78:	89 f0                	mov    %esi,%eax
81002a7a:	39 c7                	cmp    %eax,%edi
81002a7c:	0f 46 c7             	cmovbe %edi,%eax
81002a7f:	89 c6                	mov    %eax,%esi
81002a81:	89 f2                	mov    %esi,%edx
81002a83:	8b 03                	mov    (%ebx),%eax
81002a85:	83 ec 04             	sub    $0x4,%esp
81002a88:	52                   	push   %edx
81002a89:	ff 75 c4             	pushl  -0x3c(%ebp)
81002a8c:	50                   	push   %eax
81002a8d:	e8 4e 1f 00 00       	call   810049e0 <memmove>
81002a92:	83 c4 10             	add    $0x10,%esp
81002a95:	8b 43 08             	mov    0x8(%ebx),%eax
81002a98:	29 f0                	sub    %esi,%eax
81002a9a:	89 43 08             	mov    %eax,0x8(%ebx)
81002a9d:	8b 03                	mov    (%ebx),%eax
81002a9f:	89 f2                	mov    %esi,%edx
81002aa1:	01 d0                	add    %edx,%eax
81002aa3:	89 03                	mov    %eax,(%ebx)
81002aa5:	8b 43 08             	mov    0x8(%ebx),%eax
81002aa8:	85 c0                	test   %eax,%eax
81002aaa:	75 58                	jne    81002b04 <__sfvwrite_r+0x2ff>
81002aac:	83 ec 08             	sub    $0x8,%esp
81002aaf:	53                   	push   %ebx
81002ab0:	ff 75 08             	pushl  0x8(%ebp)
81002ab3:	e8 1e e7 ff ff       	call   810011d6 <_fflush_r>
81002ab8:	83 c4 10             	add    $0x10,%esp
81002abb:	85 c0                	test   %eax,%eax
81002abd:	74 45                	je     81002b04 <__sfvwrite_r+0x2ff>
81002abf:	e9 c7 01 00 00       	jmp    81002c8b <__sfvwrite_r+0x486>
81002ac4:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002aca:	77 04                	ja     81002ad0 <__sfvwrite_r+0x2cb>
81002acc:	89 f8                	mov    %edi,%eax
81002ace:	eb 05                	jmp    81002ad5 <__sfvwrite_r+0x2d0>
81002ad0:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002ad5:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002ad8:	99                   	cltd   
81002ad9:	f7 f9                	idiv   %ecx
81002adb:	89 c2                	mov    %eax,%edx
81002add:	8b 43 14             	mov    0x14(%ebx),%eax
81002ae0:	89 d6                	mov    %edx,%esi
81002ae2:	0f af f0             	imul   %eax,%esi
81002ae5:	8b 53 24             	mov    0x24(%ebx),%edx
81002ae8:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002aeb:	56                   	push   %esi
81002aec:	ff 75 c4             	pushl  -0x3c(%ebp)
81002aef:	50                   	push   %eax
81002af0:	ff 75 08             	pushl  0x8(%ebp)
81002af3:	ff d2                	call   *%edx
81002af5:	83 c4 10             	add    $0x10,%esp
81002af8:	89 c6                	mov    %eax,%esi
81002afa:	85 f6                	test   %esi,%esi
81002afc:	0f 8e 85 01 00 00    	jle    81002c87 <__sfvwrite_r+0x482>
81002b02:	eb 01                	jmp    81002b05 <__sfvwrite_r+0x300>
81002b04:	90                   	nop
81002b05:	89 f0                	mov    %esi,%eax
81002b07:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002b0a:	89 f0                	mov    %esi,%eax
81002b0c:	29 c7                	sub    %eax,%edi
81002b0e:	8b 45 10             	mov    0x10(%ebp),%eax
81002b11:	8b 40 08             	mov    0x8(%eax),%eax
81002b14:	89 f2                	mov    %esi,%edx
81002b16:	29 d0                	sub    %edx,%eax
81002b18:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002b1b:	89 41 08             	mov    %eax,0x8(%ecx)
81002b1e:	8b 45 10             	mov    0x10(%ebp),%eax
81002b21:	8b 40 08             	mov    0x8(%eax),%eax
81002b24:	85 c0                	test   %eax,%eax
81002b26:	0f 85 d4 fd ff ff    	jne    81002900 <__sfvwrite_r+0xfb>
81002b2c:	e9 4c 01 00 00       	jmp    81002c7d <__sfvwrite_r+0x478>
81002b31:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002b38:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002b3f:	eb 18                	jmp    81002b59 <__sfvwrite_r+0x354>
81002b41:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002b48:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002b4b:	8b 08                	mov    (%eax),%ecx
81002b4d:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002b50:	8b 78 04             	mov    0x4(%eax),%edi
81002b53:	83 c0 08             	add    $0x8,%eax
81002b56:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002b59:	85 ff                	test   %edi,%edi
81002b5b:	74 e4                	je     81002b41 <__sfvwrite_r+0x33c>
81002b5d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002b61:	75 32                	jne    81002b95 <__sfvwrite_r+0x390>
81002b63:	83 ec 04             	sub    $0x4,%esp
81002b66:	57                   	push   %edi
81002b67:	6a 0a                	push   $0xa
81002b69:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002b6c:	56                   	push   %esi
81002b6d:	e8 3e 1d 00 00       	call   810048b0 <memchr>
81002b72:	83 c4 10             	add    $0x10,%esp
81002b75:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002b78:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002b7c:	74 0a                	je     81002b88 <__sfvwrite_r+0x383>
81002b7e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b81:	83 c0 01             	add    $0x1,%eax
81002b84:	29 f0                	sub    %esi,%eax
81002b86:	eb 03                	jmp    81002b8b <__sfvwrite_r+0x386>
81002b88:	8d 47 01             	lea    0x1(%edi),%eax
81002b8b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002b8e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002b95:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b98:	39 c7                	cmp    %eax,%edi
81002b9a:	0f 46 c7             	cmovbe %edi,%eax
81002b9d:	89 c1                	mov    %eax,%ecx
81002b9f:	8b 53 08             	mov    0x8(%ebx),%edx
81002ba2:	8b 43 14             	mov    0x14(%ebx),%eax
81002ba5:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002ba8:	8b 13                	mov    (%ebx),%edx
81002baa:	8b 43 10             	mov    0x10(%ebx),%eax
81002bad:	39 c2                	cmp    %eax,%edx
81002baf:	76 38                	jbe    81002be9 <__sfvwrite_r+0x3e4>
81002bb1:	39 f1                	cmp    %esi,%ecx
81002bb3:	7e 34                	jle    81002be9 <__sfvwrite_r+0x3e4>
81002bb5:	89 f2                	mov    %esi,%edx
81002bb7:	8b 03                	mov    (%ebx),%eax
81002bb9:	83 ec 04             	sub    $0x4,%esp
81002bbc:	52                   	push   %edx
81002bbd:	ff 75 c4             	pushl  -0x3c(%ebp)
81002bc0:	50                   	push   %eax
81002bc1:	e8 1a 1e 00 00       	call   810049e0 <memmove>
81002bc6:	83 c4 10             	add    $0x10,%esp
81002bc9:	8b 03                	mov    (%ebx),%eax
81002bcb:	89 f2                	mov    %esi,%edx
81002bcd:	01 d0                	add    %edx,%eax
81002bcf:	89 03                	mov    %eax,(%ebx)
81002bd1:	83 ec 08             	sub    $0x8,%esp
81002bd4:	53                   	push   %ebx
81002bd5:	ff 75 08             	pushl  0x8(%ebp)
81002bd8:	e8 f9 e5 ff ff       	call   810011d6 <_fflush_r>
81002bdd:	83 c4 10             	add    $0x10,%esp
81002be0:	85 c0                	test   %eax,%eax
81002be2:	74 4f                	je     81002c33 <__sfvwrite_r+0x42e>
81002be4:	e9 a2 00 00 00       	jmp    81002c8b <__sfvwrite_r+0x486>
81002be9:	8b 73 14             	mov    0x14(%ebx),%esi
81002bec:	89 c8                	mov    %ecx,%eax
81002bee:	39 c6                	cmp    %eax,%esi
81002bf0:	7f 1b                	jg     81002c0d <__sfvwrite_r+0x408>
81002bf2:	8b 53 24             	mov    0x24(%ebx),%edx
81002bf5:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002bf8:	56                   	push   %esi
81002bf9:	ff 75 c4             	pushl  -0x3c(%ebp)
81002bfc:	50                   	push   %eax
81002bfd:	ff 75 08             	pushl  0x8(%ebp)
81002c00:	ff d2                	call   *%edx
81002c02:	83 c4 10             	add    $0x10,%esp
81002c05:	89 c6                	mov    %eax,%esi
81002c07:	85 f6                	test   %esi,%esi
81002c09:	7f 28                	jg     81002c33 <__sfvwrite_r+0x42e>
81002c0b:	eb 7e                	jmp    81002c8b <__sfvwrite_r+0x486>
81002c0d:	89 ce                	mov    %ecx,%esi
81002c0f:	89 f2                	mov    %esi,%edx
81002c11:	8b 03                	mov    (%ebx),%eax
81002c13:	83 ec 04             	sub    $0x4,%esp
81002c16:	52                   	push   %edx
81002c17:	ff 75 c4             	pushl  -0x3c(%ebp)
81002c1a:	50                   	push   %eax
81002c1b:	e8 c0 1d 00 00       	call   810049e0 <memmove>
81002c20:	83 c4 10             	add    $0x10,%esp
81002c23:	8b 43 08             	mov    0x8(%ebx),%eax
81002c26:	29 f0                	sub    %esi,%eax
81002c28:	89 43 08             	mov    %eax,0x8(%ebx)
81002c2b:	8b 03                	mov    (%ebx),%eax
81002c2d:	89 f2                	mov    %esi,%edx
81002c2f:	01 d0                	add    %edx,%eax
81002c31:	89 03                	mov    %eax,(%ebx)
81002c33:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002c36:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002c3a:	75 1a                	jne    81002c56 <__sfvwrite_r+0x451>
81002c3c:	83 ec 08             	sub    $0x8,%esp
81002c3f:	53                   	push   %ebx
81002c40:	ff 75 08             	pushl  0x8(%ebp)
81002c43:	e8 8e e5 ff ff       	call   810011d6 <_fflush_r>
81002c48:	83 c4 10             	add    $0x10,%esp
81002c4b:	85 c0                	test   %eax,%eax
81002c4d:	75 3b                	jne    81002c8a <__sfvwrite_r+0x485>
81002c4f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c56:	89 f0                	mov    %esi,%eax
81002c58:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002c5b:	89 f0                	mov    %esi,%eax
81002c5d:	29 c7                	sub    %eax,%edi
81002c5f:	8b 45 10             	mov    0x10(%ebp),%eax
81002c62:	8b 40 08             	mov    0x8(%eax),%eax
81002c65:	89 f2                	mov    %esi,%edx
81002c67:	29 d0                	sub    %edx,%eax
81002c69:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002c6c:	89 41 08             	mov    %eax,0x8(%ecx)
81002c6f:	8b 45 10             	mov    0x10(%ebp),%eax
81002c72:	8b 40 08             	mov    0x8(%eax),%eax
81002c75:	85 c0                	test   %eax,%eax
81002c77:	0f 85 dc fe ff ff    	jne    81002b59 <__sfvwrite_r+0x354>
81002c7d:	b8 00 00 00 00       	mov    $0x0,%eax
81002c82:	eb 17                	jmp    81002c9b <__sfvwrite_r+0x496>
81002c84:	90                   	nop
81002c85:	eb 04                	jmp    81002c8b <__sfvwrite_r+0x486>
81002c87:	90                   	nop
81002c88:	eb 01                	jmp    81002c8b <__sfvwrite_r+0x486>
81002c8a:	90                   	nop
81002c8b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c8f:	83 c8 40             	or     $0x40,%eax
81002c92:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002c9b:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002c9e:	5b                   	pop    %ebx
81002c9f:	5e                   	pop    %esi
81002ca0:	5f                   	pop    %edi
81002ca1:	5d                   	pop    %ebp
81002ca2:	c3                   	ret    

81002ca3 <_fwalk>:
81002ca3:	55                   	push   %ebp
81002ca4:	89 e5                	mov    %esp,%ebp
81002ca6:	57                   	push   %edi
81002ca7:	56                   	push   %esi
81002ca8:	53                   	push   %ebx
81002ca9:	83 ec 1c             	sub    $0x1c,%esp
81002cac:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002cb3:	8b 45 08             	mov    0x8(%ebp),%eax
81002cb6:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002cbc:	eb 3e                	jmp    81002cfc <_fwalk+0x59>
81002cbe:	8b 5e 08             	mov    0x8(%esi),%ebx
81002cc1:	8b 7e 04             	mov    0x4(%esi),%edi
81002cc4:	eb 2d                	jmp    81002cf3 <_fwalk+0x50>
81002cc6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002cca:	66 85 c0             	test   %ax,%ax
81002ccd:	74 21                	je     81002cf0 <_fwalk+0x4d>
81002ccf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002cd3:	66 83 f8 01          	cmp    $0x1,%ax
81002cd7:	74 17                	je     81002cf0 <_fwalk+0x4d>
81002cd9:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002cdd:	66 83 f8 ff          	cmp    $0xffff,%ax
81002ce1:	74 0d                	je     81002cf0 <_fwalk+0x4d>
81002ce3:	83 ec 0c             	sub    $0xc,%esp
81002ce6:	53                   	push   %ebx
81002ce7:	ff 55 0c             	call   *0xc(%ebp)
81002cea:	83 c4 10             	add    $0x10,%esp
81002ced:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002cf0:	83 c3 68             	add    $0x68,%ebx
81002cf3:	83 ef 01             	sub    $0x1,%edi
81002cf6:	85 ff                	test   %edi,%edi
81002cf8:	79 cc                	jns    81002cc6 <_fwalk+0x23>
81002cfa:	8b 36                	mov    (%esi),%esi
81002cfc:	85 f6                	test   %esi,%esi
81002cfe:	75 be                	jne    81002cbe <_fwalk+0x1b>
81002d00:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002d03:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d06:	5b                   	pop    %ebx
81002d07:	5e                   	pop    %esi
81002d08:	5f                   	pop    %edi
81002d09:	5d                   	pop    %ebp
81002d0a:	c3                   	ret    

81002d0b <_fwalk_reent>:
81002d0b:	55                   	push   %ebp
81002d0c:	89 e5                	mov    %esp,%ebp
81002d0e:	57                   	push   %edi
81002d0f:	56                   	push   %esi
81002d10:	53                   	push   %ebx
81002d11:	83 ec 1c             	sub    $0x1c,%esp
81002d14:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d1b:	8b 45 08             	mov    0x8(%ebp),%eax
81002d1e:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002d24:	eb 41                	jmp    81002d67 <_fwalk_reent+0x5c>
81002d26:	8b 5e 08             	mov    0x8(%esi),%ebx
81002d29:	8b 7e 04             	mov    0x4(%esi),%edi
81002d2c:	eb 30                	jmp    81002d5e <_fwalk_reent+0x53>
81002d2e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d32:	66 85 c0             	test   %ax,%ax
81002d35:	74 24                	je     81002d5b <_fwalk_reent+0x50>
81002d37:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d3b:	66 83 f8 01          	cmp    $0x1,%ax
81002d3f:	74 1a                	je     81002d5b <_fwalk_reent+0x50>
81002d41:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002d45:	66 83 f8 ff          	cmp    $0xffff,%ax
81002d49:	74 10                	je     81002d5b <_fwalk_reent+0x50>
81002d4b:	83 ec 08             	sub    $0x8,%esp
81002d4e:	53                   	push   %ebx
81002d4f:	ff 75 08             	pushl  0x8(%ebp)
81002d52:	ff 55 0c             	call   *0xc(%ebp)
81002d55:	83 c4 10             	add    $0x10,%esp
81002d58:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002d5b:	83 c3 68             	add    $0x68,%ebx
81002d5e:	83 ef 01             	sub    $0x1,%edi
81002d61:	85 ff                	test   %edi,%edi
81002d63:	79 c9                	jns    81002d2e <_fwalk_reent+0x23>
81002d65:	8b 36                	mov    (%esi),%esi
81002d67:	85 f6                	test   %esi,%esi
81002d69:	75 bb                	jne    81002d26 <_fwalk_reent+0x1b>
81002d6b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002d6e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d71:	5b                   	pop    %ebx
81002d72:	5e                   	pop    %esi
81002d73:	5f                   	pop    %edi
81002d74:	5d                   	pop    %ebp
81002d75:	c3                   	ret    

81002d76 <_fwrite_r>:
81002d76:	55                   	push   %ebp
81002d77:	89 e5                	mov    %esp,%ebp
81002d79:	83 ec 28             	sub    $0x28,%esp
81002d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002d82:	8b 45 14             	mov    0x14(%ebp),%eax
81002d85:	0f af 45 10          	imul   0x10(%ebp),%eax
81002d89:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d8f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002d92:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002d95:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002d98:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002d9b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002d9e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002da5:	8b 45 08             	mov    0x8(%ebp),%eax
81002da8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002dab:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002daf:	74 18                	je     81002dc9 <_fwrite_r+0x53>
81002db1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002db4:	8b 40 38             	mov    0x38(%eax),%eax
81002db7:	85 c0                	test   %eax,%eax
81002db9:	75 0e                	jne    81002dc9 <_fwrite_r+0x53>
81002dbb:	83 ec 0c             	sub    $0xc,%esp
81002dbe:	ff 75 f0             	pushl  -0x10(%ebp)
81002dc1:	e8 fd e9 ff ff       	call   810017c3 <__sinit>
81002dc6:	83 c4 10             	add    $0x10,%esp
81002dc9:	8b 45 18             	mov    0x18(%ebp),%eax
81002dcc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002dd0:	98                   	cwtl   
81002dd1:	25 00 20 00 00       	and    $0x2000,%eax
81002dd6:	85 c0                	test   %eax,%eax
81002dd8:	75 24                	jne    81002dfe <_fwrite_r+0x88>
81002dda:	8b 45 18             	mov    0x18(%ebp),%eax
81002ddd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002de1:	80 cc 20             	or     $0x20,%ah
81002de4:	89 c2                	mov    %eax,%edx
81002de6:	8b 45 18             	mov    0x18(%ebp),%eax
81002de9:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002ded:	8b 45 18             	mov    0x18(%ebp),%eax
81002df0:	8b 40 64             	mov    0x64(%eax),%eax
81002df3:	80 e4 df             	and    $0xdf,%ah
81002df6:	89 c2                	mov    %eax,%edx
81002df8:	8b 45 18             	mov    0x18(%ebp),%eax
81002dfb:	89 50 64             	mov    %edx,0x64(%eax)
81002dfe:	83 ec 04             	sub    $0x4,%esp
81002e01:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002e04:	50                   	push   %eax
81002e05:	ff 75 18             	pushl  0x18(%ebp)
81002e08:	ff 75 08             	pushl  0x8(%ebp)
81002e0b:	e8 f5 f9 ff ff       	call   81002805 <__sfvwrite_r>
81002e10:	83 c4 10             	add    $0x10,%esp
81002e13:	85 c0                	test   %eax,%eax
81002e15:	75 05                	jne    81002e1c <_fwrite_r+0xa6>
81002e17:	8b 45 14             	mov    0x14(%ebp),%eax
81002e1a:	eb 10                	jmp    81002e2c <_fwrite_r+0xb6>
81002e1c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002e1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e22:	29 d0                	sub    %edx,%eax
81002e24:	ba 00 00 00 00       	mov    $0x0,%edx
81002e29:	f7 75 10             	divl   0x10(%ebp)
81002e2c:	c9                   	leave  
81002e2d:	c3                   	ret    

81002e2e <fwrite>:
81002e2e:	55                   	push   %ebp
81002e2f:	89 e5                	mov    %esp,%ebp
81002e31:	83 ec 08             	sub    $0x8,%esp
81002e34:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81002e39:	83 ec 0c             	sub    $0xc,%esp
81002e3c:	ff 75 14             	pushl  0x14(%ebp)
81002e3f:	ff 75 10             	pushl  0x10(%ebp)
81002e42:	ff 75 0c             	pushl  0xc(%ebp)
81002e45:	ff 75 08             	pushl  0x8(%ebp)
81002e48:	50                   	push   %eax
81002e49:	e8 28 ff ff ff       	call   81002d76 <_fwrite_r>
81002e4e:	83 c4 20             	add    $0x20,%esp
81002e51:	c9                   	leave  
81002e52:	c3                   	ret    

81002e53 <reverse_argv_elements>:
81002e53:	55                   	push   %ebp
81002e54:	89 e5                	mov    %esp,%ebp
81002e56:	83 ec 10             	sub    $0x10,%esp
81002e59:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002e60:	eb 5e                	jmp    81002ec0 <reverse_argv_elements+0x6d>
81002e62:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002e65:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e6c:	8b 45 08             	mov    0x8(%ebp),%eax
81002e6f:	01 d0                	add    %edx,%eax
81002e71:	8b 00                	mov    (%eax),%eax
81002e73:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002e76:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e79:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002e7c:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002e81:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e88:	8b 45 08             	mov    0x8(%ebp),%eax
81002e8b:	01 d0                	add    %edx,%eax
81002e8d:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002e90:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002e97:	8b 55 08             	mov    0x8(%ebp),%edx
81002e9a:	01 ca                	add    %ecx,%edx
81002e9c:	8b 00                	mov    (%eax),%eax
81002e9e:	89 02                	mov    %eax,(%edx)
81002ea0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ea3:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002ea6:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002eab:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002eb2:	8b 45 08             	mov    0x8(%ebp),%eax
81002eb5:	01 c2                	add    %eax,%edx
81002eb7:	8b 45 f8             	mov    -0x8(%ebp),%eax
81002eba:	89 02                	mov    %eax,(%edx)
81002ebc:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002ec0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ec3:	d1 f8                	sar    %eax
81002ec5:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002ec8:	7c 98                	jl     81002e62 <reverse_argv_elements+0xf>
81002eca:	90                   	nop
81002ecb:	90                   	nop
81002ecc:	c9                   	leave  
81002ecd:	c3                   	ret    

81002ece <permute>:
81002ece:	55                   	push   %ebp
81002ecf:	89 e5                	mov    %esp,%ebp
81002ed1:	ff 75 0c             	pushl  0xc(%ebp)
81002ed4:	ff 75 08             	pushl  0x8(%ebp)
81002ed7:	e8 77 ff ff ff       	call   81002e53 <reverse_argv_elements>
81002edc:	83 c4 08             	add    $0x8,%esp
81002edf:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ee2:	8b 45 10             	mov    0x10(%ebp),%eax
81002ee5:	01 d0                	add    %edx,%eax
81002ee7:	50                   	push   %eax
81002ee8:	ff 75 08             	pushl  0x8(%ebp)
81002eeb:	e8 63 ff ff ff       	call   81002e53 <reverse_argv_elements>
81002ef0:	83 c4 08             	add    $0x8,%esp
81002ef3:	ff 75 10             	pushl  0x10(%ebp)
81002ef6:	ff 75 08             	pushl  0x8(%ebp)
81002ef9:	e8 55 ff ff ff       	call   81002e53 <reverse_argv_elements>
81002efe:	83 c4 08             	add    $0x8,%esp
81002f01:	90                   	nop
81002f02:	c9                   	leave  
81002f03:	c3                   	ret    

81002f04 <is_option>:
81002f04:	55                   	push   %ebp
81002f05:	89 e5                	mov    %esp,%ebp
81002f07:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002f0b:	74 1a                	je     81002f27 <is_option+0x23>
81002f0d:	8b 45 08             	mov    0x8(%ebp),%eax
81002f10:	0f b6 00             	movzbl (%eax),%eax
81002f13:	3c 2d                	cmp    $0x2d,%al
81002f15:	74 10                	je     81002f27 <is_option+0x23>
81002f17:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002f1b:	74 11                	je     81002f2e <is_option+0x2a>
81002f1d:	8b 45 08             	mov    0x8(%ebp),%eax
81002f20:	0f b6 00             	movzbl (%eax),%eax
81002f23:	3c 2b                	cmp    $0x2b,%al
81002f25:	75 07                	jne    81002f2e <is_option+0x2a>
81002f27:	b8 01 00 00 00       	mov    $0x1,%eax
81002f2c:	eb 05                	jmp    81002f33 <is_option+0x2f>
81002f2e:	b8 00 00 00 00       	mov    $0x0,%eax
81002f33:	5d                   	pop    %ebp
81002f34:	c3                   	ret    

81002f35 <read_globals>:
81002f35:	55                   	push   %ebp
81002f36:	89 e5                	mov    %esp,%ebp
81002f38:	8b 15 68 99 00 81    	mov    0x81009968,%edx
81002f3e:	8b 45 08             	mov    0x8(%ebp),%eax
81002f41:	89 10                	mov    %edx,(%eax)
81002f43:	8b 15 6c 99 00 81    	mov    0x8100996c,%edx
81002f49:	8b 45 08             	mov    0x8(%ebp),%eax
81002f4c:	89 50 04             	mov    %edx,0x4(%eax)
81002f4f:	8b 15 44 8a 00 81    	mov    0x81008a44,%edx
81002f55:	8b 45 08             	mov    0x8(%ebp),%eax
81002f58:	89 50 08             	mov    %edx,0x8(%eax)
81002f5b:	8b 15 48 8a 00 81    	mov    0x81008a48,%edx
81002f61:	8b 45 08             	mov    0x8(%ebp),%eax
81002f64:	89 50 0c             	mov    %edx,0xc(%eax)
81002f67:	8b 15 70 99 00 81    	mov    0x81009970,%edx
81002f6d:	8b 45 08             	mov    0x8(%ebp),%eax
81002f70:	89 50 10             	mov    %edx,0x10(%eax)
81002f73:	8b 15 74 99 00 81    	mov    0x81009974,%edx
81002f79:	8b 45 08             	mov    0x8(%ebp),%eax
81002f7c:	89 50 14             	mov    %edx,0x14(%eax)
81002f7f:	8b 15 78 99 00 81    	mov    0x81009978,%edx
81002f85:	8b 45 08             	mov    0x8(%ebp),%eax
81002f88:	89 50 18             	mov    %edx,0x18(%eax)
81002f8b:	90                   	nop
81002f8c:	5d                   	pop    %ebp
81002f8d:	c3                   	ret    

81002f8e <write_globals>:
81002f8e:	55                   	push   %ebp
81002f8f:	89 e5                	mov    %esp,%ebp
81002f91:	8b 45 08             	mov    0x8(%ebp),%eax
81002f94:	8b 00                	mov    (%eax),%eax
81002f96:	a3 68 99 00 81       	mov    %eax,0x81009968
81002f9b:	8b 45 08             	mov    0x8(%ebp),%eax
81002f9e:	8b 40 04             	mov    0x4(%eax),%eax
81002fa1:	a3 6c 99 00 81       	mov    %eax,0x8100996c
81002fa6:	8b 45 08             	mov    0x8(%ebp),%eax
81002fa9:	8b 40 08             	mov    0x8(%eax),%eax
81002fac:	a3 44 8a 00 81       	mov    %eax,0x81008a44
81002fb1:	8b 45 08             	mov    0x8(%ebp),%eax
81002fb4:	8b 40 0c             	mov    0xc(%eax),%eax
81002fb7:	a3 48 8a 00 81       	mov    %eax,0x81008a48
81002fbc:	8b 45 08             	mov    0x8(%ebp),%eax
81002fbf:	8b 40 10             	mov    0x10(%eax),%eax
81002fc2:	a3 70 99 00 81       	mov    %eax,0x81009970
81002fc7:	8b 45 08             	mov    0x8(%ebp),%eax
81002fca:	8b 40 14             	mov    0x14(%eax),%eax
81002fcd:	a3 74 99 00 81       	mov    %eax,0x81009974
81002fd2:	8b 45 08             	mov    0x8(%ebp),%eax
81002fd5:	8b 40 18             	mov    0x18(%eax),%eax
81002fd8:	a3 78 99 00 81       	mov    %eax,0x81009978
81002fdd:	90                   	nop
81002fde:	5d                   	pop    %ebp
81002fdf:	c3                   	ret    

81002fe0 <getopt_internal>:
81002fe0:	55                   	push   %ebp
81002fe1:	89 e5                	mov    %esp,%ebp
81002fe3:	53                   	push   %ebx
81002fe4:	83 ec 34             	sub    $0x34,%esp
81002fe7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002fee:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002ff5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002ffc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81003003:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100300a:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003011:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81003018:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100301f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81003026:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100302a:	74 35                	je     81003061 <getopt_internal+0x81>
8100302c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003030:	74 2f                	je     81003061 <getopt_internal+0x81>
81003032:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003036:	75 06                	jne    8100303e <getopt_internal+0x5e>
81003038:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100303c:	74 23                	je     81003061 <getopt_internal+0x81>
8100303e:	8b 45 20             	mov    0x20(%ebp),%eax
81003041:	8b 40 04             	mov    0x4(%eax),%eax
81003044:	39 45 08             	cmp    %eax,0x8(%ebp)
81003047:	7e 18                	jle    81003061 <getopt_internal+0x81>
81003049:	8b 45 20             	mov    0x20(%ebp),%eax
8100304c:	8b 40 04             	mov    0x4(%eax),%eax
8100304f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003056:	8b 45 0c             	mov    0xc(%ebp),%eax
81003059:	01 d0                	add    %edx,%eax
8100305b:	8b 00                	mov    (%eax),%eax
8100305d:	85 c0                	test   %eax,%eax
8100305f:	75 0a                	jne    8100306b <getopt_internal+0x8b>
81003061:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003066:	e9 85 0a 00 00       	jmp    81003af0 <getopt_internal+0xb10>
8100306b:	8b 45 20             	mov    0x20(%ebp),%eax
8100306e:	8b 40 04             	mov    0x4(%eax),%eax
81003071:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003078:	8b 45 0c             	mov    0xc(%ebp),%eax
8100307b:	01 d0                	add    %edx,%eax
8100307d:	8b 00                	mov    (%eax),%eax
8100307f:	83 ec 08             	sub    $0x8,%esp
81003082:	68 4c 86 00 81       	push   $0x8100864c
81003087:	50                   	push   %eax
81003088:	e8 8f 39 00 00       	call   81006a1c <strcmp>
8100308d:	83 c4 10             	add    $0x10,%esp
81003090:	85 c0                	test   %eax,%eax
81003092:	75 19                	jne    810030ad <getopt_internal+0xcd>
81003094:	8b 45 20             	mov    0x20(%ebp),%eax
81003097:	8b 40 04             	mov    0x4(%eax),%eax
8100309a:	8d 50 01             	lea    0x1(%eax),%edx
8100309d:	8b 45 20             	mov    0x20(%ebp),%eax
810030a0:	89 50 04             	mov    %edx,0x4(%eax)
810030a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810030a8:	e9 43 0a 00 00       	jmp    81003af0 <getopt_internal+0xb10>
810030ad:	8b 45 20             	mov    0x20(%ebp),%eax
810030b0:	8b 40 04             	mov    0x4(%eax),%eax
810030b3:	85 c0                	test   %eax,%eax
810030b5:	75 28                	jne    810030df <getopt_internal+0xff>
810030b7:	8b 45 20             	mov    0x20(%ebp),%eax
810030ba:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810030c1:	8b 45 20             	mov    0x20(%ebp),%eax
810030c4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810030cb:	8b 45 20             	mov    0x20(%ebp),%eax
810030ce:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810030d5:	8b 45 20             	mov    0x20(%ebp),%eax
810030d8:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810030df:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810030e3:	74 33                	je     81003118 <getopt_internal+0x138>
810030e5:	8b 45 10             	mov    0x10(%ebp),%eax
810030e8:	0f b6 00             	movzbl (%eax),%eax
810030eb:	3c 2d                	cmp    $0x2d,%al
810030ed:	74 0a                	je     810030f9 <getopt_internal+0x119>
810030ef:	8b 45 10             	mov    0x10(%ebp),%eax
810030f2:	0f b6 00             	movzbl (%eax),%eax
810030f5:	3c 2b                	cmp    $0x2b,%al
810030f7:	75 1f                	jne    81003118 <getopt_internal+0x138>
810030f9:	8b 45 10             	mov    0x10(%ebp),%eax
810030fc:	0f b6 00             	movzbl (%eax),%eax
810030ff:	3c 2d                	cmp    $0x2d,%al
81003101:	75 07                	jne    8100310a <getopt_internal+0x12a>
81003103:	b8 01 00 00 00       	mov    $0x1,%eax
81003108:	eb 05                	jmp    8100310f <getopt_internal+0x12f>
8100310a:	b8 02 00 00 00       	mov    $0x2,%eax
8100310f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003112:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003116:	eb 23                	jmp    8100313b <getopt_internal+0x15b>
81003118:	83 ec 0c             	sub    $0xc,%esp
8100311b:	68 4f 86 00 81       	push   $0x8100864f
81003120:	e8 e0 44 00 00       	call   81007605 <getenv>
81003125:	83 c4 10             	add    $0x10,%esp
81003128:	85 c0                	test   %eax,%eax
8100312a:	74 07                	je     81003133 <getopt_internal+0x153>
8100312c:	b8 02 00 00 00       	mov    $0x2,%eax
81003131:	eb 05                	jmp    81003138 <getopt_internal+0x158>
81003133:	b8 00 00 00 00       	mov    $0x0,%eax
81003138:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100313b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100313f:	74 15                	je     81003156 <getopt_internal+0x176>
81003141:	8b 45 10             	mov    0x10(%ebp),%eax
81003144:	0f b6 00             	movzbl (%eax),%eax
81003147:	3c 3a                	cmp    $0x3a,%al
81003149:	75 0b                	jne    81003156 <getopt_internal+0x176>
8100314b:	83 45 10 01          	addl   $0x1,0x10(%ebp)
8100314f:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81003156:	8b 45 20             	mov    0x20(%ebp),%eax
81003159:	8b 40 10             	mov    0x10(%eax),%eax
8100315c:	83 f8 01             	cmp    $0x1,%eax
8100315f:	0f 85 a2 01 00 00    	jne    81003307 <getopt_internal+0x327>
81003165:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81003169:	0f 84 02 01 00 00    	je     81003271 <getopt_internal+0x291>
8100316f:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81003173:	0f 84 56 01 00 00    	je     810032cf <getopt_internal+0x2ef>
81003179:	8b 45 20             	mov    0x20(%ebp),%eax
8100317c:	8b 50 04             	mov    0x4(%eax),%edx
8100317f:	8b 45 20             	mov    0x20(%ebp),%eax
81003182:	89 50 14             	mov    %edx,0x14(%eax)
81003185:	8b 45 20             	mov    0x20(%ebp),%eax
81003188:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100318f:	eb 1e                	jmp    810031af <getopt_internal+0x1cf>
81003191:	8b 45 20             	mov    0x20(%ebp),%eax
81003194:	8b 40 04             	mov    0x4(%eax),%eax
81003197:	8d 50 01             	lea    0x1(%eax),%edx
8100319a:	8b 45 20             	mov    0x20(%ebp),%eax
8100319d:	89 50 04             	mov    %edx,0x4(%eax)
810031a0:	8b 45 20             	mov    0x20(%ebp),%eax
810031a3:	8b 40 18             	mov    0x18(%eax),%eax
810031a6:	8d 50 01             	lea    0x1(%eax),%edx
810031a9:	8b 45 20             	mov    0x20(%ebp),%eax
810031ac:	89 50 18             	mov    %edx,0x18(%eax)
810031af:	8b 45 20             	mov    0x20(%ebp),%eax
810031b2:	8b 40 04             	mov    0x4(%eax),%eax
810031b5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810031bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810031bf:	01 d0                	add    %edx,%eax
810031c1:	8b 00                	mov    (%eax),%eax
810031c3:	83 ec 08             	sub    $0x8,%esp
810031c6:	ff 75 1c             	pushl  0x1c(%ebp)
810031c9:	50                   	push   %eax
810031ca:	e8 35 fd ff ff       	call   81002f04 <is_option>
810031cf:	83 c4 10             	add    $0x10,%esp
810031d2:	85 c0                	test   %eax,%eax
810031d4:	74 bb                	je     81003191 <getopt_internal+0x1b1>
810031d6:	8b 45 20             	mov    0x20(%ebp),%eax
810031d9:	8b 40 04             	mov    0x4(%eax),%eax
810031dc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810031e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810031e6:	01 d0                	add    %edx,%eax
810031e8:	8b 00                	mov    (%eax),%eax
810031ea:	85 c0                	test   %eax,%eax
810031ec:	75 16                	jne    81003204 <getopt_internal+0x224>
810031ee:	8b 45 20             	mov    0x20(%ebp),%eax
810031f1:	8b 50 14             	mov    0x14(%eax),%edx
810031f4:	8b 45 20             	mov    0x20(%ebp),%eax
810031f7:	89 50 04             	mov    %edx,0x4(%eax)
810031fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031ff:	e9 ec 08 00 00       	jmp    81003af0 <getopt_internal+0xb10>
81003204:	8b 45 20             	mov    0x20(%ebp),%eax
81003207:	8b 40 04             	mov    0x4(%eax),%eax
8100320a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003211:	8b 45 0c             	mov    0xc(%ebp),%eax
81003214:	01 d0                	add    %edx,%eax
81003216:	8b 00                	mov    (%eax),%eax
81003218:	83 ec 08             	sub    $0x8,%esp
8100321b:	68 4c 86 00 81       	push   $0x8100864c
81003220:	50                   	push   %eax
81003221:	e8 f6 37 00 00       	call   81006a1c <strcmp>
81003226:	83 c4 10             	add    $0x10,%esp
81003229:	85 c0                	test   %eax,%eax
8100322b:	0f 85 cf 00 00 00    	jne    81003300 <getopt_internal+0x320>
81003231:	8b 45 20             	mov    0x20(%ebp),%eax
81003234:	8b 40 18             	mov    0x18(%eax),%eax
81003237:	8b 55 20             	mov    0x20(%ebp),%edx
8100323a:	8b 52 14             	mov    0x14(%edx),%edx
8100323d:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81003244:	8b 55 0c             	mov    0xc(%ebp),%edx
81003247:	01 ca                	add    %ecx,%edx
81003249:	83 ec 04             	sub    $0x4,%esp
8100324c:	6a 01                	push   $0x1
8100324e:	50                   	push   %eax
8100324f:	52                   	push   %edx
81003250:	e8 79 fc ff ff       	call   81002ece <permute>
81003255:	83 c4 10             	add    $0x10,%esp
81003258:	8b 45 20             	mov    0x20(%ebp),%eax
8100325b:	8b 40 14             	mov    0x14(%eax),%eax
8100325e:	8d 50 01             	lea    0x1(%eax),%edx
81003261:	8b 45 20             	mov    0x20(%ebp),%eax
81003264:	89 50 04             	mov    %edx,0x4(%eax)
81003267:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100326c:	e9 7f 08 00 00       	jmp    81003af0 <getopt_internal+0xb10>
81003271:	8b 45 20             	mov    0x20(%ebp),%eax
81003274:	8b 40 04             	mov    0x4(%eax),%eax
81003277:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100327e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003281:	01 d0                	add    %edx,%eax
81003283:	8b 00                	mov    (%eax),%eax
81003285:	83 ec 08             	sub    $0x8,%esp
81003288:	ff 75 1c             	pushl  0x1c(%ebp)
8100328b:	50                   	push   %eax
8100328c:	e8 73 fc ff ff       	call   81002f04 <is_option>
81003291:	83 c4 10             	add    $0x10,%esp
81003294:	85 c0                	test   %eax,%eax
81003296:	75 6b                	jne    81003303 <getopt_internal+0x323>
81003298:	8b 45 20             	mov    0x20(%ebp),%eax
8100329b:	8b 40 04             	mov    0x4(%eax),%eax
8100329e:	8d 48 01             	lea    0x1(%eax),%ecx
810032a1:	8b 55 20             	mov    0x20(%ebp),%edx
810032a4:	89 4a 04             	mov    %ecx,0x4(%edx)
810032a7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810032b1:	01 d0                	add    %edx,%eax
810032b3:	8b 10                	mov    (%eax),%edx
810032b5:	8b 45 20             	mov    0x20(%ebp),%eax
810032b8:	89 10                	mov    %edx,(%eax)
810032ba:	8b 45 20             	mov    0x20(%ebp),%eax
810032bd:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810032c4:	8b 45 20             	mov    0x20(%ebp),%eax
810032c7:	8b 40 0c             	mov    0xc(%eax),%eax
810032ca:	e9 21 08 00 00       	jmp    81003af0 <getopt_internal+0xb10>
810032cf:	8b 45 20             	mov    0x20(%ebp),%eax
810032d2:	8b 40 04             	mov    0x4(%eax),%eax
810032d5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810032df:	01 d0                	add    %edx,%eax
810032e1:	8b 00                	mov    (%eax),%eax
810032e3:	83 ec 08             	sub    $0x8,%esp
810032e6:	ff 75 1c             	pushl  0x1c(%ebp)
810032e9:	50                   	push   %eax
810032ea:	e8 15 fc ff ff       	call   81002f04 <is_option>
810032ef:	83 c4 10             	add    $0x10,%esp
810032f2:	85 c0                	test   %eax,%eax
810032f4:	75 10                	jne    81003306 <getopt_internal+0x326>
810032f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810032fb:	e9 f0 07 00 00       	jmp    81003af0 <getopt_internal+0xb10>
81003300:	90                   	nop
81003301:	eb 04                	jmp    81003307 <getopt_internal+0x327>
81003303:	90                   	nop
81003304:	eb 01                	jmp    81003307 <getopt_internal+0x327>
81003306:	90                   	nop
81003307:	8b 45 20             	mov    0x20(%ebp),%eax
8100330a:	8b 40 04             	mov    0x4(%eax),%eax
8100330d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003314:	8b 45 0c             	mov    0xc(%ebp),%eax
81003317:	01 d0                	add    %edx,%eax
81003319:	8b 00                	mov    (%eax),%eax
8100331b:	85 c0                	test   %eax,%eax
8100331d:	75 0a                	jne    81003329 <getopt_internal+0x349>
8100331f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003324:	e9 c7 07 00 00       	jmp    81003af0 <getopt_internal+0xb10>
81003329:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100332d:	0f 84 15 03 00 00    	je     81003648 <getopt_internal+0x668>
81003333:	8b 45 20             	mov    0x20(%ebp),%eax
81003336:	8b 40 04             	mov    0x4(%eax),%eax
81003339:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003340:	8b 45 0c             	mov    0xc(%ebp),%eax
81003343:	01 d0                	add    %edx,%eax
81003345:	8b 00                	mov    (%eax),%eax
81003347:	83 ec 04             	sub    $0x4,%esp
8100334a:	6a 02                	push   $0x2
8100334c:	68 4c 86 00 81       	push   $0x8100864c
81003351:	50                   	push   %eax
81003352:	e8 ee 15 00 00       	call   81004945 <memcmp>
81003357:	83 c4 10             	add    $0x10,%esp
8100335a:	85 c0                	test   %eax,%eax
8100335c:	74 29                	je     81003387 <getopt_internal+0x3a7>
8100335e:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81003362:	0f 84 e0 02 00 00    	je     81003648 <getopt_internal+0x668>
81003368:	8b 45 20             	mov    0x20(%ebp),%eax
8100336b:	8b 40 04             	mov    0x4(%eax),%eax
8100336e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003375:	8b 45 0c             	mov    0xc(%ebp),%eax
81003378:	01 d0                	add    %edx,%eax
8100337a:	8b 00                	mov    (%eax),%eax
8100337c:	0f b6 00             	movzbl (%eax),%eax
8100337f:	3c 2b                	cmp    $0x2b,%al
81003381:	0f 85 c1 02 00 00    	jne    81003648 <getopt_internal+0x668>
81003387:	8b 45 20             	mov    0x20(%ebp),%eax
8100338a:	8b 40 10             	mov    0x10(%eax),%eax
8100338d:	83 f8 01             	cmp    $0x1,%eax
81003390:	0f 85 b2 02 00 00    	jne    81003648 <getopt_internal+0x668>
81003396:	8b 45 20             	mov    0x20(%ebp),%eax
81003399:	8b 40 04             	mov    0x4(%eax),%eax
8100339c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810033a6:	01 d0                	add    %edx,%eax
810033a8:	8b 00                	mov    (%eax),%eax
810033aa:	83 ec 04             	sub    $0x4,%esp
810033ad:	6a 02                	push   $0x2
810033af:	68 4c 86 00 81       	push   $0x8100864c
810033b4:	50                   	push   %eax
810033b5:	e8 8b 15 00 00       	call   81004945 <memcmp>
810033ba:	83 c4 10             	add    $0x10,%esp
810033bd:	85 c0                	test   %eax,%eax
810033bf:	75 0a                	jne    810033cb <getopt_internal+0x3eb>
810033c1:	8b 45 20             	mov    0x20(%ebp),%eax
810033c4:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810033cb:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810033d2:	8b 45 20             	mov    0x20(%ebp),%eax
810033d5:	8b 40 04             	mov    0x4(%eax),%eax
810033d8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033df:	8b 45 0c             	mov    0xc(%ebp),%eax
810033e2:	01 d0                	add    %edx,%eax
810033e4:	8b 10                	mov    (%eax),%edx
810033e6:	8b 45 20             	mov    0x20(%ebp),%eax
810033e9:	8b 40 10             	mov    0x10(%eax),%eax
810033ec:	01 d0                	add    %edx,%eax
810033ee:	83 ec 08             	sub    $0x8,%esp
810033f1:	6a 3d                	push   $0x3d
810033f3:	50                   	push   %eax
810033f4:	e8 27 35 00 00       	call   81006920 <strchr>
810033f9:	83 c4 10             	add    $0x10,%esp
810033fc:	89 45 e8             	mov    %eax,-0x18(%ebp)
810033ff:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003403:	75 4a                	jne    8100344f <getopt_internal+0x46f>
81003405:	8b 45 20             	mov    0x20(%ebp),%eax
81003408:	8b 40 04             	mov    0x4(%eax),%eax
8100340b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003412:	8b 45 0c             	mov    0xc(%ebp),%eax
81003415:	01 d0                	add    %edx,%eax
81003417:	8b 00                	mov    (%eax),%eax
81003419:	83 ec 0c             	sub    $0xc,%esp
8100341c:	50                   	push   %eax
8100341d:	e8 ae 36 00 00       	call   81006ad0 <strlen>
81003422:	83 c4 10             	add    $0x10,%esp
81003425:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003428:	8b 45 20             	mov    0x20(%ebp),%eax
8100342b:	8b 40 04             	mov    0x4(%eax),%eax
8100342e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003435:	8b 45 0c             	mov    0xc(%ebp),%eax
81003438:	01 d0                	add    %edx,%eax
8100343a:	8b 10                	mov    (%eax),%edx
8100343c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100343f:	01 d0                	add    %edx,%eax
81003441:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003444:	8b 45 20             	mov    0x20(%ebp),%eax
81003447:	8b 40 10             	mov    0x10(%eax),%eax
8100344a:	29 45 ec             	sub    %eax,-0x14(%ebp)
8100344d:	eb 28                	jmp    81003477 <getopt_internal+0x497>
8100344f:	8b 45 20             	mov    0x20(%ebp),%eax
81003452:	8b 40 04             	mov    0x4(%eax),%eax
81003455:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100345c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100345f:	01 d0                	add    %edx,%eax
81003461:	8b 08                	mov    (%eax),%ecx
81003463:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003466:	29 c8                	sub    %ecx,%eax
81003468:	89 c2                	mov    %eax,%edx
8100346a:	8b 45 20             	mov    0x20(%ebp),%eax
8100346d:	8b 48 10             	mov    0x10(%eax),%ecx
81003470:	89 d0                	mov    %edx,%eax
81003472:	29 c8                	sub    %ecx,%eax
81003474:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003477:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100347e:	e9 95 01 00 00       	jmp    81003618 <getopt_internal+0x638>
81003483:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003486:	c1 e0 04             	shl    $0x4,%eax
81003489:	89 c2                	mov    %eax,%edx
8100348b:	8b 45 14             	mov    0x14(%ebp),%eax
8100348e:	01 d0                	add    %edx,%eax
81003490:	8b 00                	mov    (%eax),%eax
81003492:	8b 55 20             	mov    0x20(%ebp),%edx
81003495:	8b 52 04             	mov    0x4(%edx),%edx
81003498:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100349f:	8b 55 0c             	mov    0xc(%ebp),%edx
810034a2:	01 ca                	add    %ecx,%edx
810034a4:	8b 0a                	mov    (%edx),%ecx
810034a6:	8b 55 20             	mov    0x20(%ebp),%edx
810034a9:	8b 52 10             	mov    0x10(%edx),%edx
810034ac:	01 ca                	add    %ecx,%edx
810034ae:	83 ec 04             	sub    $0x4,%esp
810034b1:	ff 75 ec             	pushl  -0x14(%ebp)
810034b4:	50                   	push   %eax
810034b5:	52                   	push   %edx
810034b6:	e8 8a 14 00 00       	call   81004945 <memcmp>
810034bb:	83 c4 10             	add    $0x10,%esp
810034be:	85 c0                	test   %eax,%eax
810034c0:	0f 85 4e 01 00 00    	jne    81003614 <getopt_internal+0x634>
810034c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034c9:	c1 e0 04             	shl    $0x4,%eax
810034cc:	89 c2                	mov    %eax,%edx
810034ce:	8b 45 14             	mov    0x14(%ebp),%eax
810034d1:	01 d0                	add    %edx,%eax
810034d3:	8b 00                	mov    (%eax),%eax
810034d5:	83 ec 0c             	sub    $0xc,%esp
810034d8:	50                   	push   %eax
810034d9:	e8 f2 35 00 00       	call   81006ad0 <strlen>
810034de:	83 c4 10             	add    $0x10,%esp
810034e1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810034e4:	75 0b                	jne    810034f1 <getopt_internal+0x511>
810034e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810034ec:	e9 3e 01 00 00       	jmp    8100362f <getopt_internal+0x64f>
810034f1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810034f5:	79 0b                	jns    81003502 <getopt_internal+0x522>
810034f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810034fd:	e9 12 01 00 00       	jmp    81003614 <getopt_internal+0x634>
81003502:	8b 45 20             	mov    0x20(%ebp),%eax
81003505:	8b 40 08             	mov    0x8(%eax),%eax
81003508:	85 c0                	test   %eax,%eax
8100350a:	0f 84 ef 00 00 00    	je     810035ff <getopt_internal+0x61f>
81003510:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003515:	8b 50 0c             	mov    0xc(%eax),%edx
81003518:	8b 45 0c             	mov    0xc(%ebp),%eax
8100351b:	8b 00                	mov    (%eax),%eax
8100351d:	83 ec 08             	sub    $0x8,%esp
81003520:	52                   	push   %edx
81003521:	50                   	push   %eax
81003522:	e8 98 e5 ff ff       	call   81001abf <fputs>
81003527:	83 c4 10             	add    $0x10,%esp
8100352a:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100352f:	8b 40 0c             	mov    0xc(%eax),%eax
81003532:	83 ec 08             	sub    $0x8,%esp
81003535:	50                   	push   %eax
81003536:	68 5f 86 00 81       	push   $0x8100865f
8100353b:	e8 7f e5 ff ff       	call   81001abf <fputs>
81003540:	83 c4 10             	add    $0x10,%esp
81003543:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003548:	8b 50 0c             	mov    0xc(%eax),%edx
8100354b:	8b 45 20             	mov    0x20(%ebp),%eax
8100354e:	8b 40 04             	mov    0x4(%eax),%eax
81003551:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003558:	8b 45 0c             	mov    0xc(%ebp),%eax
8100355b:	01 c8                	add    %ecx,%eax
8100355d:	8b 00                	mov    (%eax),%eax
8100355f:	83 ec 08             	sub    $0x8,%esp
81003562:	52                   	push   %edx
81003563:	50                   	push   %eax
81003564:	e8 56 e5 ff ff       	call   81001abf <fputs>
81003569:	83 c4 10             	add    $0x10,%esp
8100356c:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003571:	8b 40 0c             	mov    0xc(%eax),%eax
81003574:	83 ec 08             	sub    $0x8,%esp
81003577:	50                   	push   %eax
81003578:	68 6a 86 00 81       	push   $0x8100866a
8100357d:	e8 3d e5 ff ff       	call   81001abf <fputs>
81003582:	83 c4 10             	add    $0x10,%esp
81003585:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100358a:	8b 50 0c             	mov    0xc(%eax),%edx
8100358d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003590:	c1 e0 04             	shl    $0x4,%eax
81003593:	89 c1                	mov    %eax,%ecx
81003595:	8b 45 14             	mov    0x14(%ebp),%eax
81003598:	01 c8                	add    %ecx,%eax
8100359a:	8b 00                	mov    (%eax),%eax
8100359c:	83 ec 08             	sub    $0x8,%esp
8100359f:	52                   	push   %edx
810035a0:	50                   	push   %eax
810035a1:	e8 19 e5 ff ff       	call   81001abf <fputs>
810035a6:	83 c4 10             	add    $0x10,%esp
810035a9:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810035ae:	8b 40 0c             	mov    0xc(%eax),%eax
810035b1:	83 ec 08             	sub    $0x8,%esp
810035b4:	50                   	push   %eax
810035b5:	68 87 86 00 81       	push   $0x81008687
810035ba:	e8 00 e5 ff ff       	call   81001abf <fputs>
810035bf:	83 c4 10             	add    $0x10,%esp
810035c2:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810035c7:	8b 50 0c             	mov    0xc(%eax),%edx
810035ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035cd:	c1 e0 04             	shl    $0x4,%eax
810035d0:	89 c1                	mov    %eax,%ecx
810035d2:	8b 45 14             	mov    0x14(%ebp),%eax
810035d5:	01 c8                	add    %ecx,%eax
810035d7:	8b 00                	mov    (%eax),%eax
810035d9:	83 ec 08             	sub    $0x8,%esp
810035dc:	52                   	push   %edx
810035dd:	50                   	push   %eax
810035de:	e8 dc e4 ff ff       	call   81001abf <fputs>
810035e3:	83 c4 10             	add    $0x10,%esp
810035e6:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810035eb:	8b 40 0c             	mov    0xc(%eax),%eax
810035ee:	83 ec 08             	sub    $0x8,%esp
810035f1:	50                   	push   %eax
810035f2:	68 90 86 00 81       	push   $0x81008690
810035f7:	e8 c3 e4 ff ff       	call   81001abf <fputs>
810035fc:	83 c4 10             	add    $0x10,%esp
810035ff:	8b 45 20             	mov    0x20(%ebp),%eax
81003602:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003609:	8b 45 20             	mov    0x20(%ebp),%eax
8100360c:	8b 40 0c             	mov    0xc(%eax),%eax
8100360f:	e9 dc 04 00 00       	jmp    81003af0 <getopt_internal+0xb10>
81003614:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003618:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100361b:	c1 e0 04             	shl    $0x4,%eax
8100361e:	89 c2                	mov    %eax,%edx
81003620:	8b 45 14             	mov    0x14(%ebp),%eax
81003623:	01 d0                	add    %edx,%eax
81003625:	8b 00                	mov    (%eax),%eax
81003627:	85 c0                	test   %eax,%eax
81003629:	0f 85 54 fe ff ff    	jne    81003483 <getopt_internal+0x4a3>
8100362f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003633:	78 13                	js     81003648 <getopt_internal+0x668>
81003635:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003638:	c1 e0 04             	shl    $0x4,%eax
8100363b:	89 c2                	mov    %eax,%edx
8100363d:	8b 45 14             	mov    0x14(%ebp),%eax
81003640:	01 d0                	add    %edx,%eax
81003642:	8b 40 04             	mov    0x4(%eax),%eax
81003645:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003648:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100364c:	0f 89 9a 01 00 00    	jns    810037ec <getopt_internal+0x80c>
81003652:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003656:	0f 84 90 01 00 00    	je     810037ec <getopt_internal+0x80c>
8100365c:	8b 45 20             	mov    0x20(%ebp),%eax
8100365f:	8b 40 04             	mov    0x4(%eax),%eax
81003662:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003669:	8b 45 0c             	mov    0xc(%ebp),%eax
8100366c:	01 d0                	add    %edx,%eax
8100366e:	8b 10                	mov    (%eax),%edx
81003670:	8b 45 20             	mov    0x20(%ebp),%eax
81003673:	8b 40 10             	mov    0x10(%eax),%eax
81003676:	01 d0                	add    %edx,%eax
81003678:	0f b6 00             	movzbl (%eax),%eax
8100367b:	0f be c0             	movsbl %al,%eax
8100367e:	83 ec 08             	sub    $0x8,%esp
81003681:	50                   	push   %eax
81003682:	ff 75 10             	pushl  0x10(%ebp)
81003685:	e8 96 32 00 00       	call   81006920 <strchr>
8100368a:	83 c4 10             	add    $0x10,%esp
8100368d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003690:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003694:	0f 85 f1 00 00 00    	jne    8100378b <getopt_internal+0x7ab>
8100369a:	8b 45 20             	mov    0x20(%ebp),%eax
8100369d:	8b 40 08             	mov    0x8(%eax),%eax
810036a0:	85 c0                	test   %eax,%eax
810036a2:	0f 84 83 00 00 00    	je     8100372b <getopt_internal+0x74b>
810036a8:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810036ad:	8b 50 0c             	mov    0xc(%eax),%edx
810036b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810036b3:	8b 00                	mov    (%eax),%eax
810036b5:	83 ec 08             	sub    $0x8,%esp
810036b8:	52                   	push   %edx
810036b9:	50                   	push   %eax
810036ba:	e8 00 e4 ff ff       	call   81001abf <fputs>
810036bf:	83 c4 10             	add    $0x10,%esp
810036c2:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810036c7:	8b 40 0c             	mov    0xc(%eax),%eax
810036ca:	83 ec 08             	sub    $0x8,%esp
810036cd:	50                   	push   %eax
810036ce:	68 94 86 00 81       	push   $0x81008694
810036d3:	e8 e7 e3 ff ff       	call   81001abf <fputs>
810036d8:	83 c4 10             	add    $0x10,%esp
810036db:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810036e0:	8b 50 0c             	mov    0xc(%eax),%edx
810036e3:	8b 45 20             	mov    0x20(%ebp),%eax
810036e6:	8b 40 04             	mov    0x4(%eax),%eax
810036e9:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
810036f0:	8b 45 0c             	mov    0xc(%ebp),%eax
810036f3:	01 c8                	add    %ecx,%eax
810036f5:	8b 08                	mov    (%eax),%ecx
810036f7:	8b 45 20             	mov    0x20(%ebp),%eax
810036fa:	8b 40 10             	mov    0x10(%eax),%eax
810036fd:	01 c8                	add    %ecx,%eax
810036ff:	0f b6 00             	movzbl (%eax),%eax
81003702:	0f be c0             	movsbl %al,%eax
81003705:	83 ec 08             	sub    $0x8,%esp
81003708:	52                   	push   %edx
81003709:	50                   	push   %eax
8100370a:	e8 d3 3c 00 00       	call   810073e2 <fputc>
8100370f:	83 c4 10             	add    $0x10,%esp
81003712:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003717:	8b 40 0c             	mov    0xc(%eax),%eax
8100371a:	83 ec 08             	sub    $0x8,%esp
8100371d:	50                   	push   %eax
8100371e:	68 ab 86 00 81       	push   $0x810086ab
81003723:	e8 97 e3 ff ff       	call   81001abf <fputs>
81003728:	83 c4 10             	add    $0x10,%esp
8100372b:	8b 45 20             	mov    0x20(%ebp),%eax
8100372e:	8b 40 10             	mov    0x10(%eax),%eax
81003731:	8d 50 01             	lea    0x1(%eax),%edx
81003734:	8b 45 20             	mov    0x20(%ebp),%eax
81003737:	89 50 10             	mov    %edx,0x10(%eax)
8100373a:	8b 45 20             	mov    0x20(%ebp),%eax
8100373d:	8b 40 04             	mov    0x4(%eax),%eax
81003740:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003747:	8b 45 0c             	mov    0xc(%ebp),%eax
8100374a:	01 d0                	add    %edx,%eax
8100374c:	8b 10                	mov    (%eax),%edx
8100374e:	8b 45 20             	mov    0x20(%ebp),%eax
81003751:	8b 40 10             	mov    0x10(%eax),%eax
81003754:	01 d0                	add    %edx,%eax
81003756:	0f b6 00             	movzbl (%eax),%eax
81003759:	84 c0                	test   %al,%al
8100375b:	75 19                	jne    81003776 <getopt_internal+0x796>
8100375d:	8b 45 20             	mov    0x20(%ebp),%eax
81003760:	8b 40 04             	mov    0x4(%eax),%eax
81003763:	8d 50 01             	lea    0x1(%eax),%edx
81003766:	8b 45 20             	mov    0x20(%ebp),%eax
81003769:	89 50 04             	mov    %edx,0x4(%eax)
8100376c:	8b 45 20             	mov    0x20(%ebp),%eax
8100376f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003776:	8b 45 20             	mov    0x20(%ebp),%eax
81003779:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003780:	8b 45 20             	mov    0x20(%ebp),%eax
81003783:	8b 40 0c             	mov    0xc(%eax),%eax
81003786:	e9 65 03 00 00       	jmp    81003af0 <getopt_internal+0xb10>
8100378b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100378e:	83 c0 01             	add    $0x1,%eax
81003791:	0f b6 00             	movzbl (%eax),%eax
81003794:	3c 3a                	cmp    $0x3a,%al
81003796:	75 1b                	jne    810037b3 <getopt_internal+0x7d3>
81003798:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100379b:	83 c0 02             	add    $0x2,%eax
8100379e:	0f b6 00             	movzbl (%eax),%eax
810037a1:	3c 3a                	cmp    $0x3a,%al
810037a3:	75 07                	jne    810037ac <getopt_internal+0x7cc>
810037a5:	b8 02 00 00 00       	mov    $0x2,%eax
810037aa:	eb 0c                	jmp    810037b8 <getopt_internal+0x7d8>
810037ac:	b8 01 00 00 00       	mov    $0x1,%eax
810037b1:	eb 05                	jmp    810037b8 <getopt_internal+0x7d8>
810037b3:	b8 00 00 00 00       	mov    $0x0,%eax
810037b8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810037bb:	8b 45 20             	mov    0x20(%ebp),%eax
810037be:	8b 40 04             	mov    0x4(%eax),%eax
810037c1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810037c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810037cb:	01 d0                	add    %edx,%eax
810037cd:	8b 10                	mov    (%eax),%edx
810037cf:	8b 45 20             	mov    0x20(%ebp),%eax
810037d2:	8b 40 10             	mov    0x10(%eax),%eax
810037d5:	83 c0 01             	add    $0x1,%eax
810037d8:	01 d0                	add    %edx,%eax
810037da:	89 45 e8             	mov    %eax,-0x18(%ebp)
810037dd:	8b 45 dc             	mov    -0x24(%ebp),%eax
810037e0:	0f b6 00             	movzbl (%eax),%eax
810037e3:	0f be d0             	movsbl %al,%edx
810037e6:	8b 45 20             	mov    0x20(%ebp),%eax
810037e9:	89 50 0c             	mov    %edx,0xc(%eax)
810037ec:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810037f3:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
810037f7:	74 40                	je     81003839 <getopt_internal+0x859>
810037f9:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810037fd:	0f 85 b0 01 00 00    	jne    810039b3 <getopt_internal+0x9d3>
81003803:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003806:	0f b6 00             	movzbl (%eax),%eax
81003809:	3c 3d                	cmp    $0x3d,%al
8100380b:	75 04                	jne    81003811 <getopt_internal+0x831>
8100380d:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003811:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003814:	0f b6 00             	movzbl (%eax),%eax
81003817:	84 c0                	test   %al,%al
81003819:	74 05                	je     81003820 <getopt_internal+0x840>
8100381b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100381e:	eb 05                	jmp    81003825 <getopt_internal+0x845>
81003820:	b8 00 00 00 00       	mov    $0x0,%eax
81003825:	8b 55 20             	mov    0x20(%ebp),%edx
81003828:	89 02                	mov    %eax,(%edx)
8100382a:	8b 45 20             	mov    0x20(%ebp),%eax
8100382d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003834:	e9 d2 01 00 00       	jmp    81003a0b <getopt_internal+0xa2b>
81003839:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100383c:	0f b6 00             	movzbl (%eax),%eax
8100383f:	3c 3d                	cmp    $0x3d,%al
81003841:	75 04                	jne    81003847 <getopt_internal+0x867>
81003843:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003847:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100384a:	0f b6 00             	movzbl (%eax),%eax
8100384d:	84 c0                	test   %al,%al
8100384f:	74 17                	je     81003868 <getopt_internal+0x888>
81003851:	8b 45 20             	mov    0x20(%ebp),%eax
81003854:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003857:	89 10                	mov    %edx,(%eax)
81003859:	8b 45 20             	mov    0x20(%ebp),%eax
8100385c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003863:	e9 a3 01 00 00       	jmp    81003a0b <getopt_internal+0xa2b>
81003868:	8b 45 20             	mov    0x20(%ebp),%eax
8100386b:	8b 40 04             	mov    0x4(%eax),%eax
8100386e:	83 c0 01             	add    $0x1,%eax
81003871:	39 45 08             	cmp    %eax,0x8(%ebp)
81003874:	0f 8f 0a 01 00 00    	jg     81003984 <getopt_internal+0x9a4>
8100387a:	8b 45 20             	mov    0x20(%ebp),%eax
8100387d:	8b 40 08             	mov    0x8(%eax),%eax
81003880:	85 c0                	test   %eax,%eax
81003882:	0f 84 d3 00 00 00    	je     8100395b <getopt_internal+0x97b>
81003888:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100388d:	8b 50 0c             	mov    0xc(%eax),%edx
81003890:	8b 45 0c             	mov    0xc(%ebp),%eax
81003893:	8b 00                	mov    (%eax),%eax
81003895:	83 ec 08             	sub    $0x8,%esp
81003898:	52                   	push   %edx
81003899:	50                   	push   %eax
8100389a:	e8 20 e2 ff ff       	call   81001abf <fputs>
8100389f:	83 c4 10             	add    $0x10,%esp
810038a2:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810038a7:	8b 40 0c             	mov    0xc(%eax),%eax
810038aa:	83 ec 08             	sub    $0x8,%esp
810038ad:	50                   	push   %eax
810038ae:	68 b0 86 00 81       	push   $0x810086b0
810038b3:	e8 07 e2 ff ff       	call   81001abf <fputs>
810038b8:	83 c4 10             	add    $0x10,%esp
810038bb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810038bf:	78 54                	js     81003915 <getopt_internal+0x935>
810038c1:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810038c6:	8b 40 0c             	mov    0xc(%eax),%eax
810038c9:	83 ec 08             	sub    $0x8,%esp
810038cc:	50                   	push   %eax
810038cd:	6a 2d                	push   $0x2d
810038cf:	e8 0e 3b 00 00       	call   810073e2 <fputc>
810038d4:	83 c4 10             	add    $0x10,%esp
810038d7:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810038dc:	8b 50 0c             	mov    0xc(%eax),%edx
810038df:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810038e2:	c1 e0 04             	shl    $0x4,%eax
810038e5:	89 c1                	mov    %eax,%ecx
810038e7:	8b 45 14             	mov    0x14(%ebp),%eax
810038ea:	01 c8                	add    %ecx,%eax
810038ec:	8b 00                	mov    (%eax),%eax
810038ee:	83 ec 08             	sub    $0x8,%esp
810038f1:	52                   	push   %edx
810038f2:	50                   	push   %eax
810038f3:	e8 c7 e1 ff ff       	call   81001abf <fputs>
810038f8:	83 c4 10             	add    $0x10,%esp
810038fb:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810038ff:	74 07                	je     81003908 <getopt_internal+0x928>
81003901:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003906:	eb 05                	jmp    8100390d <getopt_internal+0x92d>
81003908:	ba 3f 00 00 00       	mov    $0x3f,%edx
8100390d:	8b 45 20             	mov    0x20(%ebp),%eax
81003910:	89 50 0c             	mov    %edx,0xc(%eax)
81003913:	eb 2d                	jmp    81003942 <getopt_internal+0x962>
81003915:	a1 84 8e 00 81       	mov    0x81008e84,%eax
8100391a:	8b 50 0c             	mov    0xc(%eax),%edx
8100391d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003920:	0f b6 00             	movzbl (%eax),%eax
81003923:	0f be c0             	movsbl %al,%eax
81003926:	83 ec 08             	sub    $0x8,%esp
81003929:	52                   	push   %edx
8100392a:	50                   	push   %eax
8100392b:	e8 b2 3a 00 00       	call   810073e2 <fputc>
81003930:	83 c4 10             	add    $0x10,%esp
81003933:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003936:	0f b6 00             	movzbl (%eax),%eax
81003939:	0f be d0             	movsbl %al,%edx
8100393c:	8b 45 20             	mov    0x20(%ebp),%eax
8100393f:	89 50 0c             	mov    %edx,0xc(%eax)
81003942:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003947:	8b 40 0c             	mov    0xc(%eax),%eax
8100394a:	83 ec 08             	sub    $0x8,%esp
8100394d:	50                   	push   %eax
8100394e:	68 ab 86 00 81       	push   $0x810086ab
81003953:	e8 67 e1 ff ff       	call   81001abf <fputs>
81003958:	83 c4 10             	add    $0x10,%esp
8100395b:	8b 45 20             	mov    0x20(%ebp),%eax
8100395e:	8b 40 04             	mov    0x4(%eax),%eax
81003961:	8d 50 01             	lea    0x1(%eax),%edx
81003964:	8b 45 20             	mov    0x20(%ebp),%eax
81003967:	89 50 04             	mov    %edx,0x4(%eax)
8100396a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100396e:	74 0a                	je     8100397a <getopt_internal+0x99a>
81003970:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003975:	e9 76 01 00 00       	jmp    81003af0 <getopt_internal+0xb10>
8100397a:	b8 3f 00 00 00       	mov    $0x3f,%eax
8100397f:	e9 6c 01 00 00       	jmp    81003af0 <getopt_internal+0xb10>
81003984:	8b 45 20             	mov    0x20(%ebp),%eax
81003987:	8b 40 04             	mov    0x4(%eax),%eax
8100398a:	83 c0 01             	add    $0x1,%eax
8100398d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003994:	8b 45 0c             	mov    0xc(%ebp),%eax
81003997:	01 d0                	add    %edx,%eax
81003999:	8b 10                	mov    (%eax),%edx
8100399b:	8b 45 20             	mov    0x20(%ebp),%eax
8100399e:	89 10                	mov    %edx,(%eax)
810039a0:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810039a7:	8b 45 20             	mov    0x20(%ebp),%eax
810039aa:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810039b1:	eb 58                	jmp    81003a0b <getopt_internal+0xa2b>
810039b3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810039b7:	79 3e                	jns    810039f7 <getopt_internal+0xa17>
810039b9:	8b 45 20             	mov    0x20(%ebp),%eax
810039bc:	8b 40 10             	mov    0x10(%eax),%eax
810039bf:	8d 50 01             	lea    0x1(%eax),%edx
810039c2:	8b 45 20             	mov    0x20(%ebp),%eax
810039c5:	89 50 10             	mov    %edx,0x10(%eax)
810039c8:	8b 45 20             	mov    0x20(%ebp),%eax
810039cb:	8b 40 04             	mov    0x4(%eax),%eax
810039ce:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810039d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810039d8:	01 d0                	add    %edx,%eax
810039da:	8b 10                	mov    (%eax),%edx
810039dc:	8b 45 20             	mov    0x20(%ebp),%eax
810039df:	8b 40 10             	mov    0x10(%eax),%eax
810039e2:	01 d0                	add    %edx,%eax
810039e4:	0f b6 00             	movzbl (%eax),%eax
810039e7:	84 c0                	test   %al,%al
810039e9:	75 16                	jne    81003a01 <getopt_internal+0xa21>
810039eb:	8b 45 20             	mov    0x20(%ebp),%eax
810039ee:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810039f5:	eb 0a                	jmp    81003a01 <getopt_internal+0xa21>
810039f7:	8b 45 20             	mov    0x20(%ebp),%eax
810039fa:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003a01:	8b 45 20             	mov    0x20(%ebp),%eax
81003a04:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003a0a:	90                   	nop
81003a0b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003a0f:	75 57                	jne    81003a68 <getopt_internal+0xa88>
81003a11:	8b 45 20             	mov    0x20(%ebp),%eax
81003a14:	8b 40 10             	mov    0x10(%eax),%eax
81003a17:	83 f8 01             	cmp    $0x1,%eax
81003a1a:	75 4c                	jne    81003a68 <getopt_internal+0xa88>
81003a1c:	8b 45 20             	mov    0x20(%ebp),%eax
81003a1f:	8b 40 18             	mov    0x18(%eax),%eax
81003a22:	85 c0                	test   %eax,%eax
81003a24:	74 42                	je     81003a68 <getopt_internal+0xa88>
81003a26:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a29:	8d 48 01             	lea    0x1(%eax),%ecx
81003a2c:	8b 45 20             	mov    0x20(%ebp),%eax
81003a2f:	8b 40 18             	mov    0x18(%eax),%eax
81003a32:	8b 55 20             	mov    0x20(%ebp),%edx
81003a35:	8b 52 14             	mov    0x14(%edx),%edx
81003a38:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003a3f:	8b 55 0c             	mov    0xc(%ebp),%edx
81003a42:	01 da                	add    %ebx,%edx
81003a44:	83 ec 04             	sub    $0x4,%esp
81003a47:	51                   	push   %ecx
81003a48:	50                   	push   %eax
81003a49:	52                   	push   %edx
81003a4a:	e8 7f f4 ff ff       	call   81002ece <permute>
81003a4f:	83 c4 10             	add    $0x10,%esp
81003a52:	8b 45 20             	mov    0x20(%ebp),%eax
81003a55:	8b 40 14             	mov    0x14(%eax),%eax
81003a58:	8d 50 01             	lea    0x1(%eax),%edx
81003a5b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a5e:	01 c2                	add    %eax,%edx
81003a60:	8b 45 20             	mov    0x20(%ebp),%eax
81003a63:	89 50 04             	mov    %edx,0x4(%eax)
81003a66:	eb 1f                	jmp    81003a87 <getopt_internal+0xaa7>
81003a68:	8b 45 20             	mov    0x20(%ebp),%eax
81003a6b:	8b 40 10             	mov    0x10(%eax),%eax
81003a6e:	83 f8 01             	cmp    $0x1,%eax
81003a71:	75 14                	jne    81003a87 <getopt_internal+0xaa7>
81003a73:	8b 45 20             	mov    0x20(%ebp),%eax
81003a76:	8b 40 04             	mov    0x4(%eax),%eax
81003a79:	8d 50 01             	lea    0x1(%eax),%edx
81003a7c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a7f:	01 c2                	add    %eax,%edx
81003a81:	8b 45 20             	mov    0x20(%ebp),%eax
81003a84:	89 50 04             	mov    %edx,0x4(%eax)
81003a87:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003a8b:	78 5d                	js     81003aea <getopt_internal+0xb0a>
81003a8d:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003a91:	74 08                	je     81003a9b <getopt_internal+0xabb>
81003a93:	8b 45 18             	mov    0x18(%ebp),%eax
81003a96:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003a99:	89 10                	mov    %edx,(%eax)
81003a9b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003a9e:	c1 e0 04             	shl    $0x4,%eax
81003aa1:	89 c2                	mov    %eax,%edx
81003aa3:	8b 45 14             	mov    0x14(%ebp),%eax
81003aa6:	01 d0                	add    %edx,%eax
81003aa8:	8b 40 08             	mov    0x8(%eax),%eax
81003aab:	85 c0                	test   %eax,%eax
81003aad:	74 29                	je     81003ad8 <getopt_internal+0xaf8>
81003aaf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003ab2:	c1 e0 04             	shl    $0x4,%eax
81003ab5:	89 c2                	mov    %eax,%edx
81003ab7:	8b 45 14             	mov    0x14(%ebp),%eax
81003aba:	01 c2                	add    %eax,%edx
81003abc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003abf:	c1 e0 04             	shl    $0x4,%eax
81003ac2:	89 c1                	mov    %eax,%ecx
81003ac4:	8b 45 14             	mov    0x14(%ebp),%eax
81003ac7:	01 c8                	add    %ecx,%eax
81003ac9:	8b 40 08             	mov    0x8(%eax),%eax
81003acc:	8b 52 0c             	mov    0xc(%edx),%edx
81003acf:	89 10                	mov    %edx,(%eax)
81003ad1:	b8 00 00 00 00       	mov    $0x0,%eax
81003ad6:	eb 18                	jmp    81003af0 <getopt_internal+0xb10>
81003ad8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003adb:	c1 e0 04             	shl    $0x4,%eax
81003ade:	89 c2                	mov    %eax,%edx
81003ae0:	8b 45 14             	mov    0x14(%ebp),%eax
81003ae3:	01 d0                	add    %edx,%eax
81003ae5:	8b 40 0c             	mov    0xc(%eax),%eax
81003ae8:	eb 06                	jmp    81003af0 <getopt_internal+0xb10>
81003aea:	8b 45 20             	mov    0x20(%ebp),%eax
81003aed:	8b 40 0c             	mov    0xc(%eax),%eax
81003af0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003af3:	c9                   	leave  
81003af4:	c3                   	ret    

81003af5 <getopt>:
81003af5:	55                   	push   %ebp
81003af6:	89 e5                	mov    %esp,%ebp
81003af8:	83 ec 28             	sub    $0x28,%esp
81003afb:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003afe:	50                   	push   %eax
81003aff:	e8 31 f4 ff ff       	call   81002f35 <read_globals>
81003b04:	83 c4 04             	add    $0x4,%esp
81003b07:	83 ec 04             	sub    $0x4,%esp
81003b0a:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b0d:	50                   	push   %eax
81003b0e:	6a 00                	push   $0x0
81003b10:	6a 00                	push   $0x0
81003b12:	6a 00                	push   $0x0
81003b14:	ff 75 10             	pushl  0x10(%ebp)
81003b17:	ff 75 0c             	pushl  0xc(%ebp)
81003b1a:	ff 75 08             	pushl  0x8(%ebp)
81003b1d:	e8 be f4 ff ff       	call   81002fe0 <getopt_internal>
81003b22:	83 c4 20             	add    $0x20,%esp
81003b25:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b28:	83 ec 0c             	sub    $0xc,%esp
81003b2b:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b2e:	50                   	push   %eax
81003b2f:	e8 5a f4 ff ff       	call   81002f8e <write_globals>
81003b34:	83 c4 10             	add    $0x10,%esp
81003b37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b3a:	c9                   	leave  
81003b3b:	c3                   	ret    

81003b3c <getopt_long>:
81003b3c:	55                   	push   %ebp
81003b3d:	89 e5                	mov    %esp,%ebp
81003b3f:	83 ec 28             	sub    $0x28,%esp
81003b42:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b45:	50                   	push   %eax
81003b46:	e8 ea f3 ff ff       	call   81002f35 <read_globals>
81003b4b:	83 c4 04             	add    $0x4,%esp
81003b4e:	83 ec 04             	sub    $0x4,%esp
81003b51:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b54:	50                   	push   %eax
81003b55:	6a 00                	push   $0x0
81003b57:	ff 75 18             	pushl  0x18(%ebp)
81003b5a:	ff 75 14             	pushl  0x14(%ebp)
81003b5d:	ff 75 10             	pushl  0x10(%ebp)
81003b60:	ff 75 0c             	pushl  0xc(%ebp)
81003b63:	ff 75 08             	pushl  0x8(%ebp)
81003b66:	e8 75 f4 ff ff       	call   81002fe0 <getopt_internal>
81003b6b:	83 c4 20             	add    $0x20,%esp
81003b6e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b71:	83 ec 0c             	sub    $0xc,%esp
81003b74:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b77:	50                   	push   %eax
81003b78:	e8 11 f4 ff ff       	call   81002f8e <write_globals>
81003b7d:	83 c4 10             	add    $0x10,%esp
81003b80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b83:	c9                   	leave  
81003b84:	c3                   	ret    

81003b85 <getopt_long_only>:
81003b85:	55                   	push   %ebp
81003b86:	89 e5                	mov    %esp,%ebp
81003b88:	83 ec 28             	sub    $0x28,%esp
81003b8b:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b8e:	50                   	push   %eax
81003b8f:	e8 a1 f3 ff ff       	call   81002f35 <read_globals>
81003b94:	83 c4 04             	add    $0x4,%esp
81003b97:	83 ec 04             	sub    $0x4,%esp
81003b9a:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003b9d:	50                   	push   %eax
81003b9e:	6a 01                	push   $0x1
81003ba0:	ff 75 18             	pushl  0x18(%ebp)
81003ba3:	ff 75 14             	pushl  0x14(%ebp)
81003ba6:	ff 75 10             	pushl  0x10(%ebp)
81003ba9:	ff 75 0c             	pushl  0xc(%ebp)
81003bac:	ff 75 08             	pushl  0x8(%ebp)
81003baf:	e8 2c f4 ff ff       	call   81002fe0 <getopt_internal>
81003bb4:	83 c4 20             	add    $0x20,%esp
81003bb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003bba:	83 ec 0c             	sub    $0xc,%esp
81003bbd:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003bc0:	50                   	push   %eax
81003bc1:	e8 c8 f3 ff ff       	call   81002f8e <write_globals>
81003bc6:	83 c4 10             	add    $0x10,%esp
81003bc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bcc:	c9                   	leave  
81003bcd:	c3                   	ret    

81003bce <__getopt_r>:
81003bce:	55                   	push   %ebp
81003bcf:	89 e5                	mov    %esp,%ebp
81003bd1:	83 ec 08             	sub    $0x8,%esp
81003bd4:	83 ec 04             	sub    $0x4,%esp
81003bd7:	ff 75 14             	pushl  0x14(%ebp)
81003bda:	6a 00                	push   $0x0
81003bdc:	6a 00                	push   $0x0
81003bde:	6a 00                	push   $0x0
81003be0:	ff 75 10             	pushl  0x10(%ebp)
81003be3:	ff 75 0c             	pushl  0xc(%ebp)
81003be6:	ff 75 08             	pushl  0x8(%ebp)
81003be9:	e8 f2 f3 ff ff       	call   81002fe0 <getopt_internal>
81003bee:	83 c4 20             	add    $0x20,%esp
81003bf1:	c9                   	leave  
81003bf2:	c3                   	ret    

81003bf3 <__getopt_long_r>:
81003bf3:	55                   	push   %ebp
81003bf4:	89 e5                	mov    %esp,%ebp
81003bf6:	83 ec 08             	sub    $0x8,%esp
81003bf9:	83 ec 04             	sub    $0x4,%esp
81003bfc:	ff 75 1c             	pushl  0x1c(%ebp)
81003bff:	6a 00                	push   $0x0
81003c01:	ff 75 18             	pushl  0x18(%ebp)
81003c04:	ff 75 14             	pushl  0x14(%ebp)
81003c07:	ff 75 10             	pushl  0x10(%ebp)
81003c0a:	ff 75 0c             	pushl  0xc(%ebp)
81003c0d:	ff 75 08             	pushl  0x8(%ebp)
81003c10:	e8 cb f3 ff ff       	call   81002fe0 <getopt_internal>
81003c15:	83 c4 20             	add    $0x20,%esp
81003c18:	c9                   	leave  
81003c19:	c3                   	ret    

81003c1a <__getopt_long_only_r>:
81003c1a:	55                   	push   %ebp
81003c1b:	89 e5                	mov    %esp,%ebp
81003c1d:	83 ec 08             	sub    $0x8,%esp
81003c20:	83 ec 04             	sub    $0x4,%esp
81003c23:	ff 75 1c             	pushl  0x1c(%ebp)
81003c26:	6a 01                	push   $0x1
81003c28:	ff 75 18             	pushl  0x18(%ebp)
81003c2b:	ff 75 14             	pushl  0x14(%ebp)
81003c2e:	ff 75 10             	pushl  0x10(%ebp)
81003c31:	ff 75 0c             	pushl  0xc(%ebp)
81003c34:	ff 75 08             	pushl  0x8(%ebp)
81003c37:	e8 a4 f3 ff ff       	call   81002fe0 <getopt_internal>
81003c3c:	83 c4 20             	add    $0x20,%esp
81003c3f:	c9                   	leave  
81003c40:	c3                   	ret    

81003c41 <__smakebuf_r>:
81003c41:	55                   	push   %ebp
81003c42:	89 e5                	mov    %esp,%ebp
81003c44:	56                   	push   %esi
81003c45:	53                   	push   %ebx
81003c46:	83 ec 10             	sub    $0x10,%esp
81003c49:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003c4c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003c50:	98                   	cwtl   
81003c51:	83 e0 02             	and    $0x2,%eax
81003c54:	85 c0                	test   %eax,%eax
81003c56:	74 16                	je     81003c6e <__smakebuf_r+0x2d>
81003c58:	8d 43 43             	lea    0x43(%ebx),%eax
81003c5b:	89 03                	mov    %eax,(%ebx)
81003c5d:	8b 03                	mov    (%ebx),%eax
81003c5f:	89 43 10             	mov    %eax,0x10(%ebx)
81003c62:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003c69:	e9 b9 00 00 00       	jmp    81003d27 <__smakebuf_r+0xe6>
81003c6e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003c71:	50                   	push   %eax
81003c72:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003c75:	50                   	push   %eax
81003c76:	53                   	push   %ebx
81003c77:	ff 75 08             	pushl  0x8(%ebp)
81003c7a:	e8 af 00 00 00       	call   81003d2e <__swhatbuf_r>
81003c7f:	83 c4 10             	add    $0x10,%esp
81003c82:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c85:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c88:	83 ec 08             	sub    $0x8,%esp
81003c8b:	50                   	push   %eax
81003c8c:	ff 75 08             	pushl  0x8(%ebp)
81003c8f:	e8 f9 03 00 00       	call   8100408d <_malloc_r>
81003c94:	83 c4 10             	add    $0x10,%esp
81003c97:	89 c6                	mov    %eax,%esi
81003c99:	85 f6                	test   %esi,%esi
81003c9b:	75 2f                	jne    81003ccc <__smakebuf_r+0x8b>
81003c9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ca1:	98                   	cwtl   
81003ca2:	25 00 02 00 00       	and    $0x200,%eax
81003ca7:	85 c0                	test   %eax,%eax
81003ca9:	75 7c                	jne    81003d27 <__smakebuf_r+0xe6>
81003cab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003caf:	83 e0 fc             	and    $0xfffffffc,%eax
81003cb2:	83 c8 02             	or     $0x2,%eax
81003cb5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003cb9:	8d 43 43             	lea    0x43(%ebx),%eax
81003cbc:	89 03                	mov    %eax,(%ebx)
81003cbe:	8b 03                	mov    (%ebx),%eax
81003cc0:	89 43 10             	mov    %eax,0x10(%ebx)
81003cc3:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003cca:	eb 5b                	jmp    81003d27 <__smakebuf_r+0xe6>
81003ccc:	8b 45 08             	mov    0x8(%ebp),%eax
81003ccf:	c7 40 3c 88 17 00 81 	movl   $0x81001788,0x3c(%eax)
81003cd6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003cda:	0c 80                	or     $0x80,%al
81003cdc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003ce0:	89 33                	mov    %esi,(%ebx)
81003ce2:	8b 03                	mov    (%ebx),%eax
81003ce4:	89 43 10             	mov    %eax,0x10(%ebx)
81003ce7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cea:	89 43 14             	mov    %eax,0x14(%ebx)
81003ced:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cf0:	85 c0                	test   %eax,%eax
81003cf2:	74 26                	je     81003d1a <__smakebuf_r+0xd9>
81003cf4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003cf8:	98                   	cwtl   
81003cf9:	83 ec 08             	sub    $0x8,%esp
81003cfc:	50                   	push   %eax
81003cfd:	ff 75 08             	pushl  0x8(%ebp)
81003d00:	e8 2a 3a 00 00       	call   8100772f <_isatty_r>
81003d05:	83 c4 10             	add    $0x10,%esp
81003d08:	85 c0                	test   %eax,%eax
81003d0a:	74 0e                	je     81003d1a <__smakebuf_r+0xd9>
81003d0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d10:	83 e0 fc             	and    $0xfffffffc,%eax
81003d13:	83 c8 01             	or     $0x1,%eax
81003d16:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003d1a:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003d1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d21:	09 d0                	or     %edx,%eax
81003d23:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003d27:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003d2a:	5b                   	pop    %ebx
81003d2b:	5e                   	pop    %esi
81003d2c:	5d                   	pop    %ebp
81003d2d:	c3                   	ret    

81003d2e <__swhatbuf_r>:
81003d2e:	55                   	push   %ebp
81003d2f:	89 e5                	mov    %esp,%ebp
81003d31:	83 ec 58             	sub    $0x58,%esp
81003d34:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003d3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d3e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003d42:	66 85 c0             	test   %ax,%ax
81003d45:	78 1f                	js     81003d66 <__swhatbuf_r+0x38>
81003d47:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d4a:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003d4e:	98                   	cwtl   
81003d4f:	83 ec 04             	sub    $0x4,%esp
81003d52:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003d55:	52                   	push   %edx
81003d56:	50                   	push   %eax
81003d57:	ff 75 08             	pushl  0x8(%ebp)
81003d5a:	e8 63 ea ff ff       	call   810027c2 <_fstat_r>
81003d5f:	83 c4 10             	add    $0x10,%esp
81003d62:	85 c0                	test   %eax,%eax
81003d64:	79 35                	jns    81003d9b <__swhatbuf_r+0x6d>
81003d66:	8b 45 14             	mov    0x14(%ebp),%eax
81003d69:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003d6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d72:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003d76:	98                   	cwtl   
81003d77:	25 80 00 00 00       	and    $0x80,%eax
81003d7c:	85 c0                	test   %eax,%eax
81003d7e:	74 0b                	je     81003d8b <__swhatbuf_r+0x5d>
81003d80:	8b 45 10             	mov    0x10(%ebp),%eax
81003d83:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003d89:	eb 09                	jmp    81003d94 <__swhatbuf_r+0x66>
81003d8b:	8b 45 10             	mov    0x10(%ebp),%eax
81003d8e:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003d94:	b8 00 00 00 00       	mov    $0x0,%eax
81003d99:	eb 24                	jmp    81003dbf <__swhatbuf_r+0x91>
81003d9b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003d9e:	25 00 f0 00 00       	and    $0xf000,%eax
81003da3:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003da8:	0f 94 c0             	sete   %al
81003dab:	0f b6 d0             	movzbl %al,%edx
81003dae:	8b 45 14             	mov    0x14(%ebp),%eax
81003db1:	89 10                	mov    %edx,(%eax)
81003db3:	8b 45 10             	mov    0x10(%ebp),%eax
81003db6:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003dbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dbf:	c9                   	leave  
81003dc0:	c3                   	ret    

81003dc1 <malloc>:
81003dc1:	55                   	push   %ebp
81003dc2:	89 e5                	mov    %esp,%ebp
81003dc4:	83 ec 08             	sub    $0x8,%esp
81003dc7:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003dcc:	83 ec 08             	sub    $0x8,%esp
81003dcf:	ff 75 08             	pushl  0x8(%ebp)
81003dd2:	50                   	push   %eax
81003dd3:	e8 b5 02 00 00       	call   8100408d <_malloc_r>
81003dd8:	83 c4 10             	add    $0x10,%esp
81003ddb:	c9                   	leave  
81003ddc:	c3                   	ret    

81003ddd <free>:
81003ddd:	55                   	push   %ebp
81003dde:	89 e5                	mov    %esp,%ebp
81003de0:	83 ec 08             	sub    $0x8,%esp
81003de3:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81003de8:	83 ec 08             	sub    $0x8,%esp
81003deb:	ff 75 08             	pushl  0x8(%ebp)
81003dee:	50                   	push   %eax
81003def:	e8 84 df ff ff       	call   81001d78 <_free_r>
81003df4:	83 c4 10             	add    $0x10,%esp
81003df7:	90                   	nop
81003df8:	c9                   	leave  
81003df9:	c3                   	ret    

81003dfa <malloc_extend_top>:
81003dfa:	55                   	push   %ebp
81003dfb:	89 e5                	mov    %esp,%ebp
81003dfd:	83 ec 38             	sub    $0x38,%esp
81003e00:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003e07:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81003e0c:	8b 40 08             	mov    0x8(%eax),%eax
81003e0f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003e12:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003e15:	8b 40 04             	mov    0x4(%eax),%eax
81003e18:	83 e0 fc             	and    $0xfffffffc,%eax
81003e1b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e1e:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003e21:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003e24:	01 d0                	add    %edx,%eax
81003e26:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003e29:	8b 15 80 99 00 81    	mov    0x81009980,%edx
81003e2f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e32:	01 d0                	add    %edx,%eax
81003e34:	83 c0 10             	add    $0x10,%eax
81003e37:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e3a:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003e41:	a1 ac 92 00 81       	mov    0x810092ac,%eax
81003e46:	83 f8 ff             	cmp    $0xffffffff,%eax
81003e49:	74 15                	je     81003e60 <malloc_extend_top+0x66>
81003e4b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003e4e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e51:	01 d0                	add    %edx,%eax
81003e53:	8d 50 ff             	lea    -0x1(%eax),%edx
81003e56:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003e59:	f7 d8                	neg    %eax
81003e5b:	21 d0                	and    %edx,%eax
81003e5d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e60:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e63:	83 ec 08             	sub    $0x8,%esp
81003e66:	50                   	push   %eax
81003e67:	ff 75 08             	pushl  0x8(%ebp)
81003e6a:	e8 9a 26 00 00       	call   81006509 <_sbrk_r>
81003e6f:	83 c4 10             	add    $0x10,%esp
81003e72:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e75:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003e79:	0f 84 0b 02 00 00    	je     8100408a <malloc_extend_top+0x290>
81003e7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e82:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003e85:	73 0e                	jae    81003e95 <malloc_extend_top+0x9b>
81003e87:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81003e8c:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003e8f:	0f 85 f5 01 00 00    	jne    8100408a <malloc_extend_top+0x290>
81003e95:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81003e9a:	89 c2                	mov    %eax,%edx
81003e9c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e9f:	01 d0                	add    %edx,%eax
81003ea1:	a3 a0 99 00 81       	mov    %eax,0x810099a0
81003ea6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ea9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003eac:	75 30                	jne    81003ede <malloc_extend_top+0xe4>
81003eae:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003eb1:	8d 50 ff             	lea    -0x1(%eax),%edx
81003eb4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003eb7:	21 d0                	and    %edx,%eax
81003eb9:	85 c0                	test   %eax,%eax
81003ebb:	75 21                	jne    81003ede <malloc_extend_top+0xe4>
81003ebd:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ec0:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ec3:	01 d0                	add    %edx,%eax
81003ec5:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003ec8:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81003ecd:	8b 40 08             	mov    0x8(%eax),%eax
81003ed0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003ed3:	83 ca 01             	or     $0x1,%edx
81003ed6:	89 50 04             	mov    %edx,0x4(%eax)
81003ed9:	e9 76 01 00 00       	jmp    81004054 <malloc_extend_top+0x25a>
81003ede:	a1 ac 92 00 81       	mov    0x810092ac,%eax
81003ee3:	83 f8 ff             	cmp    $0xffffffff,%eax
81003ee6:	75 0a                	jne    81003ef2 <malloc_extend_top+0xf8>
81003ee8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003eeb:	a3 ac 92 00 81       	mov    %eax,0x810092ac
81003ef0:	eb 13                	jmp    81003f05 <malloc_extend_top+0x10b>
81003ef2:	8b 15 a0 99 00 81    	mov    0x810099a0,%edx
81003ef8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003efb:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003efe:	01 d0                	add    %edx,%eax
81003f00:	a3 a0 99 00 81       	mov    %eax,0x810099a0
81003f05:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f08:	83 c0 08             	add    $0x8,%eax
81003f0b:	83 e0 07             	and    $0x7,%eax
81003f0e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003f11:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003f15:	74 13                	je     81003f2a <malloc_extend_top+0x130>
81003f17:	b8 08 00 00 00       	mov    $0x8,%eax
81003f1c:	2b 45 cc             	sub    -0x34(%ebp),%eax
81003f1f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f25:	01 45 f4             	add    %eax,-0xc(%ebp)
81003f28:	eb 07                	jmp    81003f31 <malloc_extend_top+0x137>
81003f2a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003f31:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003f34:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f37:	01 d0                	add    %edx,%eax
81003f39:	89 c2                	mov    %eax,%edx
81003f3b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f3e:	83 e8 01             	sub    $0x1,%eax
81003f41:	21 c2                	and    %eax,%edx
81003f43:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f46:	29 d0                	sub    %edx,%eax
81003f48:	01 45 f0             	add    %eax,-0x10(%ebp)
81003f4b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f4e:	83 e8 01             	sub    $0x1,%eax
81003f51:	21 45 f0             	and    %eax,-0x10(%ebp)
81003f54:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f57:	83 ec 08             	sub    $0x8,%esp
81003f5a:	50                   	push   %eax
81003f5b:	ff 75 08             	pushl  0x8(%ebp)
81003f5e:	e8 a6 25 00 00       	call   81006509 <_sbrk_r>
81003f63:	83 c4 10             	add    $0x10,%esp
81003f66:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003f69:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81003f6d:	75 28                	jne    81003f97 <malloc_extend_top+0x19d>
81003f6f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003f76:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003f7d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003f80:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f83:	01 d0                	add    %edx,%eax
81003f85:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003f88:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003f8c:	74 09                	je     81003f97 <malloc_extend_top+0x19d>
81003f8e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f91:	83 e8 08             	sub    $0x8,%eax
81003f94:	01 45 ec             	add    %eax,-0x14(%ebp)
81003f97:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81003f9c:	89 c2                	mov    %eax,%edx
81003f9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fa1:	01 d0                	add    %edx,%eax
81003fa3:	a3 a0 99 00 81       	mov    %eax,0x810099a0
81003fa8:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
81003fad:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fb0:	89 42 08             	mov    %eax,0x8(%edx)
81003fb3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003fb6:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003fb9:	89 c2                	mov    %eax,%edx
81003fbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fbe:	01 d0                	add    %edx,%eax
81003fc0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003fc3:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81003fc8:	8b 40 08             	mov    0x8(%eax),%eax
81003fcb:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003fce:	83 ca 01             	or     $0x1,%edx
81003fd1:	89 50 04             	mov    %edx,0x4(%eax)
81003fd4:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81003fd9:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003fdc:	74 76                	je     81004054 <malloc_extend_top+0x25a>
81003fde:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003fe2:	77 14                	ja     81003ff8 <malloc_extend_top+0x1fe>
81003fe4:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81003fe9:	8b 40 08             	mov    0x8(%eax),%eax
81003fec:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003ff3:	e9 93 00 00 00       	jmp    8100408b <malloc_extend_top+0x291>
81003ff8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ffb:	83 e8 0c             	sub    $0xc,%eax
81003ffe:	83 e0 f8             	and    $0xfffffff8,%eax
81004001:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004004:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004007:	8b 40 04             	mov    0x4(%eax),%eax
8100400a:	83 e0 01             	and    $0x1,%eax
8100400d:	0b 45 dc             	or     -0x24(%ebp),%eax
81004010:	89 c2                	mov    %eax,%edx
81004012:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004015:	89 50 04             	mov    %edx,0x4(%eax)
81004018:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100401b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100401e:	01 d0                	add    %edx,%eax
81004020:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81004027:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100402a:	8d 50 04             	lea    0x4(%eax),%edx
8100402d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004030:	01 d0                	add    %edx,%eax
81004032:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81004039:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100403d:	76 15                	jbe    81004054 <malloc_extend_top+0x25a>
8100403f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004042:	83 c0 08             	add    $0x8,%eax
81004045:	83 ec 08             	sub    $0x8,%esp
81004048:	50                   	push   %eax
81004049:	ff 75 08             	pushl  0x8(%ebp)
8100404c:	e8 27 dd ff ff       	call   81001d78 <_free_r>
81004051:	83 c4 10             	add    $0x10,%esp
81004054:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81004059:	89 c2                	mov    %eax,%edx
8100405b:	a1 84 99 00 81       	mov    0x81009984,%eax
81004060:	39 c2                	cmp    %eax,%edx
81004062:	76 0a                	jbe    8100406e <malloc_extend_top+0x274>
81004064:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81004069:	a3 84 99 00 81       	mov    %eax,0x81009984
8100406e:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81004073:	89 c2                	mov    %eax,%edx
81004075:	a1 88 99 00 81       	mov    0x81009988,%eax
8100407a:	39 c2                	cmp    %eax,%edx
8100407c:	76 0d                	jbe    8100408b <malloc_extend_top+0x291>
8100407e:	a1 a0 99 00 81       	mov    0x810099a0,%eax
81004083:	a3 88 99 00 81       	mov    %eax,0x81009988
81004088:	eb 01                	jmp    8100408b <malloc_extend_top+0x291>
8100408a:	90                   	nop
8100408b:	c9                   	leave  
8100408c:	c3                   	ret    

8100408d <_malloc_r>:
8100408d:	55                   	push   %ebp
8100408e:	89 e5                	mov    %esp,%ebp
81004090:	53                   	push   %ebx
81004091:	83 ec 44             	sub    $0x44,%esp
81004094:	8b 45 0c             	mov    0xc(%ebp),%eax
81004097:	83 c0 0b             	add    $0xb,%eax
8100409a:	83 f8 16             	cmp    $0x16,%eax
8100409d:	76 0b                	jbe    810040aa <_malloc_r+0x1d>
8100409f:	8b 45 0c             	mov    0xc(%ebp),%eax
810040a2:	83 c0 0b             	add    $0xb,%eax
810040a5:	83 e0 f8             	and    $0xfffffff8,%eax
810040a8:	eb 05                	jmp    810040af <_malloc_r+0x22>
810040aa:	b8 10 00 00 00       	mov    $0x10,%eax
810040af:	89 45 d0             	mov    %eax,-0x30(%ebp)
810040b2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040b5:	85 c0                	test   %eax,%eax
810040b7:	78 08                	js     810040c1 <_malloc_r+0x34>
810040b9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040bc:	3b 45 0c             	cmp    0xc(%ebp),%eax
810040bf:	73 13                	jae    810040d4 <_malloc_r+0x47>
810040c1:	8b 45 08             	mov    0x8(%ebp),%eax
810040c4:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810040ca:	b8 00 00 00 00       	mov    $0x0,%eax
810040cf:	e9 d6 07 00 00       	jmp    810048aa <_malloc_r+0x81d>
810040d4:	83 ec 0c             	sub    $0xc,%esp
810040d7:	ff 75 08             	pushl  0x8(%ebp)
810040da:	e8 16 0a 00 00       	call   81004af5 <__malloc_lock>
810040df:	83 c4 10             	add    $0x10,%esp
810040e2:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810040e9:	0f 87 b0 00 00 00    	ja     8100419f <_malloc_r+0x112>
810040ef:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040f2:	c1 e8 03             	shr    $0x3,%eax
810040f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810040f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040fb:	83 c0 01             	add    $0x1,%eax
810040fe:	01 c0                	add    %eax,%eax
81004100:	c1 e0 02             	shl    $0x2,%eax
81004103:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
81004108:	83 e8 08             	sub    $0x8,%eax
8100410b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100410e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004111:	8b 40 0c             	mov    0xc(%eax),%eax
81004114:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004117:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100411a:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100411d:	75 0d                	jne    8100412c <_malloc_r+0x9f>
8100411f:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81004123:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004126:	8b 40 0c             	mov    0xc(%eax),%eax
81004129:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100412c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100412f:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004132:	74 62                	je     81004196 <_malloc_r+0x109>
81004134:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004137:	8b 40 04             	mov    0x4(%eax),%eax
8100413a:	83 e0 fc             	and    $0xfffffffc,%eax
8100413d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004140:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004143:	8b 40 0c             	mov    0xc(%eax),%eax
81004146:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004149:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100414c:	8b 40 08             	mov    0x8(%eax),%eax
8100414f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004152:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004155:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004158:	89 50 0c             	mov    %edx,0xc(%eax)
8100415b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100415e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004161:	89 50 08             	mov    %edx,0x8(%eax)
81004164:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004167:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100416a:	01 d0                	add    %edx,%eax
8100416c:	8b 50 04             	mov    0x4(%eax),%edx
8100416f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004172:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004175:	01 c8                	add    %ecx,%eax
81004177:	83 ca 01             	or     $0x1,%edx
8100417a:	89 50 04             	mov    %edx,0x4(%eax)
8100417d:	83 ec 0c             	sub    $0xc,%esp
81004180:	ff 75 08             	pushl  0x8(%ebp)
81004183:	e8 73 09 00 00       	call   81004afb <__malloc_unlock>
81004188:	83 c4 10             	add    $0x10,%esp
8100418b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418e:	83 c0 08             	add    $0x8,%eax
81004191:	e9 14 07 00 00       	jmp    810048aa <_malloc_r+0x81d>
81004196:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
8100419a:	e9 46 01 00 00       	jmp    810042e5 <_malloc_r+0x258>
8100419f:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041a2:	c1 e8 09             	shr    $0x9,%eax
810041a5:	85 c0                	test   %eax,%eax
810041a7:	75 08                	jne    810041b1 <_malloc_r+0x124>
810041a9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041ac:	c1 e8 03             	shr    $0x3,%eax
810041af:	eb 77                	jmp    81004228 <_malloc_r+0x19b>
810041b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041b4:	c1 e8 09             	shr    $0x9,%eax
810041b7:	83 f8 04             	cmp    $0x4,%eax
810041ba:	77 0b                	ja     810041c7 <_malloc_r+0x13a>
810041bc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041bf:	c1 e8 06             	shr    $0x6,%eax
810041c2:	83 c0 38             	add    $0x38,%eax
810041c5:	eb 61                	jmp    81004228 <_malloc_r+0x19b>
810041c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041ca:	c1 e8 09             	shr    $0x9,%eax
810041cd:	83 f8 14             	cmp    $0x14,%eax
810041d0:	77 0b                	ja     810041dd <_malloc_r+0x150>
810041d2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041d5:	c1 e8 09             	shr    $0x9,%eax
810041d8:	83 c0 5b             	add    $0x5b,%eax
810041db:	eb 4b                	jmp    81004228 <_malloc_r+0x19b>
810041dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041e0:	c1 e8 09             	shr    $0x9,%eax
810041e3:	83 f8 54             	cmp    $0x54,%eax
810041e6:	77 0b                	ja     810041f3 <_malloc_r+0x166>
810041e8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041eb:	c1 e8 0c             	shr    $0xc,%eax
810041ee:	83 c0 6e             	add    $0x6e,%eax
810041f1:	eb 35                	jmp    81004228 <_malloc_r+0x19b>
810041f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041f6:	c1 e8 09             	shr    $0x9,%eax
810041f9:	3d 54 01 00 00       	cmp    $0x154,%eax
810041fe:	77 0b                	ja     8100420b <_malloc_r+0x17e>
81004200:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004203:	c1 e8 0f             	shr    $0xf,%eax
81004206:	83 c0 77             	add    $0x77,%eax
81004209:	eb 1d                	jmp    81004228 <_malloc_r+0x19b>
8100420b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100420e:	c1 e8 09             	shr    $0x9,%eax
81004211:	3d 54 05 00 00       	cmp    $0x554,%eax
81004216:	77 0b                	ja     81004223 <_malloc_r+0x196>
81004218:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100421b:	c1 e8 12             	shr    $0x12,%eax
8100421e:	83 c0 7c             	add    $0x7c,%eax
81004221:	eb 05                	jmp    81004228 <_malloc_r+0x19b>
81004223:	b8 7e 00 00 00       	mov    $0x7e,%eax
81004228:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100422b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100422e:	83 c0 01             	add    $0x1,%eax
81004231:	01 c0                	add    %eax,%eax
81004233:	c1 e0 02             	shl    $0x2,%eax
81004236:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
8100423b:	83 e8 08             	sub    $0x8,%eax
8100423e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004241:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004244:	8b 40 0c             	mov    0xc(%eax),%eax
81004247:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100424a:	e9 86 00 00 00       	jmp    810042d5 <_malloc_r+0x248>
8100424f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004252:	8b 40 04             	mov    0x4(%eax),%eax
81004255:	83 e0 fc             	and    $0xfffffffc,%eax
81004258:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100425b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100425e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004261:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004264:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004268:	7e 06                	jle    81004270 <_malloc_r+0x1e3>
8100426a:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100426e:	eb 71                	jmp    810042e1 <_malloc_r+0x254>
81004270:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004274:	78 56                	js     810042cc <_malloc_r+0x23f>
81004276:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004279:	8b 40 0c             	mov    0xc(%eax),%eax
8100427c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100427f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004282:	8b 40 08             	mov    0x8(%eax),%eax
81004285:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004288:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100428b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100428e:	89 50 0c             	mov    %edx,0xc(%eax)
81004291:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004294:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004297:	89 50 08             	mov    %edx,0x8(%eax)
8100429a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100429d:	8b 45 cc             	mov    -0x34(%ebp),%eax
810042a0:	01 d0                	add    %edx,%eax
810042a2:	8b 50 04             	mov    0x4(%eax),%edx
810042a5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810042a8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810042ab:	01 c8                	add    %ecx,%eax
810042ad:	83 ca 01             	or     $0x1,%edx
810042b0:	89 50 04             	mov    %edx,0x4(%eax)
810042b3:	83 ec 0c             	sub    $0xc,%esp
810042b6:	ff 75 08             	pushl  0x8(%ebp)
810042b9:	e8 3d 08 00 00       	call   81004afb <__malloc_unlock>
810042be:	83 c4 10             	add    $0x10,%esp
810042c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042c4:	83 c0 08             	add    $0x8,%eax
810042c7:	e9 de 05 00 00       	jmp    810048aa <_malloc_r+0x81d>
810042cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042cf:	8b 40 0c             	mov    0xc(%eax),%eax
810042d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042d8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810042db:	0f 85 6e ff ff ff    	jne    8100424f <_malloc_r+0x1c2>
810042e1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810042e5:	b8 a8 8e 00 81       	mov    $0x81008ea8,%eax
810042ea:	8b 40 08             	mov    0x8(%eax),%eax
810042ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042f0:	b8 a8 8e 00 81       	mov    $0x81008ea8,%eax
810042f5:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810042f8:	0f 84 9c 02 00 00    	je     8100459a <_malloc_r+0x50d>
810042fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004301:	8b 40 04             	mov    0x4(%eax),%eax
81004304:	83 e0 fc             	and    $0xfffffffc,%eax
81004307:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100430a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100430d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004310:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004313:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004317:	7e 7a                	jle    81004393 <_malloc_r+0x306>
81004319:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100431c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100431f:	01 d0                	add    %edx,%eax
81004321:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004324:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004327:	83 c8 01             	or     $0x1,%eax
8100432a:	89 c2                	mov    %eax,%edx
8100432c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100432f:	89 50 04             	mov    %edx,0x4(%eax)
81004332:	b8 a8 8e 00 81       	mov    $0x81008ea8,%eax
81004337:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100433a:	89 50 0c             	mov    %edx,0xc(%eax)
8100433d:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
81004342:	8b 40 0c             	mov    0xc(%eax),%eax
81004345:	89 42 08             	mov    %eax,0x8(%edx)
81004348:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
8100434d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004350:	89 50 0c             	mov    %edx,0xc(%eax)
81004353:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004356:	8b 50 0c             	mov    0xc(%eax),%edx
81004359:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100435c:	89 50 08             	mov    %edx,0x8(%eax)
8100435f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004362:	83 c8 01             	or     $0x1,%eax
81004365:	89 c2                	mov    %eax,%edx
81004367:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100436a:	89 50 04             	mov    %edx,0x4(%eax)
8100436d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004370:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004373:	01 c2                	add    %eax,%edx
81004375:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004378:	89 02                	mov    %eax,(%edx)
8100437a:	83 ec 0c             	sub    $0xc,%esp
8100437d:	ff 75 08             	pushl  0x8(%ebp)
81004380:	e8 76 07 00 00       	call   81004afb <__malloc_unlock>
81004385:	83 c4 10             	add    $0x10,%esp
81004388:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100438b:	83 c0 08             	add    $0x8,%eax
8100438e:	e9 17 05 00 00       	jmp    810048aa <_malloc_r+0x81d>
81004393:	b8 a8 8e 00 81       	mov    $0x81008ea8,%eax
81004398:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
8100439d:	89 50 0c             	mov    %edx,0xc(%eax)
810043a0:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
810043a5:	8b 40 0c             	mov    0xc(%eax),%eax
810043a8:	89 42 08             	mov    %eax,0x8(%edx)
810043ab:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810043af:	78 32                	js     810043e3 <_malloc_r+0x356>
810043b1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810043b4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043b7:	01 d0                	add    %edx,%eax
810043b9:	8b 50 04             	mov    0x4(%eax),%edx
810043bc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810043bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043c2:	01 c8                	add    %ecx,%eax
810043c4:	83 ca 01             	or     $0x1,%edx
810043c7:	89 50 04             	mov    %edx,0x4(%eax)
810043ca:	83 ec 0c             	sub    $0xc,%esp
810043cd:	ff 75 08             	pushl  0x8(%ebp)
810043d0:	e8 26 07 00 00       	call   81004afb <__malloc_unlock>
810043d5:	83 c4 10             	add    $0x10,%esp
810043d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043db:	83 c0 08             	add    $0x8,%eax
810043de:	e9 c7 04 00 00       	jmp    810048aa <_malloc_r+0x81d>
810043e3:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810043ea:	77 7f                	ja     8100446b <_malloc_r+0x3de>
810043ec:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043ef:	c1 e8 03             	shr    $0x3,%eax
810043f2:	89 45 c8             	mov    %eax,-0x38(%ebp)
810043f5:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810043fa:	8b 58 04             	mov    0x4(%eax),%ebx
810043fd:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004400:	8d 50 03             	lea    0x3(%eax),%edx
81004403:	85 c0                	test   %eax,%eax
81004405:	0f 48 c2             	cmovs  %edx,%eax
81004408:	c1 f8 02             	sar    $0x2,%eax
8100440b:	ba 01 00 00 00       	mov    $0x1,%edx
81004410:	89 c1                	mov    %eax,%ecx
81004412:	d3 e2                	shl    %cl,%edx
81004414:	89 d0                	mov    %edx,%eax
81004416:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
8100441b:	09 d8                	or     %ebx,%eax
8100441d:	89 42 04             	mov    %eax,0x4(%edx)
81004420:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004423:	83 c0 01             	add    $0x1,%eax
81004426:	01 c0                	add    %eax,%eax
81004428:	c1 e0 02             	shl    $0x2,%eax
8100442b:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
81004430:	83 e8 08             	sub    $0x8,%eax
81004433:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004436:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004439:	8b 40 08             	mov    0x8(%eax),%eax
8100443c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100443f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004442:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004445:	89 50 0c             	mov    %edx,0xc(%eax)
81004448:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100444b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100444e:	89 50 08             	mov    %edx,0x8(%eax)
81004451:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004454:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004457:	89 50 08             	mov    %edx,0x8(%eax)
8100445a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100445d:	8b 50 08             	mov    0x8(%eax),%edx
81004460:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004463:	89 50 0c             	mov    %edx,0xc(%eax)
81004466:	e9 2f 01 00 00       	jmp    8100459a <_malloc_r+0x50d>
8100446b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100446e:	c1 e8 09             	shr    $0x9,%eax
81004471:	85 c0                	test   %eax,%eax
81004473:	75 08                	jne    8100447d <_malloc_r+0x3f0>
81004475:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004478:	c1 e8 03             	shr    $0x3,%eax
8100447b:	eb 77                	jmp    810044f4 <_malloc_r+0x467>
8100447d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004480:	c1 e8 09             	shr    $0x9,%eax
81004483:	83 f8 04             	cmp    $0x4,%eax
81004486:	77 0b                	ja     81004493 <_malloc_r+0x406>
81004488:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100448b:	c1 e8 06             	shr    $0x6,%eax
8100448e:	83 c0 38             	add    $0x38,%eax
81004491:	eb 61                	jmp    810044f4 <_malloc_r+0x467>
81004493:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004496:	c1 e8 09             	shr    $0x9,%eax
81004499:	83 f8 14             	cmp    $0x14,%eax
8100449c:	77 0b                	ja     810044a9 <_malloc_r+0x41c>
8100449e:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044a1:	c1 e8 09             	shr    $0x9,%eax
810044a4:	83 c0 5b             	add    $0x5b,%eax
810044a7:	eb 4b                	jmp    810044f4 <_malloc_r+0x467>
810044a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044ac:	c1 e8 09             	shr    $0x9,%eax
810044af:	83 f8 54             	cmp    $0x54,%eax
810044b2:	77 0b                	ja     810044bf <_malloc_r+0x432>
810044b4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044b7:	c1 e8 0c             	shr    $0xc,%eax
810044ba:	83 c0 6e             	add    $0x6e,%eax
810044bd:	eb 35                	jmp    810044f4 <_malloc_r+0x467>
810044bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044c2:	c1 e8 09             	shr    $0x9,%eax
810044c5:	3d 54 01 00 00       	cmp    $0x154,%eax
810044ca:	77 0b                	ja     810044d7 <_malloc_r+0x44a>
810044cc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044cf:	c1 e8 0f             	shr    $0xf,%eax
810044d2:	83 c0 77             	add    $0x77,%eax
810044d5:	eb 1d                	jmp    810044f4 <_malloc_r+0x467>
810044d7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044da:	c1 e8 09             	shr    $0x9,%eax
810044dd:	3d 54 05 00 00       	cmp    $0x554,%eax
810044e2:	77 0b                	ja     810044ef <_malloc_r+0x462>
810044e4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044e7:	c1 e8 12             	shr    $0x12,%eax
810044ea:	83 c0 7c             	add    $0x7c,%eax
810044ed:	eb 05                	jmp    810044f4 <_malloc_r+0x467>
810044ef:	b8 7e 00 00 00       	mov    $0x7e,%eax
810044f4:	89 45 c8             	mov    %eax,-0x38(%ebp)
810044f7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044fa:	83 c0 01             	add    $0x1,%eax
810044fd:	01 c0                	add    %eax,%eax
810044ff:	c1 e0 02             	shl    $0x2,%eax
81004502:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
81004507:	83 e8 08             	sub    $0x8,%eax
8100450a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100450d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004510:	8b 40 08             	mov    0x8(%eax),%eax
81004513:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004516:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004519:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100451c:	75 36                	jne    81004554 <_malloc_r+0x4c7>
8100451e:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81004523:	8b 58 04             	mov    0x4(%eax),%ebx
81004526:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004529:	8d 50 03             	lea    0x3(%eax),%edx
8100452c:	85 c0                	test   %eax,%eax
8100452e:	0f 48 c2             	cmovs  %edx,%eax
81004531:	c1 f8 02             	sar    $0x2,%eax
81004534:	ba 01 00 00 00       	mov    $0x1,%edx
81004539:	89 c1                	mov    %eax,%ecx
8100453b:	d3 e2                	shl    %cl,%edx
8100453d:	89 d0                	mov    %edx,%eax
8100453f:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
81004544:	09 d8                	or     %ebx,%eax
81004546:	89 42 04             	mov    %eax,0x4(%edx)
81004549:	eb 28                	jmp    81004573 <_malloc_r+0x4e6>
8100454b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100454e:	8b 40 08             	mov    0x8(%eax),%eax
81004551:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004554:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004557:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100455a:	74 0e                	je     8100456a <_malloc_r+0x4dd>
8100455c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100455f:	8b 40 04             	mov    0x4(%eax),%eax
81004562:	83 e0 fc             	and    $0xfffffffc,%eax
81004565:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81004568:	72 e1                	jb     8100454b <_malloc_r+0x4be>
8100456a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100456d:	8b 40 0c             	mov    0xc(%eax),%eax
81004570:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004573:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004576:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004579:	89 50 0c             	mov    %edx,0xc(%eax)
8100457c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100457f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004582:	89 50 08             	mov    %edx,0x8(%eax)
81004585:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004588:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100458b:	89 50 08             	mov    %edx,0x8(%eax)
8100458e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004591:	8b 50 08             	mov    0x8(%eax),%edx
81004594:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004597:	89 50 0c             	mov    %edx,0xc(%eax)
8100459a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100459d:	8d 50 03             	lea    0x3(%eax),%edx
810045a0:	85 c0                	test   %eax,%eax
810045a2:	0f 48 c2             	cmovs  %edx,%eax
810045a5:	c1 f8 02             	sar    $0x2,%eax
810045a8:	ba 01 00 00 00       	mov    $0x1,%edx
810045ad:	89 c1                	mov    %eax,%ecx
810045af:	d3 e2                	shl    %cl,%edx
810045b1:	89 d0                	mov    %edx,%eax
810045b3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810045b6:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810045bb:	8b 40 04             	mov    0x4(%eax),%eax
810045be:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810045c1:	0f 87 13 02 00 00    	ja     810047da <_malloc_r+0x74d>
810045c7:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810045cc:	8b 40 04             	mov    0x4(%eax),%eax
810045cf:	23 45 e4             	and    -0x1c(%ebp),%eax
810045d2:	85 c0                	test   %eax,%eax
810045d4:	75 27                	jne    810045fd <_malloc_r+0x570>
810045d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045d9:	83 e0 fc             	and    $0xfffffffc,%eax
810045dc:	83 c0 04             	add    $0x4,%eax
810045df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810045e2:	d1 65 e4             	shll   -0x1c(%ebp)
810045e5:	eb 07                	jmp    810045ee <_malloc_r+0x561>
810045e7:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810045eb:	d1 65 e4             	shll   -0x1c(%ebp)
810045ee:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810045f3:	8b 40 04             	mov    0x4(%eax),%eax
810045f6:	23 45 e4             	and    -0x1c(%ebp),%eax
810045f9:	85 c0                	test   %eax,%eax
810045fb:	74 ea                	je     810045e7 <_malloc_r+0x55a>
810045fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004600:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004603:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004606:	83 c0 01             	add    $0x1,%eax
81004609:	01 c0                	add    %eax,%eax
8100460b:	c1 e0 02             	shl    $0x2,%eax
8100460e:	05 a0 8e 00 81       	add    $0x81008ea0,%eax
81004613:	83 e8 08             	sub    $0x8,%eax
81004616:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004619:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100461c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100461f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004622:	8b 40 0c             	mov    0xc(%eax),%eax
81004625:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004628:	e9 22 01 00 00       	jmp    8100474f <_malloc_r+0x6c2>
8100462d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004630:	8b 40 04             	mov    0x4(%eax),%eax
81004633:	83 e0 fc             	and    $0xfffffffc,%eax
81004636:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004639:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100463c:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100463f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004642:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004646:	0f 8e 9e 00 00 00    	jle    810046ea <_malloc_r+0x65d>
8100464c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100464f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004652:	01 d0                	add    %edx,%eax
81004654:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004657:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100465a:	83 c8 01             	or     $0x1,%eax
8100465d:	89 c2                	mov    %eax,%edx
8100465f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004662:	89 50 04             	mov    %edx,0x4(%eax)
81004665:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004668:	8b 40 0c             	mov    0xc(%eax),%eax
8100466b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100466e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004671:	8b 40 08             	mov    0x8(%eax),%eax
81004674:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004677:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100467a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100467d:	89 50 0c             	mov    %edx,0xc(%eax)
81004680:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004683:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004686:	89 50 08             	mov    %edx,0x8(%eax)
81004689:	b8 a8 8e 00 81       	mov    $0x81008ea8,%eax
8100468e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81004691:	89 50 0c             	mov    %edx,0xc(%eax)
81004694:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
81004699:	8b 40 0c             	mov    0xc(%eax),%eax
8100469c:	89 42 08             	mov    %eax,0x8(%edx)
8100469f:	ba a8 8e 00 81       	mov    $0x81008ea8,%edx
810046a4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810046a7:	89 50 0c             	mov    %edx,0xc(%eax)
810046aa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810046ad:	8b 50 0c             	mov    0xc(%eax),%edx
810046b0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810046b3:	89 50 08             	mov    %edx,0x8(%eax)
810046b6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810046b9:	83 c8 01             	or     $0x1,%eax
810046bc:	89 c2                	mov    %eax,%edx
810046be:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810046c1:	89 50 04             	mov    %edx,0x4(%eax)
810046c4:	8b 55 e8             	mov    -0x18(%ebp),%edx
810046c7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810046ca:	01 c2                	add    %eax,%edx
810046cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810046cf:	89 02                	mov    %eax,(%edx)
810046d1:	83 ec 0c             	sub    $0xc,%esp
810046d4:	ff 75 08             	pushl  0x8(%ebp)
810046d7:	e8 1f 04 00 00       	call   81004afb <__malloc_unlock>
810046dc:	83 c4 10             	add    $0x10,%esp
810046df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046e2:	83 c0 08             	add    $0x8,%eax
810046e5:	e9 c0 01 00 00       	jmp    810048aa <_malloc_r+0x81d>
810046ea:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810046ee:	78 56                	js     81004746 <_malloc_r+0x6b9>
810046f0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810046f3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810046f6:	01 d0                	add    %edx,%eax
810046f8:	8b 50 04             	mov    0x4(%eax),%edx
810046fb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810046fe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004701:	01 c8                	add    %ecx,%eax
81004703:	83 ca 01             	or     $0x1,%edx
81004706:	89 50 04             	mov    %edx,0x4(%eax)
81004709:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100470c:	8b 40 0c             	mov    0xc(%eax),%eax
8100470f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004712:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004715:	8b 40 08             	mov    0x8(%eax),%eax
81004718:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100471b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100471e:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004721:	89 50 0c             	mov    %edx,0xc(%eax)
81004724:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004727:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100472a:	89 50 08             	mov    %edx,0x8(%eax)
8100472d:	83 ec 0c             	sub    $0xc,%esp
81004730:	ff 75 08             	pushl  0x8(%ebp)
81004733:	e8 c3 03 00 00       	call   81004afb <__malloc_unlock>
81004738:	83 c4 10             	add    $0x10,%esp
8100473b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100473e:	83 c0 08             	add    $0x8,%eax
81004741:	e9 64 01 00 00       	jmp    810048aa <_malloc_r+0x81d>
81004746:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004749:	8b 40 0c             	mov    0xc(%eax),%eax
8100474c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100474f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004752:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81004755:	0f 85 d2 fe ff ff    	jne    8100462d <_malloc_r+0x5a0>
8100475b:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
8100475f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004763:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004766:	83 e0 03             	and    $0x3,%eax
81004769:	85 c0                	test   %eax,%eax
8100476b:	0f 85 ae fe ff ff    	jne    8100461f <_malloc_r+0x592>
81004771:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004774:	83 e0 03             	and    $0x3,%eax
81004777:	85 c0                	test   %eax,%eax
81004779:	75 19                	jne    81004794 <_malloc_r+0x707>
8100477b:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81004780:	8b 48 04             	mov    0x4(%eax),%ecx
81004783:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004786:	f7 d0                	not    %eax
81004788:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
8100478d:	21 c8                	and    %ecx,%eax
8100478f:	89 42 04             	mov    %eax,0x4(%edx)
81004792:	eb 13                	jmp    810047a7 <_malloc_r+0x71a>
81004794:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81004798:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100479c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100479f:	8b 40 08             	mov    0x8(%eax),%eax
810047a2:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810047a5:	74 ca                	je     81004771 <_malloc_r+0x6e4>
810047a7:	d1 65 e4             	shll   -0x1c(%ebp)
810047aa:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810047af:	8b 40 04             	mov    0x4(%eax),%eax
810047b2:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810047b5:	77 23                	ja     810047da <_malloc_r+0x74d>
810047b7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810047bb:	74 1d                	je     810047da <_malloc_r+0x74d>
810047bd:	eb 07                	jmp    810047c6 <_malloc_r+0x739>
810047bf:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810047c3:	d1 65 e4             	shll   -0x1c(%ebp)
810047c6:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810047cb:	8b 40 04             	mov    0x4(%eax),%eax
810047ce:	23 45 e4             	and    -0x1c(%ebp),%eax
810047d1:	85 c0                	test   %eax,%eax
810047d3:	74 ea                	je     810047bf <_malloc_r+0x732>
810047d5:	e9 23 fe ff ff       	jmp    810045fd <_malloc_r+0x570>
810047da:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810047df:	8b 40 08             	mov    0x8(%eax),%eax
810047e2:	8b 40 04             	mov    0x4(%eax),%eax
810047e5:	83 e0 fc             	and    $0xfffffffc,%eax
810047e8:	2b 45 d0             	sub    -0x30(%ebp),%eax
810047eb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810047ee:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810047f3:	8b 40 08             	mov    0x8(%eax),%eax
810047f6:	8b 40 04             	mov    0x4(%eax),%eax
810047f9:	83 e0 fc             	and    $0xfffffffc,%eax
810047fc:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810047ff:	77 06                	ja     81004807 <_malloc_r+0x77a>
81004801:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004805:	7f 53                	jg     8100485a <_malloc_r+0x7cd>
81004807:	83 ec 08             	sub    $0x8,%esp
8100480a:	ff 75 d0             	pushl  -0x30(%ebp)
8100480d:	ff 75 08             	pushl  0x8(%ebp)
81004810:	e8 e5 f5 ff ff       	call   81003dfa <malloc_extend_top>
81004815:	83 c4 10             	add    $0x10,%esp
81004818:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
8100481d:	8b 40 08             	mov    0x8(%eax),%eax
81004820:	8b 40 04             	mov    0x4(%eax),%eax
81004823:	83 e0 fc             	and    $0xfffffffc,%eax
81004826:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004829:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100482c:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81004831:	8b 40 08             	mov    0x8(%eax),%eax
81004834:	8b 40 04             	mov    0x4(%eax),%eax
81004837:	83 e0 fc             	and    $0xfffffffc,%eax
8100483a:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100483d:	77 06                	ja     81004845 <_malloc_r+0x7b8>
8100483f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004843:	7f 15                	jg     8100485a <_malloc_r+0x7cd>
81004845:	83 ec 0c             	sub    $0xc,%esp
81004848:	ff 75 08             	pushl  0x8(%ebp)
8100484b:	e8 ab 02 00 00       	call   81004afb <__malloc_unlock>
81004850:	83 c4 10             	add    $0x10,%esp
81004853:	b8 00 00 00 00       	mov    $0x0,%eax
81004858:	eb 50                	jmp    810048aa <_malloc_r+0x81d>
8100485a:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
8100485f:	8b 40 08             	mov    0x8(%eax),%eax
81004862:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004865:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004868:	83 c8 01             	or     $0x1,%eax
8100486b:	89 c2                	mov    %eax,%edx
8100486d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004870:	89 50 04             	mov    %edx,0x4(%eax)
81004873:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
81004878:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100487b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100487e:	01 c8                	add    %ecx,%eax
81004880:	89 42 08             	mov    %eax,0x8(%edx)
81004883:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004886:	83 c8 01             	or     $0x1,%eax
81004889:	89 c2                	mov    %eax,%edx
8100488b:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81004890:	8b 40 08             	mov    0x8(%eax),%eax
81004893:	89 50 04             	mov    %edx,0x4(%eax)
81004896:	83 ec 0c             	sub    $0xc,%esp
81004899:	ff 75 08             	pushl  0x8(%ebp)
8100489c:	e8 5a 02 00 00       	call   81004afb <__malloc_unlock>
810048a1:	83 c4 10             	add    $0x10,%esp
810048a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810048a7:	83 c0 08             	add    $0x8,%eax
810048aa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810048ad:	c9                   	leave  
810048ae:	c3                   	ret    
810048af:	90                   	nop

810048b0 <memchr>:
810048b0:	55                   	push   %ebp
810048b1:	89 e5                	mov    %esp,%ebp
810048b3:	57                   	push   %edi
810048b4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810048b8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810048bb:	8b 7d 08             	mov    0x8(%ebp),%edi
810048be:	31 d2                	xor    %edx,%edx
810048c0:	85 c9                	test   %ecx,%ecx
810048c2:	74 79                	je     8100493d <L20>
810048c4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810048ca:	74 28                	je     810048f4 <L5>
810048cc:	3a 07                	cmp    (%edi),%al
810048ce:	74 6a                	je     8100493a <L15>
810048d0:	47                   	inc    %edi
810048d1:	49                   	dec    %ecx
810048d2:	74 69                	je     8100493d <L20>
810048d4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810048da:	74 18                	je     810048f4 <L5>
810048dc:	3a 07                	cmp    (%edi),%al
810048de:	74 5a                	je     8100493a <L15>
810048e0:	47                   	inc    %edi
810048e1:	49                   	dec    %ecx
810048e2:	74 59                	je     8100493d <L20>
810048e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810048ea:	74 08                	je     810048f4 <L5>
810048ec:	3a 07                	cmp    (%edi),%al
810048ee:	74 4a                	je     8100493a <L15>
810048f0:	47                   	inc    %edi
810048f1:	49                   	dec    %ecx
810048f2:	74 49                	je     8100493d <L20>

810048f4 <L5>:
810048f4:	88 c4                	mov    %al,%ah
810048f6:	89 c2                	mov    %eax,%edx
810048f8:	c1 e2 10             	shl    $0x10,%edx
810048fb:	09 d0                	or     %edx,%eax
810048fd:	53                   	push   %ebx
810048fe:	66 90                	xchg   %ax,%ax

81004900 <L8>:
81004900:	83 e9 04             	sub    $0x4,%ecx
81004903:	72 1c                	jb     81004921 <L9>
81004905:	8b 17                	mov    (%edi),%edx
81004907:	83 c7 04             	add    $0x4,%edi
8100490a:	31 c2                	xor    %eax,%edx
8100490c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004912:	f7 d2                	not    %edx
81004914:	21 d3                	and    %edx,%ebx
81004916:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100491c:	74 e2                	je     81004900 <L8>
8100491e:	83 ef 04             	sub    $0x4,%edi

81004921 <L9>:
81004921:	5b                   	pop    %ebx
81004922:	31 d2                	xor    %edx,%edx
81004924:	83 c1 04             	add    $0x4,%ecx
81004927:	74 14                	je     8100493d <L20>
81004929:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004930 <L10>:
81004930:	3a 07                	cmp    (%edi),%al
81004932:	74 06                	je     8100493a <L15>
81004934:	47                   	inc    %edi
81004935:	49                   	dec    %ecx
81004936:	75 f8                	jne    81004930 <L10>
81004938:	31 ff                	xor    %edi,%edi

8100493a <L15>:
8100493a:	4a                   	dec    %edx
8100493b:	21 fa                	and    %edi,%edx

8100493d <L20>:
8100493d:	89 d0                	mov    %edx,%eax
8100493f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004942:	5f                   	pop    %edi
81004943:	c9                   	leave  
81004944:	c3                   	ret    

81004945 <memcmp>:
81004945:	55                   	push   %ebp
81004946:	89 e5                	mov    %esp,%ebp
81004948:	83 ec 10             	sub    $0x10,%esp
8100494b:	53                   	push   %ebx
8100494c:	57                   	push   %edi
8100494d:	56                   	push   %esi
8100494e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004951:	8b 75 0c             	mov    0xc(%ebp),%esi
81004954:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004957:	fc                   	cld    
81004958:	31 c0                	xor    %eax,%eax
8100495a:	85 c9                	test   %ecx,%ecx
8100495c:	74 31                	je     8100498f <L4>
8100495e:	89 f8                	mov    %edi,%eax
81004960:	09 f0                	or     %esi,%eax
81004962:	a8 03                	test   $0x3,%al
81004964:	75 1b                	jne    81004981 <BYTECMP>
81004966:	89 cb                	mov    %ecx,%ebx
81004968:	c1 e9 02             	shr    $0x2,%ecx
8100496b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100496d:	74 0d                	je     8100497c <L5>
8100496f:	83 ee 04             	sub    $0x4,%esi
81004972:	83 ef 04             	sub    $0x4,%edi
81004975:	b9 04 00 00 00       	mov    $0x4,%ecx
8100497a:	eb 05                	jmp    81004981 <BYTECMP>

8100497c <L5>:
8100497c:	83 e3 03             	and    $0x3,%ebx
8100497f:	89 d9                	mov    %ebx,%ecx

81004981 <BYTECMP>:
81004981:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004983 <L3>:
81004983:	31 d2                	xor    %edx,%edx
81004985:	8a 56 ff             	mov    -0x1(%esi),%dl
81004988:	31 c0                	xor    %eax,%eax
8100498a:	8a 47 ff             	mov    -0x1(%edi),%al
8100498d:	29 d0                	sub    %edx,%eax

8100498f <L4>:
8100498f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004992:	5e                   	pop    %esi
81004993:	5f                   	pop    %edi
81004994:	5b                   	pop    %ebx
81004995:	c9                   	leave  
81004996:	c3                   	ret    
81004997:	90                   	nop

81004998 <memcpy>:
81004998:	55                   	push   %ebp
81004999:	89 e5                	mov    %esp,%ebp
8100499b:	56                   	push   %esi
8100499c:	57                   	push   %edi
8100499d:	53                   	push   %ebx
8100499e:	8b 7d 08             	mov    0x8(%ebp),%edi
810049a1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810049a4:	8b 75 0c             	mov    0xc(%ebp),%esi
810049a7:	fc                   	cld    
810049a8:	83 f9 08             	cmp    $0x8,%ecx
810049ab:	76 26                	jbe    810049d3 <memcpy+0x3b>
810049ad:	89 fa                	mov    %edi,%edx
810049af:	89 cb                	mov    %ecx,%ebx
810049b1:	83 e2 03             	and    $0x3,%edx
810049b4:	74 10                	je     810049c6 <memcpy+0x2e>
810049b6:	b9 04 00 00 00       	mov    $0x4,%ecx
810049bb:	29 d1                	sub    %edx,%ecx
810049bd:	83 e1 03             	and    $0x3,%ecx
810049c0:	29 cb                	sub    %ecx,%ebx
810049c2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810049c4:	89 d9                	mov    %ebx,%ecx
810049c6:	c1 e9 02             	shr    $0x2,%ecx
810049c9:	8d 76 00             	lea    0x0(%esi),%esi
810049cc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810049ce:	89 d9                	mov    %ebx,%ecx
810049d0:	83 e1 03             	and    $0x3,%ecx
810049d3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810049d5:	8b 45 08             	mov    0x8(%ebp),%eax
810049d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810049db:	5b                   	pop    %ebx
810049dc:	5f                   	pop    %edi
810049dd:	5e                   	pop    %esi
810049de:	c9                   	leave  
810049df:	c3                   	ret    

810049e0 <memmove>:
810049e0:	55                   	push   %ebp
810049e1:	89 e5                	mov    %esp,%ebp
810049e3:	56                   	push   %esi
810049e4:	57                   	push   %edi
810049e5:	53                   	push   %ebx
810049e6:	8b 7d 08             	mov    0x8(%ebp),%edi
810049e9:	8b 4d 10             	mov    0x10(%ebp),%ecx
810049ec:	8b 75 0c             	mov    0xc(%ebp),%esi
810049ef:	fc                   	cld    
810049f0:	39 fe                	cmp    %edi,%esi
810049f2:	73 43                	jae    81004a37 <memmove+0x57>
810049f4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
810049f8:	39 df                	cmp    %ebx,%edi
810049fa:	77 3b                	ja     81004a37 <memmove+0x57>
810049fc:	01 ce                	add    %ecx,%esi
810049fe:	01 cf                	add    %ecx,%edi
81004a00:	fd                   	std    
81004a01:	83 f9 08             	cmp    $0x8,%ecx
81004a04:	76 2b                	jbe    81004a31 <memmove+0x51>
81004a06:	89 fa                	mov    %edi,%edx
81004a08:	89 cb                	mov    %ecx,%ebx
81004a0a:	83 e2 03             	and    $0x3,%edx
81004a0d:	74 0c                	je     81004a1b <memmove+0x3b>
81004a0f:	89 d1                	mov    %edx,%ecx
81004a11:	4e                   	dec    %esi
81004a12:	4f                   	dec    %edi
81004a13:	29 cb                	sub    %ecx,%ebx
81004a15:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004a17:	89 d9                	mov    %ebx,%ecx
81004a19:	46                   	inc    %esi
81004a1a:	47                   	inc    %edi
81004a1b:	c1 e9 02             	shr    $0x2,%ecx
81004a1e:	83 ee 04             	sub    $0x4,%esi
81004a21:	83 ef 04             	sub    $0x4,%edi
81004a24:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004a26:	83 c6 04             	add    $0x4,%esi
81004a29:	83 c7 04             	add    $0x4,%edi
81004a2c:	89 d9                	mov    %ebx,%ecx
81004a2e:	83 e1 03             	and    $0x3,%ecx
81004a31:	4e                   	dec    %esi
81004a32:	4f                   	dec    %edi
81004a33:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004a35:	eb 2a                	jmp    81004a61 <memmove+0x81>
81004a37:	83 f9 08             	cmp    $0x8,%ecx
81004a3a:	76 23                	jbe    81004a5f <memmove+0x7f>
81004a3c:	89 fa                	mov    %edi,%edx
81004a3e:	89 cb                	mov    %ecx,%ebx
81004a40:	83 e2 03             	and    $0x3,%edx
81004a43:	74 10                	je     81004a55 <memmove+0x75>
81004a45:	b9 04 00 00 00       	mov    $0x4,%ecx
81004a4a:	29 d1                	sub    %edx,%ecx
81004a4c:	83 e1 03             	and    $0x3,%ecx
81004a4f:	29 cb                	sub    %ecx,%ebx
81004a51:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004a53:	89 d9                	mov    %ebx,%ecx
81004a55:	c1 e9 02             	shr    $0x2,%ecx
81004a58:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004a5a:	89 d9                	mov    %ebx,%ecx
81004a5c:	83 e1 03             	and    $0x3,%ecx
81004a5f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004a61:	8b 45 08             	mov    0x8(%ebp),%eax
81004a64:	fc                   	cld    
81004a65:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004a68:	5b                   	pop    %ebx
81004a69:	5f                   	pop    %edi
81004a6a:	5e                   	pop    %esi
81004a6b:	c9                   	leave  
81004a6c:	c3                   	ret    

81004a6d <memset>:
81004a6d:	55                   	push   %ebp
81004a6e:	89 e5                	mov    %esp,%ebp
81004a70:	57                   	push   %edi
81004a71:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a74:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004a78:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a7b:	fc                   	cld    
81004a7c:	83 f9 10             	cmp    $0x10,%ecx
81004a7f:	76 69                	jbe    81004aea <memset+0x7d>
81004a81:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004a87:	74 4c                	je     81004ad5 <memset+0x68>
81004a89:	88 07                	mov    %al,(%edi)
81004a8b:	47                   	inc    %edi
81004a8c:	49                   	dec    %ecx
81004a8d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004a93:	74 40                	je     81004ad5 <memset+0x68>
81004a95:	88 07                	mov    %al,(%edi)
81004a97:	47                   	inc    %edi
81004a98:	49                   	dec    %ecx
81004a99:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004a9f:	74 34                	je     81004ad5 <memset+0x68>
81004aa1:	88 07                	mov    %al,(%edi)
81004aa3:	47                   	inc    %edi
81004aa4:	49                   	dec    %ecx
81004aa5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004aab:	74 28                	je     81004ad5 <memset+0x68>
81004aad:	88 07                	mov    %al,(%edi)
81004aaf:	47                   	inc    %edi
81004ab0:	49                   	dec    %ecx
81004ab1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004ab7:	74 1c                	je     81004ad5 <memset+0x68>
81004ab9:	88 07                	mov    %al,(%edi)
81004abb:	47                   	inc    %edi
81004abc:	49                   	dec    %ecx
81004abd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004ac3:	74 10                	je     81004ad5 <memset+0x68>
81004ac5:	88 07                	mov    %al,(%edi)
81004ac7:	47                   	inc    %edi
81004ac8:	49                   	dec    %ecx
81004ac9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004acf:	74 04                	je     81004ad5 <memset+0x68>
81004ad1:	88 07                	mov    %al,(%edi)
81004ad3:	47                   	inc    %edi
81004ad4:	49                   	dec    %ecx
81004ad5:	88 c4                	mov    %al,%ah
81004ad7:	89 c2                	mov    %eax,%edx
81004ad9:	c1 e2 10             	shl    $0x10,%edx
81004adc:	09 d0                	or     %edx,%eax
81004ade:	89 ca                	mov    %ecx,%edx
81004ae0:	c1 e9 02             	shr    $0x2,%ecx
81004ae3:	83 e2 03             	and    $0x3,%edx
81004ae6:	f3 ab                	rep stos %eax,%es:(%edi)
81004ae8:	89 d1                	mov    %edx,%ecx
81004aea:	f3 aa                	rep stos %al,%es:(%edi)
81004aec:	8b 45 08             	mov    0x8(%ebp),%eax
81004aef:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004af2:	5f                   	pop    %edi
81004af3:	c9                   	leave  
81004af4:	c3                   	ret    

81004af5 <__malloc_lock>:
81004af5:	55                   	push   %ebp
81004af6:	89 e5                	mov    %esp,%ebp
81004af8:	90                   	nop
81004af9:	5d                   	pop    %ebp
81004afa:	c3                   	ret    

81004afb <__malloc_unlock>:
81004afb:	55                   	push   %ebp
81004afc:	89 e5                	mov    %esp,%ebp
81004afe:	90                   	nop
81004aff:	5d                   	pop    %ebp
81004b00:	c3                   	ret    

81004b01 <__sprint_r>:
81004b01:	55                   	push   %ebp
81004b02:	89 e5                	mov    %esp,%ebp
81004b04:	56                   	push   %esi
81004b05:	53                   	push   %ebx
81004b06:	83 ec 10             	sub    $0x10,%esp
81004b09:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004b0c:	be 00 00 00 00       	mov    $0x0,%esi
81004b11:	8b 43 08             	mov    0x8(%ebx),%eax
81004b14:	85 c0                	test   %eax,%eax
81004b16:	75 11                	jne    81004b29 <__sprint_r+0x28>
81004b18:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004b1f:	b8 00 00 00 00       	mov    $0x0,%eax
81004b24:	e9 ad 00 00 00       	jmp    81004bd6 <__sprint_r+0xd5>
81004b29:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b2c:	8b 40 64             	mov    0x64(%eax),%eax
81004b2f:	25 00 20 00 00       	and    $0x2000,%eax
81004b34:	85 c0                	test   %eax,%eax
81004b36:	74 7a                	je     81004bb2 <__sprint_r+0xb1>
81004b38:	8b 03                	mov    (%ebx),%eax
81004b3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b3d:	eb 6a                	jmp    81004ba9 <__sprint_r+0xa8>
81004b3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b42:	8b 00                	mov    (%eax),%eax
81004b44:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004b47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b4a:	8b 40 04             	mov    0x4(%eax),%eax
81004b4d:	c1 e8 02             	shr    $0x2,%eax
81004b50:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004b53:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004b5a:	eb 33                	jmp    81004b8f <__sprint_r+0x8e>
81004b5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004b5f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004b66:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004b69:	01 d0                	add    %edx,%eax
81004b6b:	8b 00                	mov    (%eax),%eax
81004b6d:	83 ec 04             	sub    $0x4,%esp
81004b70:	ff 75 0c             	pushl  0xc(%ebp)
81004b73:	50                   	push   %eax
81004b74:	ff 75 08             	pushl  0x8(%ebp)
81004b77:	e8 ca 29 00 00       	call   81007546 <_fputwc_r>
81004b7c:	83 c4 10             	add    $0x10,%esp
81004b7f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b82:	75 07                	jne    81004b8b <__sprint_r+0x8a>
81004b84:	be ff ff ff ff       	mov    $0xffffffff,%esi
81004b89:	eb 3b                	jmp    81004bc6 <__sprint_r+0xc5>
81004b8b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004b8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004b92:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004b95:	7c c5                	jl     81004b5c <__sprint_r+0x5b>
81004b97:	8b 43 08             	mov    0x8(%ebx),%eax
81004b9a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004b9d:	c1 e2 02             	shl    $0x2,%edx
81004ba0:	29 d0                	sub    %edx,%eax
81004ba2:	89 43 08             	mov    %eax,0x8(%ebx)
81004ba5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004ba9:	8b 43 08             	mov    0x8(%ebx),%eax
81004bac:	85 c0                	test   %eax,%eax
81004bae:	75 8f                	jne    81004b3f <__sprint_r+0x3e>
81004bb0:	eb 14                	jmp    81004bc6 <__sprint_r+0xc5>
81004bb2:	83 ec 04             	sub    $0x4,%esp
81004bb5:	53                   	push   %ebx
81004bb6:	ff 75 0c             	pushl  0xc(%ebp)
81004bb9:	ff 75 08             	pushl  0x8(%ebp)
81004bbc:	e8 44 dc ff ff       	call   81002805 <__sfvwrite_r>
81004bc1:	83 c4 10             	add    $0x10,%esp
81004bc4:	89 c6                	mov    %eax,%esi
81004bc6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004bcd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004bd4:	89 f0                	mov    %esi,%eax
81004bd6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004bd9:	5b                   	pop    %ebx
81004bda:	5e                   	pop    %esi
81004bdb:	5d                   	pop    %ebp
81004bdc:	c3                   	ret    

81004bdd <__sfputc_r>:
81004bdd:	55                   	push   %ebp
81004bde:	89 e5                	mov    %esp,%ebp
81004be0:	83 ec 08             	sub    $0x8,%esp
81004be3:	8b 45 10             	mov    0x10(%ebp),%eax
81004be6:	8b 40 08             	mov    0x8(%eax),%eax
81004be9:	8d 50 ff             	lea    -0x1(%eax),%edx
81004bec:	8b 45 10             	mov    0x10(%ebp),%eax
81004bef:	89 50 08             	mov    %edx,0x8(%eax)
81004bf2:	8b 45 10             	mov    0x10(%ebp),%eax
81004bf5:	8b 40 08             	mov    0x8(%eax),%eax
81004bf8:	85 c0                	test   %eax,%eax
81004bfa:	79 17                	jns    81004c13 <__sfputc_r+0x36>
81004bfc:	8b 45 10             	mov    0x10(%ebp),%eax
81004bff:	8b 50 08             	mov    0x8(%eax),%edx
81004c02:	8b 45 10             	mov    0x10(%ebp),%eax
81004c05:	8b 40 18             	mov    0x18(%eax),%eax
81004c08:	39 c2                	cmp    %eax,%edx
81004c0a:	7c 21                	jl     81004c2d <__sfputc_r+0x50>
81004c0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c0f:	3c 0a                	cmp    $0xa,%al
81004c11:	74 1a                	je     81004c2d <__sfputc_r+0x50>
81004c13:	8b 45 10             	mov    0x10(%ebp),%eax
81004c16:	8b 00                	mov    (%eax),%eax
81004c18:	8d 48 01             	lea    0x1(%eax),%ecx
81004c1b:	8b 55 10             	mov    0x10(%ebp),%edx
81004c1e:	89 0a                	mov    %ecx,(%edx)
81004c20:	8b 55 0c             	mov    0xc(%ebp),%edx
81004c23:	88 10                	mov    %dl,(%eax)
81004c25:	0f b6 00             	movzbl (%eax),%eax
81004c28:	0f b6 c0             	movzbl %al,%eax
81004c2b:	eb 14                	jmp    81004c41 <__sfputc_r+0x64>
81004c2d:	83 ec 04             	sub    $0x4,%esp
81004c30:	ff 75 10             	pushl  0x10(%ebp)
81004c33:	ff 75 0c             	pushl  0xc(%ebp)
81004c36:	ff 75 08             	pushl  0x8(%ebp)
81004c39:	e8 71 22 00 00       	call   81006eaf <__swbuf_r>
81004c3e:	83 c4 10             	add    $0x10,%esp
81004c41:	c9                   	leave  
81004c42:	c3                   	ret    

81004c43 <__sfputs_r>:
81004c43:	55                   	push   %ebp
81004c44:	89 e5                	mov    %esp,%ebp
81004c46:	53                   	push   %ebx
81004c47:	83 ec 14             	sub    $0x14,%esp
81004c4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c4d:	8b 40 64             	mov    0x64(%eax),%eax
81004c50:	25 00 20 00 00       	and    $0x2000,%eax
81004c55:	85 c0                	test   %eax,%eax
81004c57:	74 4c                	je     81004ca5 <__sfputs_r+0x62>
81004c59:	8b 45 10             	mov    0x10(%ebp),%eax
81004c5c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c5f:	bb 00 00 00 00       	mov    $0x0,%ebx
81004c64:	eb 31                	jmp    81004c97 <__sfputs_r+0x54>
81004c66:	89 d8                	mov    %ebx,%eax
81004c68:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004c6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c72:	01 d0                	add    %edx,%eax
81004c74:	8b 00                	mov    (%eax),%eax
81004c76:	83 ec 04             	sub    $0x4,%esp
81004c79:	ff 75 0c             	pushl  0xc(%ebp)
81004c7c:	50                   	push   %eax
81004c7d:	ff 75 08             	pushl  0x8(%ebp)
81004c80:	e8 c1 28 00 00       	call   81007546 <_fputwc_r>
81004c85:	83 c4 10             	add    $0x10,%esp
81004c88:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c8b:	75 07                	jne    81004c94 <__sfputs_r+0x51>
81004c8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c92:	eb 52                	jmp    81004ce6 <__sfputs_r+0xa3>
81004c94:	83 c3 01             	add    $0x1,%ebx
81004c97:	8b 45 14             	mov    0x14(%ebp),%eax
81004c9a:	c1 e8 02             	shr    $0x2,%eax
81004c9d:	89 da                	mov    %ebx,%edx
81004c9f:	39 d0                	cmp    %edx,%eax
81004ca1:	77 c3                	ja     81004c66 <__sfputs_r+0x23>
81004ca3:	eb 3c                	jmp    81004ce1 <__sfputs_r+0x9e>
81004ca5:	bb 00 00 00 00       	mov    $0x0,%ebx
81004caa:	eb 2e                	jmp    81004cda <__sfputs_r+0x97>
81004cac:	89 da                	mov    %ebx,%edx
81004cae:	8b 45 10             	mov    0x10(%ebp),%eax
81004cb1:	01 d0                	add    %edx,%eax
81004cb3:	0f b6 00             	movzbl (%eax),%eax
81004cb6:	0f be c0             	movsbl %al,%eax
81004cb9:	83 ec 04             	sub    $0x4,%esp
81004cbc:	ff 75 0c             	pushl  0xc(%ebp)
81004cbf:	50                   	push   %eax
81004cc0:	ff 75 08             	pushl  0x8(%ebp)
81004cc3:	e8 15 ff ff ff       	call   81004bdd <__sfputc_r>
81004cc8:	83 c4 10             	add    $0x10,%esp
81004ccb:	83 f8 ff             	cmp    $0xffffffff,%eax
81004cce:	75 07                	jne    81004cd7 <__sfputs_r+0x94>
81004cd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004cd5:	eb 0f                	jmp    81004ce6 <__sfputs_r+0xa3>
81004cd7:	83 c3 01             	add    $0x1,%ebx
81004cda:	89 d8                	mov    %ebx,%eax
81004cdc:	39 45 14             	cmp    %eax,0x14(%ebp)
81004cdf:	77 cb                	ja     81004cac <__sfputs_r+0x69>
81004ce1:	b8 00 00 00 00       	mov    $0x0,%eax
81004ce6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004ce9:	c9                   	leave  
81004cea:	c3                   	ret    

81004ceb <vfiprintf>:
81004ceb:	55                   	push   %ebp
81004cec:	89 e5                	mov    %esp,%ebp
81004cee:	83 ec 18             	sub    $0x18,%esp
81004cf1:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81004cf6:	ff 75 10             	pushl  0x10(%ebp)
81004cf9:	ff 75 0c             	pushl  0xc(%ebp)
81004cfc:	ff 75 08             	pushl  0x8(%ebp)
81004cff:	50                   	push   %eax
81004d00:	e8 0b 00 00 00       	call   81004d10 <_vfiprintf_r>
81004d05:	83 c4 10             	add    $0x10,%esp
81004d08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d0e:	c9                   	leave  
81004d0f:	c3                   	ret    

81004d10 <_vfiprintf_r>:
81004d10:	55                   	push   %ebp
81004d11:	89 e5                	mov    %esp,%ebp
81004d13:	57                   	push   %edi
81004d14:	56                   	push   %esi
81004d15:	53                   	push   %ebx
81004d16:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81004d1c:	c7 45 e4 43 4c 00 81 	movl   $0x81004c43,-0x1c(%ebp)
81004d23:	8b 45 08             	mov    0x8(%ebp),%eax
81004d26:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004d29:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004d2d:	74 18                	je     81004d47 <_vfiprintf_r+0x37>
81004d2f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004d32:	8b 40 38             	mov    0x38(%eax),%eax
81004d35:	85 c0                	test   %eax,%eax
81004d37:	75 0e                	jne    81004d47 <_vfiprintf_r+0x37>
81004d39:	83 ec 0c             	sub    $0xc,%esp
81004d3c:	ff 75 e0             	pushl  -0x20(%ebp)
81004d3f:	e8 7f ca ff ff       	call   810017c3 <__sinit>
81004d44:	83 c4 10             	add    $0x10,%esp
81004d47:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004d4e:	98                   	cwtl   
81004d4f:	83 e0 08             	and    $0x8,%eax
81004d52:	85 c0                	test   %eax,%eax
81004d54:	74 0a                	je     81004d60 <_vfiprintf_r+0x50>
81004d56:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d59:	8b 40 10             	mov    0x10(%eax),%eax
81004d5c:	85 c0                	test   %eax,%eax
81004d5e:	75 1f                	jne    81004d7f <_vfiprintf_r+0x6f>
81004d60:	83 ec 08             	sub    $0x8,%esp
81004d63:	ff 75 0c             	pushl  0xc(%ebp)
81004d66:	ff 75 08             	pushl  0x8(%ebp)
81004d69:	e8 ba 22 00 00       	call   81007028 <__swsetup_r>
81004d6e:	83 c4 10             	add    $0x10,%esp
81004d71:	85 c0                	test   %eax,%eax
81004d73:	74 0a                	je     81004d7f <_vfiprintf_r+0x6f>
81004d75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d7a:	e9 df 02 00 00       	jmp    8100505e <_vfiprintf_r+0x34e>
81004d7f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004d82:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81004d89:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004d8d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004d91:	8b 45 14             	mov    0x14(%ebp),%eax
81004d94:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004d9a:	89 de                	mov    %ebx,%esi
81004d9c:	eb 03                	jmp    81004da1 <_vfiprintf_r+0x91>
81004d9e:	83 c3 01             	add    $0x1,%ebx
81004da1:	0f b6 03             	movzbl (%ebx),%eax
81004da4:	84 c0                	test   %al,%al
81004da6:	74 07                	je     81004daf <_vfiprintf_r+0x9f>
81004da8:	0f b6 03             	movzbl (%ebx),%eax
81004dab:	3c 25                	cmp    $0x25,%al
81004dad:	75 ef                	jne    81004d9e <_vfiprintf_r+0x8e>
81004daf:	89 d8                	mov    %ebx,%eax
81004db1:	29 f0                	sub    %esi,%eax
81004db3:	85 c0                	test   %eax,%eax
81004db5:	74 2b                	je     81004de2 <_vfiprintf_r+0xd2>
81004db7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004dbd:	50                   	push   %eax
81004dbe:	56                   	push   %esi
81004dbf:	ff 75 0c             	pushl  0xc(%ebp)
81004dc2:	ff 75 08             	pushl  0x8(%ebp)
81004dc5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004dc8:	ff d0                	call   *%eax
81004dca:	83 c4 10             	add    $0x10,%esp
81004dcd:	83 f8 ff             	cmp    $0xffffffff,%eax
81004dd0:	0f 84 68 02 00 00    	je     8100503e <_vfiprintf_r+0x32e>
81004dd6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004dd9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004ddf:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004de2:	0f b6 03             	movzbl (%ebx),%eax
81004de5:	84 c0                	test   %al,%al
81004de7:	0f 84 54 02 00 00    	je     81005041 <_vfiprintf_r+0x331>
81004ded:	83 c3 01             	add    $0x1,%ebx
81004df0:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004df7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004dfe:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004e05:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81004e0c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004e10:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004e17:	c7 45 dc d8 86 00 81 	movl   $0x810086d8,-0x24(%ebp)
81004e1e:	eb 1b                	jmp    81004e3b <_vfiprintf_r+0x12b>
81004e20:	8b 55 80             	mov    -0x80(%ebp),%edx
81004e23:	89 f0                	mov    %esi,%eax
81004e25:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004e28:	be 01 00 00 00       	mov    $0x1,%esi
81004e2d:	89 c1                	mov    %eax,%ecx
81004e2f:	d3 e6                	shl    %cl,%esi
81004e31:	89 f0                	mov    %esi,%eax
81004e33:	09 d0                	or     %edx,%eax
81004e35:	89 45 80             	mov    %eax,-0x80(%ebp)
81004e38:	83 c3 01             	add    $0x1,%ebx
81004e3b:	0f b6 03             	movzbl (%ebx),%eax
81004e3e:	0f be c0             	movsbl %al,%eax
81004e41:	83 ec 04             	sub    $0x4,%esp
81004e44:	6a 05                	push   $0x5
81004e46:	50                   	push   %eax
81004e47:	ff 75 dc             	pushl  -0x24(%ebp)
81004e4a:	e8 61 fa ff ff       	call   810048b0 <memchr>
81004e4f:	83 c4 10             	add    $0x10,%esp
81004e52:	89 c6                	mov    %eax,%esi
81004e54:	85 f6                	test   %esi,%esi
81004e56:	75 c8                	jne    81004e20 <_vfiprintf_r+0x110>
81004e58:	8b 45 80             	mov    -0x80(%ebp),%eax
81004e5b:	83 e0 10             	and    $0x10,%eax
81004e5e:	85 c0                	test   %eax,%eax
81004e60:	74 04                	je     81004e66 <_vfiprintf_r+0x156>
81004e62:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004e66:	8b 45 80             	mov    -0x80(%ebp),%eax
81004e69:	83 e0 08             	and    $0x8,%eax
81004e6c:	85 c0                	test   %eax,%eax
81004e6e:	74 04                	je     81004e74 <_vfiprintf_r+0x164>
81004e70:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004e74:	0f b6 03             	movzbl (%ebx),%eax
81004e77:	3c 2a                	cmp    $0x2a,%al
81004e79:	75 50                	jne    81004ecb <_vfiprintf_r+0x1bb>
81004e7b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004e81:	8d 50 04             	lea    0x4(%eax),%edx
81004e84:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004e8a:	8b 00                	mov    (%eax),%eax
81004e8c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004e8f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004e92:	85 c0                	test   %eax,%eax
81004e94:	79 11                	jns    81004ea7 <_vfiprintf_r+0x197>
81004e96:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004e99:	f7 d8                	neg    %eax
81004e9b:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004e9e:	8b 45 80             	mov    -0x80(%ebp),%eax
81004ea1:	83 c8 02             	or     $0x2,%eax
81004ea4:	89 45 80             	mov    %eax,-0x80(%ebp)
81004ea7:	83 c3 01             	add    $0x1,%ebx
81004eaa:	eb 2d                	jmp    81004ed9 <_vfiprintf_r+0x1c9>
81004eac:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004eaf:	89 d0                	mov    %edx,%eax
81004eb1:	c1 e0 02             	shl    $0x2,%eax
81004eb4:	01 d0                	add    %edx,%eax
81004eb6:	01 c0                	add    %eax,%eax
81004eb8:	89 c2                	mov    %eax,%edx
81004eba:	0f b6 03             	movzbl (%ebx),%eax
81004ebd:	0f be c0             	movsbl %al,%eax
81004ec0:	83 e8 30             	sub    $0x30,%eax
81004ec3:	01 d0                	add    %edx,%eax
81004ec5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004ec8:	83 c3 01             	add    $0x1,%ebx
81004ecb:	0f b6 03             	movzbl (%ebx),%eax
81004ece:	0f be c0             	movsbl %al,%eax
81004ed1:	83 e8 30             	sub    $0x30,%eax
81004ed4:	83 f8 09             	cmp    $0x9,%eax
81004ed7:	76 d3                	jbe    81004eac <_vfiprintf_r+0x19c>
81004ed9:	0f b6 03             	movzbl (%ebx),%eax
81004edc:	3c 2e                	cmp    $0x2e,%al
81004ede:	75 67                	jne    81004f47 <_vfiprintf_r+0x237>
81004ee0:	83 c3 01             	add    $0x1,%ebx
81004ee3:	0f b6 03             	movzbl (%ebx),%eax
81004ee6:	3c 2a                	cmp    $0x2a,%al
81004ee8:	75 27                	jne    81004f11 <_vfiprintf_r+0x201>
81004eea:	83 c3 01             	add    $0x1,%ebx
81004eed:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004ef3:	8d 50 04             	lea    0x4(%eax),%edx
81004ef6:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004efc:	8b 00                	mov    (%eax),%eax
81004efe:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004f01:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004f04:	85 c0                	test   %eax,%eax
81004f06:	79 3f                	jns    81004f47 <_vfiprintf_r+0x237>
81004f08:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004f0f:	eb 36                	jmp    81004f47 <_vfiprintf_r+0x237>
81004f11:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81004f18:	eb 1f                	jmp    81004f39 <_vfiprintf_r+0x229>
81004f1a:	8b 55 84             	mov    -0x7c(%ebp),%edx
81004f1d:	89 d0                	mov    %edx,%eax
81004f1f:	c1 e0 02             	shl    $0x2,%eax
81004f22:	01 d0                	add    %edx,%eax
81004f24:	01 c0                	add    %eax,%eax
81004f26:	89 c2                	mov    %eax,%edx
81004f28:	0f b6 03             	movzbl (%ebx),%eax
81004f2b:	0f be c0             	movsbl %al,%eax
81004f2e:	83 e8 30             	sub    $0x30,%eax
81004f31:	01 d0                	add    %edx,%eax
81004f33:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004f36:	83 c3 01             	add    $0x1,%ebx
81004f39:	0f b6 03             	movzbl (%ebx),%eax
81004f3c:	0f be c0             	movsbl %al,%eax
81004f3f:	83 e8 30             	sub    $0x30,%eax
81004f42:	83 f8 09             	cmp    $0x9,%eax
81004f45:	76 d3                	jbe    81004f1a <_vfiprintf_r+0x20a>
81004f47:	c7 45 dc de 86 00 81 	movl   $0x810086de,-0x24(%ebp)
81004f4e:	0f b6 03             	movzbl (%ebx),%eax
81004f51:	0f be c0             	movsbl %al,%eax
81004f54:	83 ec 04             	sub    $0x4,%esp
81004f57:	6a 03                	push   $0x3
81004f59:	50                   	push   %eax
81004f5a:	ff 75 dc             	pushl  -0x24(%ebp)
81004f5d:	e8 4e f9 ff ff       	call   810048b0 <memchr>
81004f62:	83 c4 10             	add    $0x10,%esp
81004f65:	89 c6                	mov    %eax,%esi
81004f67:	85 f6                	test   %esi,%esi
81004f69:	74 1b                	je     81004f86 <_vfiprintf_r+0x276>
81004f6b:	8b 55 80             	mov    -0x80(%ebp),%edx
81004f6e:	89 f0                	mov    %esi,%eax
81004f70:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004f73:	be 40 00 00 00       	mov    $0x40,%esi
81004f78:	89 c1                	mov    %eax,%ecx
81004f7a:	d3 e6                	shl    %cl,%esi
81004f7c:	89 f0                	mov    %esi,%eax
81004f7e:	09 d0                	or     %edx,%eax
81004f80:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f83:	83 c3 01             	add    $0x1,%ebx
81004f86:	89 d8                	mov    %ebx,%eax
81004f88:	8d 58 01             	lea    0x1(%eax),%ebx
81004f8b:	0f b6 00             	movzbl (%eax),%eax
81004f8e:	88 45 98             	mov    %al,-0x68(%ebp)
81004f91:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004f95:	0f be c0             	movsbl %al,%eax
81004f98:	83 ec 04             	sub    $0x4,%esp
81004f9b:	6a 06                	push   $0x6
81004f9d:	50                   	push   %eax
81004f9e:	68 e2 86 00 81       	push   $0x810086e2
81004fa3:	e8 08 f9 ff ff       	call   810048b0 <memchr>
81004fa8:	83 c4 10             	add    $0x10,%esp
81004fab:	89 c6                	mov    %eax,%esi
81004fad:	85 f6                	test   %esi,%esi
81004faf:	74 5a                	je     8100500b <_vfiprintf_r+0x2fb>
81004fb1:	b8 00 00 00 00       	mov    $0x0,%eax
81004fb6:	85 c0                	test   %eax,%eax
81004fb8:	75 2e                	jne    81004fe8 <_vfiprintf_r+0x2d8>
81004fba:	8b 45 80             	mov    -0x80(%ebp),%eax
81004fbd:	25 00 01 00 00       	and    $0x100,%eax
81004fc2:	85 c0                	test   %eax,%eax
81004fc4:	74 11                	je     81004fd7 <_vfiprintf_r+0x2c7>
81004fc6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004fcc:	83 c0 0c             	add    $0xc,%eax
81004fcf:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004fd5:	eb 55                	jmp    8100502c <_vfiprintf_r+0x31c>
81004fd7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004fdd:	83 c0 08             	add    $0x8,%eax
81004fe0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004fe6:	eb 44                	jmp    8100502c <_vfiprintf_r+0x31c>
81004fe8:	83 ec 0c             	sub    $0xc,%esp
81004feb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004ff1:	50                   	push   %eax
81004ff2:	ff 75 e4             	pushl  -0x1c(%ebp)
81004ff5:	ff 75 0c             	pushl  0xc(%ebp)
81004ff8:	8d 45 80             	lea    -0x80(%ebp),%eax
81004ffb:	50                   	push   %eax
81004ffc:	ff 75 08             	pushl  0x8(%ebp)
81004fff:	e8 fc af ff 7e       	call   0 <show_promot-0x81000000>
81005004:	83 c4 20             	add    $0x20,%esp
81005007:	89 c7                	mov    %eax,%edi
81005009:	eb 21                	jmp    8100502c <_vfiprintf_r+0x31c>
8100500b:	83 ec 0c             	sub    $0xc,%esp
8100500e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005014:	50                   	push   %eax
81005015:	ff 75 e4             	pushl  -0x1c(%ebp)
81005018:	ff 75 0c             	pushl  0xc(%ebp)
8100501b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100501e:	50                   	push   %eax
8100501f:	ff 75 08             	pushl  0x8(%ebp)
81005022:	e8 da 01 00 00       	call   81005201 <_printf_i>
81005027:	83 c4 20             	add    $0x20,%esp
8100502a:	89 c7                	mov    %eax,%edi
8100502c:	83 ff ff             	cmp    $0xffffffff,%edi
8100502f:	74 13                	je     81005044 <_vfiprintf_r+0x334>
81005031:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005034:	01 f8                	add    %edi,%eax
81005036:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005039:	e9 5c fd ff ff       	jmp    81004d9a <_vfiprintf_r+0x8a>
8100503e:	90                   	nop
8100503f:	eb 04                	jmp    81005045 <_vfiprintf_r+0x335>
81005041:	90                   	nop
81005042:	eb 01                	jmp    81005045 <_vfiprintf_r+0x335>
81005044:	90                   	nop
81005045:	8b 45 0c             	mov    0xc(%ebp),%eax
81005048:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100504c:	98                   	cwtl   
8100504d:	83 e0 40             	and    $0x40,%eax
81005050:	85 c0                	test   %eax,%eax
81005052:	75 05                	jne    81005059 <_vfiprintf_r+0x349>
81005054:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005057:	eb 05                	jmp    8100505e <_vfiprintf_r+0x34e>
81005059:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100505e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005061:	5b                   	pop    %ebx
81005062:	5e                   	pop    %esi
81005063:	5f                   	pop    %edi
81005064:	5d                   	pop    %ebp
81005065:	c3                   	ret    

81005066 <_printf_common>:
81005066:	55                   	push   %ebp
81005067:	89 e5                	mov    %esp,%ebp
81005069:	83 ec 18             	sub    $0x18,%esp
8100506c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100506f:	8b 50 10             	mov    0x10(%eax),%edx
81005072:	8b 45 0c             	mov    0xc(%ebp),%eax
81005075:	8b 40 08             	mov    0x8(%eax),%eax
81005078:	39 c2                	cmp    %eax,%edx
8100507a:	0f 4c d0             	cmovl  %eax,%edx
8100507d:	8b 45 10             	mov    0x10(%ebp),%eax
81005080:	89 10                	mov    %edx,(%eax)
81005082:	8b 45 0c             	mov    0xc(%ebp),%eax
81005085:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81005089:	84 c0                	test   %al,%al
8100508b:	74 0d                	je     8100509a <_printf_common+0x34>
8100508d:	8b 45 10             	mov    0x10(%ebp),%eax
81005090:	8b 00                	mov    (%eax),%eax
81005092:	8d 50 01             	lea    0x1(%eax),%edx
81005095:	8b 45 10             	mov    0x10(%ebp),%eax
81005098:	89 10                	mov    %edx,(%eax)
8100509a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100509d:	8b 00                	mov    (%eax),%eax
8100509f:	83 e0 20             	and    $0x20,%eax
810050a2:	85 c0                	test   %eax,%eax
810050a4:	74 0d                	je     810050b3 <_printf_common+0x4d>
810050a6:	8b 45 10             	mov    0x10(%ebp),%eax
810050a9:	8b 00                	mov    (%eax),%eax
810050ab:	8d 50 02             	lea    0x2(%eax),%edx
810050ae:	8b 45 10             	mov    0x10(%ebp),%eax
810050b1:	89 10                	mov    %edx,(%eax)
810050b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810050b6:	8b 00                	mov    (%eax),%eax
810050b8:	83 e0 06             	and    $0x6,%eax
810050bb:	85 c0                	test   %eax,%eax
810050bd:	75 41                	jne    81005100 <_printf_common+0x9a>
810050bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810050c6:	eb 24                	jmp    810050ec <_printf_common+0x86>
810050c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810050cb:	83 c0 19             	add    $0x19,%eax
810050ce:	6a 01                	push   $0x1
810050d0:	50                   	push   %eax
810050d1:	ff 75 14             	pushl  0x14(%ebp)
810050d4:	ff 75 08             	pushl  0x8(%ebp)
810050d7:	8b 45 18             	mov    0x18(%ebp),%eax
810050da:	ff d0                	call   *%eax
810050dc:	83 c4 10             	add    $0x10,%esp
810050df:	83 f8 ff             	cmp    $0xffffffff,%eax
810050e2:	0f 84 0b 01 00 00    	je     810051f3 <_printf_common+0x18d>
810050e8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810050ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810050ef:	8b 50 0c             	mov    0xc(%eax),%edx
810050f2:	8b 45 10             	mov    0x10(%ebp),%eax
810050f5:	8b 08                	mov    (%eax),%ecx
810050f7:	89 d0                	mov    %edx,%eax
810050f9:	29 c8                	sub    %ecx,%eax
810050fb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810050fe:	7c c8                	jl     810050c8 <_printf_common+0x62>
81005100:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005107:	8b 45 0c             	mov    0xc(%ebp),%eax
8100510a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100510e:	84 c0                	test   %al,%al
81005110:	74 04                	je     81005116 <_printf_common+0xb0>
81005112:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005116:	8b 45 0c             	mov    0xc(%ebp),%eax
81005119:	8b 00                	mov    (%eax),%eax
8100511b:	83 e0 20             	and    $0x20,%eax
8100511e:	85 c0                	test   %eax,%eax
81005120:	74 28                	je     8100514a <_printf_common+0xe4>
81005122:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005125:	8d 50 01             	lea    0x1(%eax),%edx
81005128:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100512b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100512e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81005133:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005136:	8d 50 01             	lea    0x1(%eax),%edx
81005139:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100513c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100513f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81005143:	8b 55 0c             	mov    0xc(%ebp),%edx
81005146:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100514a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100514d:	8b 55 0c             	mov    0xc(%ebp),%edx
81005150:	83 c2 43             	add    $0x43,%edx
81005153:	50                   	push   %eax
81005154:	52                   	push   %edx
81005155:	ff 75 14             	pushl  0x14(%ebp)
81005158:	ff 75 08             	pushl  0x8(%ebp)
8100515b:	8b 45 18             	mov    0x18(%ebp),%eax
8100515e:	ff d0                	call   *%eax
81005160:	83 c4 10             	add    $0x10,%esp
81005163:	83 f8 ff             	cmp    $0xffffffff,%eax
81005166:	0f 84 8a 00 00 00    	je     810051f6 <_printf_common+0x190>
8100516c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100516f:	8b 50 0c             	mov    0xc(%eax),%edx
81005172:	8b 45 10             	mov    0x10(%ebp),%eax
81005175:	8b 08                	mov    (%eax),%ecx
81005177:	89 d0                	mov    %edx,%eax
81005179:	29 c8                	sub    %ecx,%eax
8100517b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100517e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005181:	8b 00                	mov    (%eax),%eax
81005183:	83 e0 06             	and    $0x6,%eax
81005186:	83 f8 04             	cmp    $0x4,%eax
81005189:	75 06                	jne    81005191 <_printf_common+0x12b>
8100518b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100518f:	79 07                	jns    81005198 <_printf_common+0x132>
81005191:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005198:	8b 45 0c             	mov    0xc(%ebp),%eax
8100519b:	8b 50 08             	mov    0x8(%eax),%edx
8100519e:	8b 45 0c             	mov    0xc(%ebp),%eax
810051a1:	8b 40 10             	mov    0x10(%eax),%eax
810051a4:	39 c2                	cmp    %eax,%edx
810051a6:	7e 13                	jle    810051bb <_printf_common+0x155>
810051a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810051ab:	8b 50 08             	mov    0x8(%eax),%edx
810051ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810051b1:	8b 48 10             	mov    0x10(%eax),%ecx
810051b4:	89 d0                	mov    %edx,%eax
810051b6:	29 c8                	sub    %ecx,%eax
810051b8:	01 45 f4             	add    %eax,-0xc(%ebp)
810051bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810051c2:	eb 20                	jmp    810051e4 <_printf_common+0x17e>
810051c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810051c7:	83 c0 1a             	add    $0x1a,%eax
810051ca:	6a 01                	push   $0x1
810051cc:	50                   	push   %eax
810051cd:	ff 75 14             	pushl  0x14(%ebp)
810051d0:	ff 75 08             	pushl  0x8(%ebp)
810051d3:	8b 45 18             	mov    0x18(%ebp),%eax
810051d6:	ff d0                	call   *%eax
810051d8:	83 c4 10             	add    $0x10,%esp
810051db:	83 f8 ff             	cmp    $0xffffffff,%eax
810051de:	74 19                	je     810051f9 <_printf_common+0x193>
810051e0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810051e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810051e7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810051ea:	7c d8                	jl     810051c4 <_printf_common+0x15e>
810051ec:	b8 00 00 00 00       	mov    $0x0,%eax
810051f1:	eb 0c                	jmp    810051ff <_printf_common+0x199>
810051f3:	90                   	nop
810051f4:	eb 04                	jmp    810051fa <_printf_common+0x194>
810051f6:	90                   	nop
810051f7:	eb 01                	jmp    810051fa <_printf_common+0x194>
810051f9:	90                   	nop
810051fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051ff:	c9                   	leave  
81005200:	c3                   	ret    

81005201 <_printf_i>:
81005201:	55                   	push   %ebp
81005202:	89 e5                	mov    %esp,%ebp
81005204:	53                   	push   %ebx
81005205:	83 ec 24             	sub    $0x24,%esp
81005208:	8b 45 0c             	mov    0xc(%ebp),%eax
8100520b:	83 c0 1b             	add    $0x1b,%eax
8100520e:	83 c0 28             	add    $0x28,%eax
81005211:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005214:	c7 45 e8 ec 86 00 81 	movl   $0x810086ec,-0x18(%ebp)
8100521b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100521e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005222:	0f be c0             	movsbl %al,%eax
81005225:	85 c0                	test   %eax,%eax
81005227:	0f 84 00 03 00 00    	je     8100552d <_printf_i+0x32c>
8100522d:	85 c0                	test   %eax,%eax
8100522f:	0f 88 52 03 00 00    	js     81005587 <_printf_i+0x386>
81005235:	83 f8 78             	cmp    $0x78,%eax
81005238:	0f 8f 49 03 00 00    	jg     81005587 <_printf_i+0x386>
8100523e:	83 f8 58             	cmp    $0x58,%eax
81005241:	0f 8c 40 03 00 00    	jl     81005587 <_printf_i+0x386>
81005247:	83 e8 58             	sub    $0x58,%eax
8100524a:	83 f8 20             	cmp    $0x20,%eax
8100524d:	0f 87 34 03 00 00    	ja     81005587 <_printf_i+0x386>
81005253:	8b 04 85 10 87 00 81 	mov    -0x7eff78f0(,%eax,4),%eax
8100525a:	ff e0                	jmp    *%eax
8100525c:	8b 45 18             	mov    0x18(%ebp),%eax
8100525f:	8b 00                	mov    (%eax),%eax
81005261:	8d 48 04             	lea    0x4(%eax),%ecx
81005264:	8b 55 18             	mov    0x18(%ebp),%edx
81005267:	89 0a                	mov    %ecx,(%edx)
81005269:	8b 00                	mov    (%eax),%eax
8100526b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100526f:	89 c2                	mov    %eax,%edx
81005271:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005274:	88 10                	mov    %dl,(%eax)
81005276:	8b 45 0c             	mov    0xc(%ebp),%eax
81005279:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005280:	e9 1c 03 00 00       	jmp    810055a1 <_printf_i+0x3a0>
81005285:	8b 45 0c             	mov    0xc(%ebp),%eax
81005288:	8b 00                	mov    (%eax),%eax
8100528a:	25 80 00 00 00       	and    $0x80,%eax
8100528f:	85 c0                	test   %eax,%eax
81005291:	74 11                	je     810052a4 <_printf_i+0xa3>
81005293:	8b 45 18             	mov    0x18(%ebp),%eax
81005296:	8b 00                	mov    (%eax),%eax
81005298:	8d 48 04             	lea    0x4(%eax),%ecx
8100529b:	8b 55 18             	mov    0x18(%ebp),%edx
8100529e:	89 0a                	mov    %ecx,(%edx)
810052a0:	8b 00                	mov    (%eax),%eax
810052a2:	eb 2d                	jmp    810052d1 <_printf_i+0xd0>
810052a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810052a7:	8b 00                	mov    (%eax),%eax
810052a9:	83 e0 40             	and    $0x40,%eax
810052ac:	85 c0                	test   %eax,%eax
810052ae:	74 12                	je     810052c2 <_printf_i+0xc1>
810052b0:	8b 45 18             	mov    0x18(%ebp),%eax
810052b3:	8b 00                	mov    (%eax),%eax
810052b5:	8d 48 04             	lea    0x4(%eax),%ecx
810052b8:	8b 55 18             	mov    0x18(%ebp),%edx
810052bb:	89 0a                	mov    %ecx,(%edx)
810052bd:	8b 00                	mov    (%eax),%eax
810052bf:	98                   	cwtl   
810052c0:	eb 0f                	jmp    810052d1 <_printf_i+0xd0>
810052c2:	8b 45 18             	mov    0x18(%ebp),%eax
810052c5:	8b 00                	mov    (%eax),%eax
810052c7:	8d 48 04             	lea    0x4(%eax),%ecx
810052ca:	8b 55 18             	mov    0x18(%ebp),%edx
810052cd:	89 0a                	mov    %ecx,(%edx)
810052cf:	8b 00                	mov    (%eax),%eax
810052d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810052d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810052d7:	85 c0                	test   %eax,%eax
810052d9:	79 0a                	jns    810052e5 <_printf_i+0xe4>
810052db:	f7 5d f4             	negl   -0xc(%ebp)
810052de:	8b 45 0c             	mov    0xc(%ebp),%eax
810052e1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810052e5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810052ec:	e9 28 01 00 00       	jmp    81005419 <_printf_i+0x218>
810052f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810052f4:	8b 00                	mov    (%eax),%eax
810052f6:	25 80 00 00 00       	and    $0x80,%eax
810052fb:	85 c0                	test   %eax,%eax
810052fd:	74 11                	je     81005310 <_printf_i+0x10f>
810052ff:	8b 45 18             	mov    0x18(%ebp),%eax
81005302:	8b 00                	mov    (%eax),%eax
81005304:	8d 48 04             	lea    0x4(%eax),%ecx
81005307:	8b 55 18             	mov    0x18(%ebp),%edx
8100530a:	89 0a                	mov    %ecx,(%edx)
8100530c:	8b 00                	mov    (%eax),%eax
8100530e:	eb 2f                	jmp    8100533f <_printf_i+0x13e>
81005310:	8b 45 0c             	mov    0xc(%ebp),%eax
81005313:	8b 00                	mov    (%eax),%eax
81005315:	83 e0 40             	and    $0x40,%eax
81005318:	85 c0                	test   %eax,%eax
8100531a:	74 14                	je     81005330 <_printf_i+0x12f>
8100531c:	8b 45 18             	mov    0x18(%ebp),%eax
8100531f:	8b 00                	mov    (%eax),%eax
81005321:	8d 48 04             	lea    0x4(%eax),%ecx
81005324:	8b 55 18             	mov    0x18(%ebp),%edx
81005327:	89 0a                	mov    %ecx,(%edx)
81005329:	8b 00                	mov    (%eax),%eax
8100532b:	0f b7 c0             	movzwl %ax,%eax
8100532e:	eb 0f                	jmp    8100533f <_printf_i+0x13e>
81005330:	8b 45 18             	mov    0x18(%ebp),%eax
81005333:	8b 00                	mov    (%eax),%eax
81005335:	8d 48 04             	lea    0x4(%eax),%ecx
81005338:	8b 55 18             	mov    0x18(%ebp),%edx
8100533b:	89 0a                	mov    %ecx,(%edx)
8100533d:	8b 00                	mov    (%eax),%eax
8100533f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005342:	8b 45 0c             	mov    0xc(%ebp),%eax
81005345:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005349:	3c 6f                	cmp    $0x6f,%al
8100534b:	75 07                	jne    81005354 <_printf_i+0x153>
8100534d:	b8 08 00 00 00       	mov    $0x8,%eax
81005352:	eb 05                	jmp    81005359 <_printf_i+0x158>
81005354:	b8 0a 00 00 00       	mov    $0xa,%eax
81005359:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100535c:	e9 b1 00 00 00       	jmp    81005412 <_printf_i+0x211>
81005361:	8b 45 0c             	mov    0xc(%ebp),%eax
81005364:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81005368:	eb 1d                	jmp    81005387 <_printf_i+0x186>
8100536a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100536d:	8b 00                	mov    (%eax),%eax
8100536f:	83 c8 20             	or     $0x20,%eax
81005372:	89 c2                	mov    %eax,%edx
81005374:	8b 45 0c             	mov    0xc(%ebp),%eax
81005377:	89 10                	mov    %edx,(%eax)
81005379:	8b 45 0c             	mov    0xc(%ebp),%eax
8100537c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81005380:	c7 45 e8 fd 86 00 81 	movl   $0x810086fd,-0x18(%ebp)
81005387:	8b 45 0c             	mov    0xc(%ebp),%eax
8100538a:	8b 00                	mov    (%eax),%eax
8100538c:	25 80 00 00 00       	and    $0x80,%eax
81005391:	85 c0                	test   %eax,%eax
81005393:	74 11                	je     810053a6 <_printf_i+0x1a5>
81005395:	8b 45 18             	mov    0x18(%ebp),%eax
81005398:	8b 00                	mov    (%eax),%eax
8100539a:	8d 48 04             	lea    0x4(%eax),%ecx
8100539d:	8b 55 18             	mov    0x18(%ebp),%edx
810053a0:	89 0a                	mov    %ecx,(%edx)
810053a2:	8b 00                	mov    (%eax),%eax
810053a4:	eb 2f                	jmp    810053d5 <_printf_i+0x1d4>
810053a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810053a9:	8b 00                	mov    (%eax),%eax
810053ab:	83 e0 40             	and    $0x40,%eax
810053ae:	85 c0                	test   %eax,%eax
810053b0:	74 14                	je     810053c6 <_printf_i+0x1c5>
810053b2:	8b 45 18             	mov    0x18(%ebp),%eax
810053b5:	8b 00                	mov    (%eax),%eax
810053b7:	8d 48 04             	lea    0x4(%eax),%ecx
810053ba:	8b 55 18             	mov    0x18(%ebp),%edx
810053bd:	89 0a                	mov    %ecx,(%edx)
810053bf:	8b 00                	mov    (%eax),%eax
810053c1:	0f b7 c0             	movzwl %ax,%eax
810053c4:	eb 0f                	jmp    810053d5 <_printf_i+0x1d4>
810053c6:	8b 45 18             	mov    0x18(%ebp),%eax
810053c9:	8b 00                	mov    (%eax),%eax
810053cb:	8d 48 04             	lea    0x4(%eax),%ecx
810053ce:	8b 55 18             	mov    0x18(%ebp),%edx
810053d1:	89 0a                	mov    %ecx,(%edx)
810053d3:	8b 00                	mov    (%eax),%eax
810053d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053d8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810053df:	8b 45 0c             	mov    0xc(%ebp),%eax
810053e2:	8b 00                	mov    (%eax),%eax
810053e4:	83 e0 01             	and    $0x1,%eax
810053e7:	85 c0                	test   %eax,%eax
810053e9:	74 0f                	je     810053fa <_printf_i+0x1f9>
810053eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810053ee:	8b 00                	mov    (%eax),%eax
810053f0:	83 c8 20             	or     $0x20,%eax
810053f3:	89 c2                	mov    %eax,%edx
810053f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810053f8:	89 10                	mov    %edx,(%eax)
810053fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810053fe:	75 11                	jne    81005411 <_printf_i+0x210>
81005400:	8b 45 0c             	mov    0xc(%ebp),%eax
81005403:	8b 00                	mov    (%eax),%eax
81005405:	83 e0 df             	and    $0xffffffdf,%eax
81005408:	89 c2                	mov    %eax,%edx
8100540a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100540d:	89 10                	mov    %edx,(%eax)
8100540f:	eb 01                	jmp    81005412 <_printf_i+0x211>
81005411:	90                   	nop
81005412:	8b 45 0c             	mov    0xc(%ebp),%eax
81005415:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005419:	8b 45 0c             	mov    0xc(%ebp),%eax
8100541c:	8b 50 04             	mov    0x4(%eax),%edx
8100541f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005422:	89 50 08             	mov    %edx,0x8(%eax)
81005425:	8b 45 0c             	mov    0xc(%ebp),%eax
81005428:	8b 40 08             	mov    0x8(%eax),%eax
8100542b:	85 c0                	test   %eax,%eax
8100542d:	78 0f                	js     8100543e <_printf_i+0x23d>
8100542f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005432:	8b 00                	mov    (%eax),%eax
81005434:	83 e0 fb             	and    $0xfffffffb,%eax
81005437:	89 c2                	mov    %eax,%edx
81005439:	8b 45 0c             	mov    0xc(%ebp),%eax
8100543c:	89 10                	mov    %edx,(%eax)
8100543e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005442:	75 0a                	jne    8100544e <_printf_i+0x24d>
81005444:	8b 45 0c             	mov    0xc(%ebp),%eax
81005447:	8b 40 04             	mov    0x4(%eax),%eax
8100544a:	85 c0                	test   %eax,%eax
8100544c:	74 34                	je     81005482 <_printf_i+0x281>
8100544e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81005451:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005454:	ba 00 00 00 00       	mov    $0x0,%edx
81005459:	f7 f1                	div    %ecx
8100545b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100545e:	01 d0                	add    %edx,%eax
81005460:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81005464:	0f b6 10             	movzbl (%eax),%edx
81005467:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100546a:	88 10                	mov    %dl,(%eax)
8100546c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100546f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005472:	ba 00 00 00 00       	mov    $0x0,%edx
81005477:	f7 f3                	div    %ebx
81005479:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100547c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005480:	75 cc                	jne    8100544e <_printf_i+0x24d>
81005482:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81005486:	75 26                	jne    810054ae <_printf_i+0x2ad>
81005488:	8b 45 0c             	mov    0xc(%ebp),%eax
8100548b:	8b 00                	mov    (%eax),%eax
8100548d:	83 e0 01             	and    $0x1,%eax
81005490:	85 c0                	test   %eax,%eax
81005492:	74 1a                	je     810054ae <_printf_i+0x2ad>
81005494:	8b 45 0c             	mov    0xc(%ebp),%eax
81005497:	8b 50 04             	mov    0x4(%eax),%edx
8100549a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100549d:	8b 40 10             	mov    0x10(%eax),%eax
810054a0:	39 c2                	cmp    %eax,%edx
810054a2:	7f 0a                	jg     810054ae <_printf_i+0x2ad>
810054a4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810054a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810054ab:	c6 00 30             	movb   $0x30,(%eax)
810054ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810054b1:	83 c0 1b             	add    $0x1b,%eax
810054b4:	83 c0 28             	add    $0x28,%eax
810054b7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810054ba:	89 c2                	mov    %eax,%edx
810054bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810054bf:	89 50 10             	mov    %edx,0x10(%eax)
810054c2:	e9 e2 00 00 00       	jmp    810055a9 <_printf_i+0x3a8>
810054c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810054ca:	8b 00                	mov    (%eax),%eax
810054cc:	25 80 00 00 00       	and    $0x80,%eax
810054d1:	85 c0                	test   %eax,%eax
810054d3:	74 19                	je     810054ee <_printf_i+0x2ed>
810054d5:	8b 45 18             	mov    0x18(%ebp),%eax
810054d8:	8b 00                	mov    (%eax),%eax
810054da:	8d 48 04             	lea    0x4(%eax),%ecx
810054dd:	8b 55 18             	mov    0x18(%ebp),%edx
810054e0:	89 0a                	mov    %ecx,(%edx)
810054e2:	8b 00                	mov    (%eax),%eax
810054e4:	8b 55 0c             	mov    0xc(%ebp),%edx
810054e7:	8b 52 14             	mov    0x14(%edx),%edx
810054ea:	89 10                	mov    %edx,(%eax)
810054ec:	eb 3f                	jmp    8100552d <_printf_i+0x32c>
810054ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810054f1:	8b 00                	mov    (%eax),%eax
810054f3:	83 e0 40             	and    $0x40,%eax
810054f6:	85 c0                	test   %eax,%eax
810054f8:	74 1c                	je     81005516 <_printf_i+0x315>
810054fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810054fd:	8b 58 14             	mov    0x14(%eax),%ebx
81005500:	8b 45 18             	mov    0x18(%ebp),%eax
81005503:	8b 00                	mov    (%eax),%eax
81005505:	8d 48 04             	lea    0x4(%eax),%ecx
81005508:	8b 55 18             	mov    0x18(%ebp),%edx
8100550b:	89 0a                	mov    %ecx,(%edx)
8100550d:	8b 00                	mov    (%eax),%eax
8100550f:	89 da                	mov    %ebx,%edx
81005511:	66 89 10             	mov    %dx,(%eax)
81005514:	eb 17                	jmp    8100552d <_printf_i+0x32c>
81005516:	8b 45 18             	mov    0x18(%ebp),%eax
81005519:	8b 00                	mov    (%eax),%eax
8100551b:	8d 48 04             	lea    0x4(%eax),%ecx
8100551e:	8b 55 18             	mov    0x18(%ebp),%edx
81005521:	89 0a                	mov    %ecx,(%edx)
81005523:	8b 00                	mov    (%eax),%eax
81005525:	8b 55 0c             	mov    0xc(%ebp),%edx
81005528:	8b 52 14             	mov    0x14(%edx),%edx
8100552b:	89 10                	mov    %edx,(%eax)
8100552d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005530:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81005537:	eb 70                	jmp    810055a9 <_printf_i+0x3a8>
81005539:	8b 45 18             	mov    0x18(%ebp),%eax
8100553c:	8b 00                	mov    (%eax),%eax
8100553e:	8d 48 04             	lea    0x4(%eax),%ecx
81005541:	8b 55 18             	mov    0x18(%ebp),%edx
81005544:	89 0a                	mov    %ecx,(%edx)
81005546:	8b 00                	mov    (%eax),%eax
81005548:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100554b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100554e:	8b 40 04             	mov    0x4(%eax),%eax
81005551:	83 ec 04             	sub    $0x4,%esp
81005554:	50                   	push   %eax
81005555:	6a 00                	push   $0x0
81005557:	ff 75 ec             	pushl  -0x14(%ebp)
8100555a:	e8 51 f3 ff ff       	call   810048b0 <memchr>
8100555f:	83 c4 10             	add    $0x10,%esp
81005562:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005565:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005569:	74 0e                	je     81005579 <_printf_i+0x378>
8100556b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100556e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005571:	89 c2                	mov    %eax,%edx
81005573:	8b 45 0c             	mov    0xc(%ebp),%eax
81005576:	89 50 04             	mov    %edx,0x4(%eax)
81005579:	8b 45 0c             	mov    0xc(%ebp),%eax
8100557c:	8b 50 04             	mov    0x4(%eax),%edx
8100557f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005582:	89 50 10             	mov    %edx,0x10(%eax)
81005585:	eb 1a                	jmp    810055a1 <_printf_i+0x3a0>
81005587:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100558b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100558e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81005592:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005595:	88 10                	mov    %dl,(%eax)
81005597:	8b 45 0c             	mov    0xc(%ebp),%eax
8100559a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810055a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810055a4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810055a8:	90                   	nop
810055a9:	83 ec 0c             	sub    $0xc,%esp
810055ac:	ff 75 14             	pushl  0x14(%ebp)
810055af:	ff 75 10             	pushl  0x10(%ebp)
810055b2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810055b5:	50                   	push   %eax
810055b6:	ff 75 0c             	pushl  0xc(%ebp)
810055b9:	ff 75 08             	pushl  0x8(%ebp)
810055bc:	e8 a5 fa ff ff       	call   81005066 <_printf_common>
810055c1:	83 c4 20             	add    $0x20,%esp
810055c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810055c7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810055cb:	74 72                	je     8100563f <_printf_i+0x43e>
810055cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810055d0:	8b 40 10             	mov    0x10(%eax),%eax
810055d3:	50                   	push   %eax
810055d4:	ff 75 ec             	pushl  -0x14(%ebp)
810055d7:	ff 75 10             	pushl  0x10(%ebp)
810055da:	ff 75 08             	pushl  0x8(%ebp)
810055dd:	8b 45 14             	mov    0x14(%ebp),%eax
810055e0:	ff d0                	call   *%eax
810055e2:	83 c4 10             	add    $0x10,%esp
810055e5:	83 f8 ff             	cmp    $0xffffffff,%eax
810055e8:	74 58                	je     81005642 <_printf_i+0x441>
810055ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ed:	8b 00                	mov    (%eax),%eax
810055ef:	83 e0 02             	and    $0x2,%eax
810055f2:	85 c0                	test   %eax,%eax
810055f4:	74 39                	je     8100562f <_printf_i+0x42e>
810055f6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810055fd:	eb 20                	jmp    8100561f <_printf_i+0x41e>
810055ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81005602:	83 c0 19             	add    $0x19,%eax
81005605:	6a 01                	push   $0x1
81005607:	50                   	push   %eax
81005608:	ff 75 10             	pushl  0x10(%ebp)
8100560b:	ff 75 08             	pushl  0x8(%ebp)
8100560e:	8b 45 14             	mov    0x14(%ebp),%eax
81005611:	ff d0                	call   *%eax
81005613:	83 c4 10             	add    $0x10,%esp
81005616:	83 f8 ff             	cmp    $0xffffffff,%eax
81005619:	74 2a                	je     81005645 <_printf_i+0x444>
8100561b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100561f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005622:	8b 40 0c             	mov    0xc(%eax),%eax
81005625:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005628:	29 d0                	sub    %edx,%eax
8100562a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100562d:	7c d0                	jl     810055ff <_printf_i+0x3fe>
8100562f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005632:	8b 50 0c             	mov    0xc(%eax),%edx
81005635:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005638:	39 c2                	cmp    %eax,%edx
8100563a:	0f 4d c2             	cmovge %edx,%eax
8100563d:	eb 0c                	jmp    8100564b <_printf_i+0x44a>
8100563f:	90                   	nop
81005640:	eb 04                	jmp    81005646 <_printf_i+0x445>
81005642:	90                   	nop
81005643:	eb 01                	jmp    81005646 <_printf_i+0x445>
81005645:	90                   	nop
81005646:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100564b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100564e:	c9                   	leave  
8100564f:	c3                   	ret    

81005650 <_open_r>:
81005650:	55                   	push   %ebp
81005651:	89 e5                	mov    %esp,%ebp
81005653:	83 ec 18             	sub    $0x18,%esp
81005656:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
8100565d:	00 00 00 
81005660:	83 ec 04             	sub    $0x4,%esp
81005663:	ff 75 14             	pushl  0x14(%ebp)
81005666:	ff 75 10             	pushl  0x10(%ebp)
81005669:	ff 75 0c             	pushl  0xc(%ebp)
8100566c:	e8 cf b4 ff ff       	call   81000b40 <open>
81005671:	83 c4 10             	add    $0x10,%esp
81005674:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005677:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100567b:	75 14                	jne    81005691 <_open_r+0x41>
8100567d:	a1 cc 99 00 81       	mov    0x810099cc,%eax
81005682:	85 c0                	test   %eax,%eax
81005684:	74 0b                	je     81005691 <_open_r+0x41>
81005686:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
8100568c:	8b 45 08             	mov    0x8(%ebp),%eax
8100568f:	89 10                	mov    %edx,(%eax)
81005691:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005694:	c9                   	leave  
81005695:	c3                   	ret    

81005696 <_iprintf_r>:
81005696:	55                   	push   %ebp
81005697:	89 e5                	mov    %esp,%ebp
81005699:	83 ec 18             	sub    $0x18,%esp
8100569c:	8d 45 10             	lea    0x10(%ebp),%eax
8100569f:	89 45 f0             	mov    %eax,-0x10(%ebp)
810056a2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810056a5:	8b 45 08             	mov    0x8(%ebp),%eax
810056a8:	8b 40 08             	mov    0x8(%eax),%eax
810056ab:	52                   	push   %edx
810056ac:	ff 75 0c             	pushl  0xc(%ebp)
810056af:	50                   	push   %eax
810056b0:	ff 75 08             	pushl  0x8(%ebp)
810056b3:	e8 58 f6 ff ff       	call   81004d10 <_vfiprintf_r>
810056b8:	83 c4 10             	add    $0x10,%esp
810056bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810056be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810056c1:	c9                   	leave  
810056c2:	c3                   	ret    

810056c3 <iprintf>:
810056c3:	55                   	push   %ebp
810056c4:	89 e5                	mov    %esp,%ebp
810056c6:	83 ec 18             	sub    $0x18,%esp
810056c9:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810056ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
810056d1:	8d 45 0c             	lea    0xc(%ebp),%eax
810056d4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810056d7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810056da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810056dd:	8b 40 08             	mov    0x8(%eax),%eax
810056e0:	52                   	push   %edx
810056e1:	ff 75 08             	pushl  0x8(%ebp)
810056e4:	50                   	push   %eax
810056e5:	ff 75 f4             	pushl  -0xc(%ebp)
810056e8:	e8 23 f6 ff ff       	call   81004d10 <_vfiprintf_r>
810056ed:	83 c4 10             	add    $0x10,%esp
810056f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810056f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810056f6:	c9                   	leave  
810056f7:	c3                   	ret    

810056f8 <_puts_r>:
810056f8:	55                   	push   %ebp
810056f9:	89 e5                	mov    %esp,%ebp
810056fb:	83 ec 38             	sub    $0x38,%esp
810056fe:	83 ec 0c             	sub    $0xc,%esp
81005701:	ff 75 0c             	pushl  0xc(%ebp)
81005704:	e8 c7 13 00 00       	call   81006ad0 <strlen>
81005709:	83 c4 10             	add    $0x10,%esp
8100570c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100570f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005712:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005715:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005718:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100571b:	c7 45 d4 94 87 00 81 	movl   $0x81008794,-0x2c(%ebp)
81005722:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005729:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100572c:	83 c0 01             	add    $0x1,%eax
8100572f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005732:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005735:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005738:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100573f:	8b 45 08             	mov    0x8(%ebp),%eax
81005742:	8b 40 08             	mov    0x8(%eax),%eax
81005745:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005748:	8b 45 08             	mov    0x8(%ebp),%eax
8100574b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100574e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005752:	74 18                	je     8100576c <_puts_r+0x74>
81005754:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005757:	8b 40 38             	mov    0x38(%eax),%eax
8100575a:	85 c0                	test   %eax,%eax
8100575c:	75 0e                	jne    8100576c <_puts_r+0x74>
8100575e:	83 ec 0c             	sub    $0xc,%esp
81005761:	ff 75 ec             	pushl  -0x14(%ebp)
81005764:	e8 5a c0 ff ff       	call   810017c3 <__sinit>
81005769:	83 c4 10             	add    $0x10,%esp
8100576c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100576f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005773:	98                   	cwtl   
81005774:	25 00 20 00 00       	and    $0x2000,%eax
81005779:	85 c0                	test   %eax,%eax
8100577b:	75 24                	jne    810057a1 <_puts_r+0xa9>
8100577d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005780:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005784:	80 cc 20             	or     $0x20,%ah
81005787:	89 c2                	mov    %eax,%edx
81005789:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100578c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005790:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005793:	8b 40 64             	mov    0x64(%eax),%eax
81005796:	80 e4 df             	and    $0xdf,%ah
81005799:	89 c2                	mov    %eax,%edx
8100579b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100579e:	89 50 64             	mov    %edx,0x64(%eax)
810057a1:	83 ec 04             	sub    $0x4,%esp
810057a4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810057a7:	50                   	push   %eax
810057a8:	ff 75 f0             	pushl  -0x10(%ebp)
810057ab:	ff 75 08             	pushl  0x8(%ebp)
810057ae:	e8 52 d0 ff ff       	call   81002805 <__sfvwrite_r>
810057b3:	83 c4 10             	add    $0x10,%esp
810057b6:	85 c0                	test   %eax,%eax
810057b8:	74 07                	je     810057c1 <_puts_r+0xc9>
810057ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810057bf:	eb 05                	jmp    810057c6 <_puts_r+0xce>
810057c1:	b8 0a 00 00 00       	mov    $0xa,%eax
810057c6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810057c9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810057cc:	c9                   	leave  
810057cd:	c3                   	ret    

810057ce <puts>:
810057ce:	55                   	push   %ebp
810057cf:	89 e5                	mov    %esp,%ebp
810057d1:	83 ec 08             	sub    $0x8,%esp
810057d4:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810057d9:	83 ec 08             	sub    $0x8,%esp
810057dc:	ff 75 08             	pushl  0x8(%ebp)
810057df:	50                   	push   %eax
810057e0:	e8 13 ff ff ff       	call   810056f8 <_puts_r>
810057e5:	83 c4 10             	add    $0x10,%esp
810057e8:	c9                   	leave  
810057e9:	c3                   	ret    

810057ea <_realloc_r>:
810057ea:	55                   	push   %ebp
810057eb:	89 e5                	mov    %esp,%ebp
810057ed:	83 ec 78             	sub    $0x78,%esp
810057f0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810057f4:	75 16                	jne    8100580c <_realloc_r+0x22>
810057f6:	83 ec 08             	sub    $0x8,%esp
810057f9:	ff 75 10             	pushl  0x10(%ebp)
810057fc:	ff 75 08             	pushl  0x8(%ebp)
810057ff:	e8 89 e8 ff ff       	call   8100408d <_malloc_r>
81005804:	83 c4 10             	add    $0x10,%esp
81005807:	e9 b6 08 00 00       	jmp    810060c2 <_realloc_r+0x8d8>
8100580c:	83 ec 0c             	sub    $0xc,%esp
8100580f:	ff 75 08             	pushl  0x8(%ebp)
81005812:	e8 de f2 ff ff       	call   81004af5 <__malloc_lock>
81005817:	83 c4 10             	add    $0x10,%esp
8100581a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100581d:	83 e8 08             	sub    $0x8,%eax
81005820:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005823:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005826:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005829:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100582c:	8b 40 04             	mov    0x4(%eax),%eax
8100582f:	83 e0 fc             	and    $0xfffffffc,%eax
81005832:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005835:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005838:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100583b:	8b 45 10             	mov    0x10(%ebp),%eax
8100583e:	83 c0 0b             	add    $0xb,%eax
81005841:	83 f8 16             	cmp    $0x16,%eax
81005844:	76 0b                	jbe    81005851 <_realloc_r+0x67>
81005846:	8b 45 10             	mov    0x10(%ebp),%eax
81005849:	83 c0 0b             	add    $0xb,%eax
8100584c:	83 e0 f8             	and    $0xfffffff8,%eax
8100584f:	eb 05                	jmp    81005856 <_realloc_r+0x6c>
81005851:	b8 10 00 00 00       	mov    $0x10,%eax
81005856:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005859:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100585c:	85 c0                	test   %eax,%eax
8100585e:	78 08                	js     81005868 <_realloc_r+0x7e>
81005860:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005863:	3b 45 10             	cmp    0x10(%ebp),%eax
81005866:	73 13                	jae    8100587b <_realloc_r+0x91>
81005868:	8b 45 08             	mov    0x8(%ebp),%eax
8100586b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005871:	b8 00 00 00 00       	mov    $0x0,%eax
81005876:	e9 47 08 00 00       	jmp    810060c2 <_realloc_r+0x8d8>
8100587b:	8b 55 c0             	mov    -0x40(%ebp),%edx
8100587e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005881:	39 c2                	cmp    %eax,%edx
81005883:	0f 8d 8b 07 00 00    	jge    81006014 <_realloc_r+0x82a>
81005889:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100588c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100588f:	01 d0                	add    %edx,%eax
81005891:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005894:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81005899:	8b 40 08             	mov    0x8(%eax),%eax
8100589c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100589f:	74 1e                	je     810058bf <_realloc_r+0xd5>
810058a1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810058a4:	8b 40 04             	mov    0x4(%eax),%eax
810058a7:	83 e0 fe             	and    $0xfffffffe,%eax
810058aa:	89 c2                	mov    %eax,%edx
810058ac:	8b 45 ec             	mov    -0x14(%ebp),%eax
810058af:	01 d0                	add    %edx,%eax
810058b1:	8b 40 04             	mov    0x4(%eax),%eax
810058b4:	83 e0 01             	and    $0x1,%eax
810058b7:	85 c0                	test   %eax,%eax
810058b9:	0f 85 ca 00 00 00    	jne    81005989 <_realloc_r+0x19f>
810058bf:	8b 45 ec             	mov    -0x14(%ebp),%eax
810058c2:	8b 40 04             	mov    0x4(%eax),%eax
810058c5:	83 e0 fc             	and    $0xfffffffc,%eax
810058c8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810058cb:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810058d0:	8b 40 08             	mov    0x8(%eax),%eax
810058d3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810058d6:	75 71                	jne    81005949 <_realloc_r+0x15f>
810058d8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810058db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058de:	01 d0                	add    %edx,%eax
810058e0:	89 c2                	mov    %eax,%edx
810058e2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810058e5:	83 c0 10             	add    $0x10,%eax
810058e8:	39 c2                	cmp    %eax,%edx
810058ea:	0f 8c a9 00 00 00    	jl     81005999 <_realloc_r+0x1af>
810058f0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810058f3:	01 45 f0             	add    %eax,-0x10(%ebp)
810058f6:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
810058fb:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
810058fe:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005901:	01 c8                	add    %ecx,%eax
81005903:	89 42 08             	mov    %eax,0x8(%edx)
81005906:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005909:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100590c:	89 c2                	mov    %eax,%edx
8100590e:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81005913:	8b 40 08             	mov    0x8(%eax),%eax
81005916:	83 ca 01             	or     $0x1,%edx
81005919:	89 50 04             	mov    %edx,0x4(%eax)
8100591c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100591f:	8b 40 04             	mov    0x4(%eax),%eax
81005922:	83 e0 01             	and    $0x1,%eax
81005925:	0b 45 bc             	or     -0x44(%ebp),%eax
81005928:	89 c2                	mov    %eax,%edx
8100592a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100592d:	89 50 04             	mov    %edx,0x4(%eax)
81005930:	83 ec 0c             	sub    $0xc,%esp
81005933:	ff 75 08             	pushl  0x8(%ebp)
81005936:	e8 c0 f1 ff ff       	call   81004afb <__malloc_unlock>
8100593b:	83 c4 10             	add    $0x10,%esp
8100593e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005941:	83 c0 08             	add    $0x8,%eax
81005944:	e9 79 07 00 00       	jmp    810060c2 <_realloc_r+0x8d8>
81005949:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100594c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100594f:	01 d0                	add    %edx,%eax
81005951:	89 c2                	mov    %eax,%edx
81005953:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005956:	39 c2                	cmp    %eax,%edx
81005958:	7c 3f                	jl     81005999 <_realloc_r+0x1af>
8100595a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100595d:	8b 40 0c             	mov    0xc(%eax),%eax
81005960:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005963:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005966:	8b 40 08             	mov    0x8(%eax),%eax
81005969:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100596c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100596f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005972:	89 50 0c             	mov    %edx,0xc(%eax)
81005975:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005978:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100597b:	89 50 08             	mov    %edx,0x8(%eax)
8100597e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005981:	01 45 f0             	add    %eax,-0x10(%ebp)
81005984:	e9 8c 06 00 00       	jmp    81006015 <_realloc_r+0x82b>
81005989:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005990:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005997:	eb 01                	jmp    8100599a <_realloc_r+0x1b0>
81005999:	90                   	nop
8100599a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100599d:	8b 40 04             	mov    0x4(%eax),%eax
810059a0:	83 e0 01             	and    $0x1,%eax
810059a3:	85 c0                	test   %eax,%eax
810059a5:	0f 85 d6 04 00 00    	jne    81005e81 <_realloc_r+0x697>
810059ab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810059ae:	8b 00                	mov    (%eax),%eax
810059b0:	f7 d8                	neg    %eax
810059b2:	89 c2                	mov    %eax,%edx
810059b4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810059b7:	01 d0                	add    %edx,%eax
810059b9:	89 45 b0             	mov    %eax,-0x50(%ebp)
810059bc:	8b 45 b0             	mov    -0x50(%ebp),%eax
810059bf:	8b 40 04             	mov    0x4(%eax),%eax
810059c2:	83 e0 fc             	and    $0xfffffffc,%eax
810059c5:	89 45 ac             	mov    %eax,-0x54(%ebp)
810059c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810059cc:	0f 84 4a 03 00 00    	je     81005d1c <_realloc_r+0x532>
810059d2:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
810059d7:	8b 40 08             	mov    0x8(%eax),%eax
810059da:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059dd:	0f 85 b0 01 00 00    	jne    81005b93 <_realloc_r+0x3a9>
810059e3:	8b 55 e8             	mov    -0x18(%ebp),%edx
810059e6:	8b 45 ac             	mov    -0x54(%ebp),%eax
810059e9:	01 c2                	add    %eax,%edx
810059eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059ee:	01 d0                	add    %edx,%eax
810059f0:	89 c2                	mov    %eax,%edx
810059f2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059f5:	83 c0 10             	add    $0x10,%eax
810059f8:	39 c2                	cmp    %eax,%edx
810059fa:	0f 8c 1c 03 00 00    	jl     81005d1c <_realloc_r+0x532>
81005a00:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005a03:	8b 40 0c             	mov    0xc(%eax),%eax
81005a06:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005a09:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005a0c:	8b 40 08             	mov    0x8(%eax),%eax
81005a0f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005a12:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005a15:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005a18:	89 50 0c             	mov    %edx,0xc(%eax)
81005a1b:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005a1e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005a21:	89 50 08             	mov    %edx,0x8(%eax)
81005a24:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005a27:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005a2a:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005a2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a30:	01 d0                	add    %edx,%eax
81005a32:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a38:	83 c0 08             	add    $0x8,%eax
81005a3b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005a3e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005a41:	83 e8 04             	sub    $0x4,%eax
81005a44:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005a47:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005a4b:	0f 87 de 00 00 00    	ja     81005b2f <_realloc_r+0x345>
81005a51:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a54:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005a57:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005a5a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005a5d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005a61:	0f 86 90 00 00 00    	jbe    81005af7 <_realloc_r+0x30d>
81005a67:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005a6a:	8d 42 04             	lea    0x4(%edx),%eax
81005a6d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005a70:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005a73:	8d 48 04             	lea    0x4(%eax),%ecx
81005a76:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005a79:	8b 12                	mov    (%edx),%edx
81005a7b:	89 10                	mov    %edx,(%eax)
81005a7d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005a80:	8d 42 04             	lea    0x4(%edx),%eax
81005a83:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005a86:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005a89:	8d 48 04             	lea    0x4(%eax),%ecx
81005a8c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005a8f:	8b 12                	mov    (%edx),%edx
81005a91:	89 10                	mov    %edx,(%eax)
81005a93:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005a97:	76 5e                	jbe    81005af7 <_realloc_r+0x30d>
81005a99:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005a9c:	8d 42 04             	lea    0x4(%edx),%eax
81005a9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005aa2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005aa5:	8d 48 04             	lea    0x4(%eax),%ecx
81005aa8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005aab:	8b 12                	mov    (%edx),%edx
81005aad:	89 10                	mov    %edx,(%eax)
81005aaf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ab2:	8d 42 04             	lea    0x4(%edx),%eax
81005ab5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ab8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005abb:	8d 48 04             	lea    0x4(%eax),%ecx
81005abe:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ac1:	8b 12                	mov    (%edx),%edx
81005ac3:	89 10                	mov    %edx,(%eax)
81005ac5:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005ac9:	76 2c                	jbe    81005af7 <_realloc_r+0x30d>
81005acb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ace:	8d 42 04             	lea    0x4(%edx),%eax
81005ad1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ad4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ad7:	8d 48 04             	lea    0x4(%eax),%ecx
81005ada:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005add:	8b 12                	mov    (%edx),%edx
81005adf:	89 10                	mov    %edx,(%eax)
81005ae1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ae4:	8d 42 04             	lea    0x4(%edx),%eax
81005ae7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005aea:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005aed:	8d 48 04             	lea    0x4(%eax),%ecx
81005af0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005af3:	8b 12                	mov    (%edx),%edx
81005af5:	89 10                	mov    %edx,(%eax)
81005af7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005afa:	8d 42 04             	lea    0x4(%edx),%eax
81005afd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b00:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b03:	8d 48 04             	lea    0x4(%eax),%ecx
81005b06:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b09:	8b 12                	mov    (%edx),%edx
81005b0b:	89 10                	mov    %edx,(%eax)
81005b0d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b10:	8d 42 04             	lea    0x4(%edx),%eax
81005b13:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b16:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b19:	8d 48 04             	lea    0x4(%eax),%ecx
81005b1c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b1f:	8b 12                	mov    (%edx),%edx
81005b21:	89 10                	mov    %edx,(%eax)
81005b23:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005b26:	8b 10                	mov    (%eax),%edx
81005b28:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b2b:	89 10                	mov    %edx,(%eax)
81005b2d:	eb 14                	jmp    81005b43 <_realloc_r+0x359>
81005b2f:	83 ec 04             	sub    $0x4,%esp
81005b32:	ff 75 a0             	pushl  -0x60(%ebp)
81005b35:	ff 75 0c             	pushl  0xc(%ebp)
81005b38:	ff 75 a8             	pushl  -0x58(%ebp)
81005b3b:	e8 a0 ee ff ff       	call   810049e0 <memmove>
81005b40:	83 c4 10             	add    $0x10,%esp
81005b43:	ba a0 8e 00 81       	mov    $0x81008ea0,%edx
81005b48:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005b4b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b4e:	01 c8                	add    %ecx,%eax
81005b50:	89 42 08             	mov    %eax,0x8(%edx)
81005b53:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b56:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005b59:	89 c2                	mov    %eax,%edx
81005b5b:	b8 a0 8e 00 81       	mov    $0x81008ea0,%eax
81005b60:	8b 40 08             	mov    0x8(%eax),%eax
81005b63:	83 ca 01             	or     $0x1,%edx
81005b66:	89 50 04             	mov    %edx,0x4(%eax)
81005b69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b6c:	8b 40 04             	mov    0x4(%eax),%eax
81005b6f:	83 e0 01             	and    $0x1,%eax
81005b72:	0b 45 bc             	or     -0x44(%ebp),%eax
81005b75:	89 c2                	mov    %eax,%edx
81005b77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b7a:	89 50 04             	mov    %edx,0x4(%eax)
81005b7d:	83 ec 0c             	sub    $0xc,%esp
81005b80:	ff 75 08             	pushl  0x8(%ebp)
81005b83:	e8 73 ef ff ff       	call   81004afb <__malloc_unlock>
81005b88:	83 c4 10             	add    $0x10,%esp
81005b8b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005b8e:	e9 2f 05 00 00       	jmp    810060c2 <_realloc_r+0x8d8>
81005b93:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005b96:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005b99:	01 c2                	add    %eax,%edx
81005b9b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b9e:	01 d0                	add    %edx,%eax
81005ba0:	89 c2                	mov    %eax,%edx
81005ba2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ba5:	39 c2                	cmp    %eax,%edx
81005ba7:	0f 8c 6f 01 00 00    	jl     81005d1c <_realloc_r+0x532>
81005bad:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005bb0:	8b 40 0c             	mov    0xc(%eax),%eax
81005bb3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005bb6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005bb9:	8b 40 08             	mov    0x8(%eax),%eax
81005bbc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005bbf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005bc2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005bc5:	89 50 0c             	mov    %edx,0xc(%eax)
81005bc8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005bcb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005bce:	89 50 08             	mov    %edx,0x8(%eax)
81005bd1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005bd4:	8b 40 0c             	mov    0xc(%eax),%eax
81005bd7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005bda:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005bdd:	8b 40 08             	mov    0x8(%eax),%eax
81005be0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005be3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005be6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005be9:	89 50 0c             	mov    %edx,0xc(%eax)
81005bec:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005bef:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005bf2:	89 50 08             	mov    %edx,0x8(%eax)
81005bf5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005bf8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005bfb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005bfe:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005c01:	01 d0                	add    %edx,%eax
81005c03:	01 45 f0             	add    %eax,-0x10(%ebp)
81005c06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c09:	83 c0 08             	add    $0x8,%eax
81005c0c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005c0f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005c12:	83 e8 04             	sub    $0x4,%eax
81005c15:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005c18:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005c1c:	0f 87 e1 00 00 00    	ja     81005d03 <_realloc_r+0x519>
81005c22:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c25:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005c28:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005c2b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005c2e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005c32:	0f 86 90 00 00 00    	jbe    81005cc8 <_realloc_r+0x4de>
81005c38:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005c3b:	8d 42 04             	lea    0x4(%edx),%eax
81005c3e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005c41:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005c44:	8d 48 04             	lea    0x4(%eax),%ecx
81005c47:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005c4a:	8b 12                	mov    (%edx),%edx
81005c4c:	89 10                	mov    %edx,(%eax)
81005c4e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005c51:	8d 42 04             	lea    0x4(%edx),%eax
81005c54:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005c57:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005c5a:	8d 48 04             	lea    0x4(%eax),%ecx
81005c5d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005c60:	8b 12                	mov    (%edx),%edx
81005c62:	89 10                	mov    %edx,(%eax)
81005c64:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005c68:	76 5e                	jbe    81005cc8 <_realloc_r+0x4de>
81005c6a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005c6d:	8d 42 04             	lea    0x4(%edx),%eax
81005c70:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005c73:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005c76:	8d 48 04             	lea    0x4(%eax),%ecx
81005c79:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005c7c:	8b 12                	mov    (%edx),%edx
81005c7e:	89 10                	mov    %edx,(%eax)
81005c80:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005c83:	8d 42 04             	lea    0x4(%edx),%eax
81005c86:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005c89:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005c8c:	8d 48 04             	lea    0x4(%eax),%ecx
81005c8f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005c92:	8b 12                	mov    (%edx),%edx
81005c94:	89 10                	mov    %edx,(%eax)
81005c96:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005c9a:	76 2c                	jbe    81005cc8 <_realloc_r+0x4de>
81005c9c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005c9f:	8d 42 04             	lea    0x4(%edx),%eax
81005ca2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005ca5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005ca8:	8d 48 04             	lea    0x4(%eax),%ecx
81005cab:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005cae:	8b 12                	mov    (%edx),%edx
81005cb0:	89 10                	mov    %edx,(%eax)
81005cb2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005cb5:	8d 42 04             	lea    0x4(%edx),%eax
81005cb8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005cbb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005cbe:	8d 48 04             	lea    0x4(%eax),%ecx
81005cc1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005cc4:	8b 12                	mov    (%edx),%edx
81005cc6:	89 10                	mov    %edx,(%eax)
81005cc8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005ccb:	8d 42 04             	lea    0x4(%edx),%eax
81005cce:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005cd1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005cd4:	8d 48 04             	lea    0x4(%eax),%ecx
81005cd7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005cda:	8b 12                	mov    (%edx),%edx
81005cdc:	89 10                	mov    %edx,(%eax)
81005cde:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005ce1:	8d 42 04             	lea    0x4(%edx),%eax
81005ce4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005ce7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005cea:	8d 48 04             	lea    0x4(%eax),%ecx
81005ced:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005cf0:	8b 12                	mov    (%edx),%edx
81005cf2:	89 10                	mov    %edx,(%eax)
81005cf4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005cf7:	8b 10                	mov    (%eax),%edx
81005cf9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005cfc:	89 10                	mov    %edx,(%eax)
81005cfe:	e9 12 03 00 00       	jmp    81006015 <_realloc_r+0x82b>
81005d03:	83 ec 04             	sub    $0x4,%esp
81005d06:	ff 75 a4             	pushl  -0x5c(%ebp)
81005d09:	ff 75 0c             	pushl  0xc(%ebp)
81005d0c:	ff 75 a8             	pushl  -0x58(%ebp)
81005d0f:	e8 cc ec ff ff       	call   810049e0 <memmove>
81005d14:	83 c4 10             	add    $0x10,%esp
81005d17:	e9 f9 02 00 00       	jmp    81006015 <_realloc_r+0x82b>
81005d1c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005d20:	0f 84 5b 01 00 00    	je     81005e81 <_realloc_r+0x697>
81005d26:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005d29:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d2c:	01 d0                	add    %edx,%eax
81005d2e:	89 c2                	mov    %eax,%edx
81005d30:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d33:	39 c2                	cmp    %eax,%edx
81005d35:	0f 8c 46 01 00 00    	jl     81005e81 <_realloc_r+0x697>
81005d3b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d3e:	8b 40 0c             	mov    0xc(%eax),%eax
81005d41:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d44:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d47:	8b 40 08             	mov    0x8(%eax),%eax
81005d4a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d4d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d50:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d53:	89 50 0c             	mov    %edx,0xc(%eax)
81005d56:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d59:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d5c:	89 50 08             	mov    %edx,0x8(%eax)
81005d5f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d65:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d68:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d6e:	83 c0 08             	add    $0x8,%eax
81005d71:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d74:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d77:	83 e8 04             	sub    $0x4,%eax
81005d7a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005d7d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005d81:	0f 87 e1 00 00 00    	ja     81005e68 <_realloc_r+0x67e>
81005d87:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d8a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005d8d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d90:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005d93:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005d97:	0f 86 90 00 00 00    	jbe    81005e2d <_realloc_r+0x643>
81005d9d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005da0:	8d 42 04             	lea    0x4(%edx),%eax
81005da3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005da6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005da9:	8d 48 04             	lea    0x4(%eax),%ecx
81005dac:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005daf:	8b 12                	mov    (%edx),%edx
81005db1:	89 10                	mov    %edx,(%eax)
81005db3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005db6:	8d 42 04             	lea    0x4(%edx),%eax
81005db9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005dbc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005dbf:	8d 48 04             	lea    0x4(%eax),%ecx
81005dc2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005dc5:	8b 12                	mov    (%edx),%edx
81005dc7:	89 10                	mov    %edx,(%eax)
81005dc9:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005dcd:	76 5e                	jbe    81005e2d <_realloc_r+0x643>
81005dcf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005dd2:	8d 42 04             	lea    0x4(%edx),%eax
81005dd5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005dd8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ddb:	8d 48 04             	lea    0x4(%eax),%ecx
81005dde:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005de1:	8b 12                	mov    (%edx),%edx
81005de3:	89 10                	mov    %edx,(%eax)
81005de5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005de8:	8d 42 04             	lea    0x4(%edx),%eax
81005deb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005dee:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005df1:	8d 48 04             	lea    0x4(%eax),%ecx
81005df4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005df7:	8b 12                	mov    (%edx),%edx
81005df9:	89 10                	mov    %edx,(%eax)
81005dfb:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005dff:	76 2c                	jbe    81005e2d <_realloc_r+0x643>
81005e01:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005e04:	8d 42 04             	lea    0x4(%edx),%eax
81005e07:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e0a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e0d:	8d 48 04             	lea    0x4(%eax),%ecx
81005e10:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005e13:	8b 12                	mov    (%edx),%edx
81005e15:	89 10                	mov    %edx,(%eax)
81005e17:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005e1a:	8d 42 04             	lea    0x4(%edx),%eax
81005e1d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e20:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e23:	8d 48 04             	lea    0x4(%eax),%ecx
81005e26:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005e29:	8b 12                	mov    (%edx),%edx
81005e2b:	89 10                	mov    %edx,(%eax)
81005e2d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005e30:	8d 42 04             	lea    0x4(%edx),%eax
81005e33:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e39:	8d 48 04             	lea    0x4(%eax),%ecx
81005e3c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005e3f:	8b 12                	mov    (%edx),%edx
81005e41:	89 10                	mov    %edx,(%eax)
81005e43:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005e46:	8d 42 04             	lea    0x4(%edx),%eax
81005e49:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e4c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e4f:	8d 48 04             	lea    0x4(%eax),%ecx
81005e52:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005e55:	8b 12                	mov    (%edx),%edx
81005e57:	89 10                	mov    %edx,(%eax)
81005e59:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005e5c:	8b 10                	mov    (%eax),%edx
81005e5e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e61:	89 10                	mov    %edx,(%eax)
81005e63:	e9 ad 01 00 00       	jmp    81006015 <_realloc_r+0x82b>
81005e68:	83 ec 04             	sub    $0x4,%esp
81005e6b:	ff 75 9c             	pushl  -0x64(%ebp)
81005e6e:	ff 75 0c             	pushl  0xc(%ebp)
81005e71:	ff 75 a8             	pushl  -0x58(%ebp)
81005e74:	e8 67 eb ff ff       	call   810049e0 <memmove>
81005e79:	83 c4 10             	add    $0x10,%esp
81005e7c:	e9 94 01 00 00       	jmp    81006015 <_realloc_r+0x82b>
81005e81:	83 ec 08             	sub    $0x8,%esp
81005e84:	ff 75 10             	pushl  0x10(%ebp)
81005e87:	ff 75 08             	pushl  0x8(%ebp)
81005e8a:	e8 fe e1 ff ff       	call   8100408d <_malloc_r>
81005e8f:	83 c4 10             	add    $0x10,%esp
81005e92:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e95:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005e99:	75 18                	jne    81005eb3 <_realloc_r+0x6c9>
81005e9b:	83 ec 0c             	sub    $0xc,%esp
81005e9e:	ff 75 08             	pushl  0x8(%ebp)
81005ea1:	e8 55 ec ff ff       	call   81004afb <__malloc_unlock>
81005ea6:	83 c4 10             	add    $0x10,%esp
81005ea9:	b8 00 00 00 00       	mov    $0x0,%eax
81005eae:	e9 0f 02 00 00       	jmp    810060c2 <_realloc_r+0x8d8>
81005eb3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005eb6:	83 e8 08             	sub    $0x8,%eax
81005eb9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ebc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ebf:	8b 40 04             	mov    0x4(%eax),%eax
81005ec2:	83 e0 fe             	and    $0xfffffffe,%eax
81005ec5:	89 c2                	mov    %eax,%edx
81005ec7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005eca:	01 d0                	add    %edx,%eax
81005ecc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81005ecf:	75 17                	jne    81005ee8 <_realloc_r+0x6fe>
81005ed1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ed4:	8b 40 04             	mov    0x4(%eax),%eax
81005ed7:	83 e0 fc             	and    $0xfffffffc,%eax
81005eda:	01 45 f0             	add    %eax,-0x10(%ebp)
81005edd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ee0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ee3:	e9 2d 01 00 00       	jmp    81006015 <_realloc_r+0x82b>
81005ee8:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005eeb:	83 e8 04             	sub    $0x4,%eax
81005eee:	89 45 98             	mov    %eax,-0x68(%ebp)
81005ef1:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81005ef5:	0f 87 de 00 00 00    	ja     81005fd9 <_realloc_r+0x7ef>
81005efb:	8b 45 0c             	mov    0xc(%ebp),%eax
81005efe:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f01:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f04:	89 45 c8             	mov    %eax,-0x38(%ebp)
81005f07:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81005f0b:	0f 86 90 00 00 00    	jbe    81005fa1 <_realloc_r+0x7b7>
81005f11:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005f14:	8d 42 04             	lea    0x4(%edx),%eax
81005f17:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f1a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005f1d:	8d 48 04             	lea    0x4(%eax),%ecx
81005f20:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005f23:	8b 12                	mov    (%edx),%edx
81005f25:	89 10                	mov    %edx,(%eax)
81005f27:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005f2a:	8d 42 04             	lea    0x4(%edx),%eax
81005f2d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f30:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005f33:	8d 48 04             	lea    0x4(%eax),%ecx
81005f36:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005f39:	8b 12                	mov    (%edx),%edx
81005f3b:	89 10                	mov    %edx,(%eax)
81005f3d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81005f41:	76 5e                	jbe    81005fa1 <_realloc_r+0x7b7>
81005f43:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005f46:	8d 42 04             	lea    0x4(%edx),%eax
81005f49:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f4c:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005f4f:	8d 48 04             	lea    0x4(%eax),%ecx
81005f52:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005f55:	8b 12                	mov    (%edx),%edx
81005f57:	89 10                	mov    %edx,(%eax)
81005f59:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005f5c:	8d 42 04             	lea    0x4(%edx),%eax
81005f5f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f62:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005f65:	8d 48 04             	lea    0x4(%eax),%ecx
81005f68:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005f6b:	8b 12                	mov    (%edx),%edx
81005f6d:	89 10                	mov    %edx,(%eax)
81005f6f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81005f73:	76 2c                	jbe    81005fa1 <_realloc_r+0x7b7>
81005f75:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005f78:	8d 42 04             	lea    0x4(%edx),%eax
81005f7b:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f7e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005f81:	8d 48 04             	lea    0x4(%eax),%ecx
81005f84:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005f87:	8b 12                	mov    (%edx),%edx
81005f89:	89 10                	mov    %edx,(%eax)
81005f8b:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005f8e:	8d 42 04             	lea    0x4(%edx),%eax
81005f91:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005f94:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005f97:	8d 48 04             	lea    0x4(%eax),%ecx
81005f9a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005f9d:	8b 12                	mov    (%edx),%edx
81005f9f:	89 10                	mov    %edx,(%eax)
81005fa1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005fa4:	8d 42 04             	lea    0x4(%edx),%eax
81005fa7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005faa:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005fad:	8d 48 04             	lea    0x4(%eax),%ecx
81005fb0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005fb3:	8b 12                	mov    (%edx),%edx
81005fb5:	89 10                	mov    %edx,(%eax)
81005fb7:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005fba:	8d 42 04             	lea    0x4(%edx),%eax
81005fbd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005fc0:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005fc3:	8d 48 04             	lea    0x4(%eax),%ecx
81005fc6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005fc9:	8b 12                	mov    (%edx),%edx
81005fcb:	89 10                	mov    %edx,(%eax)
81005fcd:	8b 45 cc             	mov    -0x34(%ebp),%eax
81005fd0:	8b 10                	mov    (%eax),%edx
81005fd2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005fd5:	89 10                	mov    %edx,(%eax)
81005fd7:	eb 14                	jmp    81005fed <_realloc_r+0x803>
81005fd9:	83 ec 04             	sub    $0x4,%esp
81005fdc:	ff 75 98             	pushl  -0x68(%ebp)
81005fdf:	ff 75 0c             	pushl  0xc(%ebp)
81005fe2:	ff 75 a8             	pushl  -0x58(%ebp)
81005fe5:	e8 f6 e9 ff ff       	call   810049e0 <memmove>
81005fea:	83 c4 10             	add    $0x10,%esp
81005fed:	83 ec 08             	sub    $0x8,%esp
81005ff0:	ff 75 0c             	pushl  0xc(%ebp)
81005ff3:	ff 75 08             	pushl  0x8(%ebp)
81005ff6:	e8 7d bd ff ff       	call   81001d78 <_free_r>
81005ffb:	83 c4 10             	add    $0x10,%esp
81005ffe:	83 ec 0c             	sub    $0xc,%esp
81006001:	ff 75 08             	pushl  0x8(%ebp)
81006004:	e8 f2 ea ff ff       	call   81004afb <__malloc_unlock>
81006009:	83 c4 10             	add    $0x10,%esp
8100600c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100600f:	e9 ae 00 00 00       	jmp    810060c2 <_realloc_r+0x8d8>
81006014:	90                   	nop
81006015:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006018:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100601b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100601e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81006022:	76 5d                	jbe    81006081 <_realloc_r+0x897>
81006024:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006027:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100602a:	01 d0                	add    %edx,%eax
8100602c:	89 45 90             	mov    %eax,-0x70(%ebp)
8100602f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006032:	8b 40 04             	mov    0x4(%eax),%eax
81006035:	83 e0 01             	and    $0x1,%eax
81006038:	0b 45 bc             	or     -0x44(%ebp),%eax
8100603b:	89 c2                	mov    %eax,%edx
8100603d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006040:	89 50 04             	mov    %edx,0x4(%eax)
81006043:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006046:	83 c8 01             	or     $0x1,%eax
81006049:	89 c2                	mov    %eax,%edx
8100604b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100604e:	89 50 04             	mov    %edx,0x4(%eax)
81006051:	8b 55 90             	mov    -0x70(%ebp),%edx
81006054:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006057:	01 d0                	add    %edx,%eax
81006059:	8b 50 04             	mov    0x4(%eax),%edx
8100605c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100605f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006062:	01 c8                	add    %ecx,%eax
81006064:	83 ca 01             	or     $0x1,%edx
81006067:	89 50 04             	mov    %edx,0x4(%eax)
8100606a:	8b 45 90             	mov    -0x70(%ebp),%eax
8100606d:	83 c0 08             	add    $0x8,%eax
81006070:	83 ec 08             	sub    $0x8,%esp
81006073:	50                   	push   %eax
81006074:	ff 75 08             	pushl  0x8(%ebp)
81006077:	e8 fc bc ff ff       	call   81001d78 <_free_r>
8100607c:	83 c4 10             	add    $0x10,%esp
8100607f:	eb 2d                	jmp    810060ae <_realloc_r+0x8c4>
81006081:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006084:	8b 40 04             	mov    0x4(%eax),%eax
81006087:	83 e0 01             	and    $0x1,%eax
8100608a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100608d:	89 c2                	mov    %eax,%edx
8100608f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006092:	89 50 04             	mov    %edx,0x4(%eax)
81006095:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006098:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100609b:	01 d0                	add    %edx,%eax
8100609d:	8b 50 04             	mov    0x4(%eax),%edx
810060a0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810060a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810060a6:	01 c8                	add    %ecx,%eax
810060a8:	83 ca 01             	or     $0x1,%edx
810060ab:	89 50 04             	mov    %edx,0x4(%eax)
810060ae:	83 ec 0c             	sub    $0xc,%esp
810060b1:	ff 75 08             	pushl  0x8(%ebp)
810060b4:	e8 42 ea ff ff       	call   81004afb <__malloc_unlock>
810060b9:	83 c4 10             	add    $0x10,%esp
810060bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810060bf:	83 c0 08             	add    $0x8,%eax
810060c2:	c9                   	leave  
810060c3:	c3                   	ret    

810060c4 <cleanup_glue>:
810060c4:	55                   	push   %ebp
810060c5:	89 e5                	mov    %esp,%ebp
810060c7:	83 ec 08             	sub    $0x8,%esp
810060ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810060cd:	8b 00                	mov    (%eax),%eax
810060cf:	85 c0                	test   %eax,%eax
810060d1:	74 14                	je     810060e7 <cleanup_glue+0x23>
810060d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810060d6:	8b 00                	mov    (%eax),%eax
810060d8:	83 ec 08             	sub    $0x8,%esp
810060db:	50                   	push   %eax
810060dc:	ff 75 08             	pushl  0x8(%ebp)
810060df:	e8 e0 ff ff ff       	call   810060c4 <cleanup_glue>
810060e4:	83 c4 10             	add    $0x10,%esp
810060e7:	83 ec 08             	sub    $0x8,%esp
810060ea:	ff 75 0c             	pushl  0xc(%ebp)
810060ed:	ff 75 08             	pushl  0x8(%ebp)
810060f0:	e8 83 bc ff ff       	call   81001d78 <_free_r>
810060f5:	83 c4 10             	add    $0x10,%esp
810060f8:	90                   	nop
810060f9:	c9                   	leave  
810060fa:	c3                   	ret    

810060fb <_reclaim_reent>:
810060fb:	55                   	push   %ebp
810060fc:	89 e5                	mov    %esp,%ebp
810060fe:	83 ec 28             	sub    $0x28,%esp
81006101:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81006106:	39 45 08             	cmp    %eax,0x8(%ebp)
81006109:	0f 84 49 01 00 00    	je     81006258 <_reclaim_reent+0x15d>
8100610f:	8b 45 08             	mov    0x8(%ebp),%eax
81006112:	8b 40 4c             	mov    0x4c(%eax),%eax
81006115:	85 c0                	test   %eax,%eax
81006117:	74 64                	je     8100617d <_reclaim_reent+0x82>
81006119:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006120:	eb 3e                	jmp    81006160 <_reclaim_reent+0x65>
81006122:	8b 45 08             	mov    0x8(%ebp),%eax
81006125:	8b 50 4c             	mov    0x4c(%eax),%edx
81006128:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100612b:	c1 e0 02             	shl    $0x2,%eax
8100612e:	01 d0                	add    %edx,%eax
81006130:	8b 00                	mov    (%eax),%eax
81006132:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006135:	eb 1f                	jmp    81006156 <_reclaim_reent+0x5b>
81006137:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100613a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100613d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006140:	8b 00                	mov    (%eax),%eax
81006142:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006145:	83 ec 08             	sub    $0x8,%esp
81006148:	ff 75 e8             	pushl  -0x18(%ebp)
8100614b:	ff 75 08             	pushl  0x8(%ebp)
8100614e:	e8 25 bc ff ff       	call   81001d78 <_free_r>
81006153:	83 c4 10             	add    $0x10,%esp
81006156:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100615a:	75 db                	jne    81006137 <_reclaim_reent+0x3c>
8100615c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006160:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006163:	83 f8 1f             	cmp    $0x1f,%eax
81006166:	76 ba                	jbe    81006122 <_reclaim_reent+0x27>
81006168:	8b 45 08             	mov    0x8(%ebp),%eax
8100616b:	8b 40 4c             	mov    0x4c(%eax),%eax
8100616e:	83 ec 08             	sub    $0x8,%esp
81006171:	50                   	push   %eax
81006172:	ff 75 08             	pushl  0x8(%ebp)
81006175:	e8 fe bb ff ff       	call   81001d78 <_free_r>
8100617a:	83 c4 10             	add    $0x10,%esp
8100617d:	8b 45 08             	mov    0x8(%ebp),%eax
81006180:	8b 40 40             	mov    0x40(%eax),%eax
81006183:	85 c0                	test   %eax,%eax
81006185:	74 15                	je     8100619c <_reclaim_reent+0xa1>
81006187:	8b 45 08             	mov    0x8(%ebp),%eax
8100618a:	8b 40 40             	mov    0x40(%eax),%eax
8100618d:	83 ec 08             	sub    $0x8,%esp
81006190:	50                   	push   %eax
81006191:	ff 75 08             	pushl  0x8(%ebp)
81006194:	e8 df bb ff ff       	call   81001d78 <_free_r>
81006199:	83 c4 10             	add    $0x10,%esp
8100619c:	8b 45 08             	mov    0x8(%ebp),%eax
8100619f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810061a5:	85 c0                	test   %eax,%eax
810061a7:	74 50                	je     810061f9 <_reclaim_reent+0xfe>
810061a9:	8b 45 08             	mov    0x8(%ebp),%eax
810061ac:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810061b2:	8b 55 08             	mov    0x8(%ebp),%edx
810061b5:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810061bb:	39 d0                	cmp    %edx,%eax
810061bd:	74 3a                	je     810061f9 <_reclaim_reent+0xfe>
810061bf:	8b 45 08             	mov    0x8(%ebp),%eax
810061c2:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810061c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810061cb:	eb 1f                	jmp    810061ec <_reclaim_reent+0xf1>
810061cd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810061d0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810061d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810061d6:	8b 00                	mov    (%eax),%eax
810061d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810061db:	83 ec 08             	sub    $0x8,%esp
810061de:	ff 75 e4             	pushl  -0x1c(%ebp)
810061e1:	ff 75 08             	pushl  0x8(%ebp)
810061e4:	e8 8f bb ff ff       	call   81001d78 <_free_r>
810061e9:	83 c4 10             	add    $0x10,%esp
810061ec:	8b 45 08             	mov    0x8(%ebp),%eax
810061ef:	05 4c 01 00 00       	add    $0x14c,%eax
810061f4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810061f7:	75 d4                	jne    810061cd <_reclaim_reent+0xd2>
810061f9:	8b 45 08             	mov    0x8(%ebp),%eax
810061fc:	8b 40 54             	mov    0x54(%eax),%eax
810061ff:	85 c0                	test   %eax,%eax
81006201:	74 15                	je     81006218 <_reclaim_reent+0x11d>
81006203:	8b 45 08             	mov    0x8(%ebp),%eax
81006206:	8b 40 54             	mov    0x54(%eax),%eax
81006209:	83 ec 08             	sub    $0x8,%esp
8100620c:	50                   	push   %eax
8100620d:	ff 75 08             	pushl  0x8(%ebp)
81006210:	e8 63 bb ff ff       	call   81001d78 <_free_r>
81006215:	83 c4 10             	add    $0x10,%esp
81006218:	8b 45 08             	mov    0x8(%ebp),%eax
8100621b:	8b 40 38             	mov    0x38(%eax),%eax
8100621e:	85 c0                	test   %eax,%eax
81006220:	74 36                	je     81006258 <_reclaim_reent+0x15d>
81006222:	8b 45 08             	mov    0x8(%ebp),%eax
81006225:	8b 40 3c             	mov    0x3c(%eax),%eax
81006228:	83 ec 0c             	sub    $0xc,%esp
8100622b:	ff 75 08             	pushl  0x8(%ebp)
8100622e:	ff d0                	call   *%eax
81006230:	83 c4 10             	add    $0x10,%esp
81006233:	8b 45 08             	mov    0x8(%ebp),%eax
81006236:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100623c:	85 c0                	test   %eax,%eax
8100623e:	74 18                	je     81006258 <_reclaim_reent+0x15d>
81006240:	8b 45 08             	mov    0x8(%ebp),%eax
81006243:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006249:	83 ec 08             	sub    $0x8,%esp
8100624c:	50                   	push   %eax
8100624d:	ff 75 08             	pushl  0x8(%ebp)
81006250:	e8 6f fe ff ff       	call   810060c4 <cleanup_glue>
81006255:	83 c4 10             	add    $0x10,%esp
81006258:	90                   	nop
81006259:	c9                   	leave  
8100625a:	c3                   	ret    

8100625b <lflush>:
8100625b:	55                   	push   %ebp
8100625c:	89 e5                	mov    %esp,%ebp
8100625e:	83 ec 08             	sub    $0x8,%esp
81006261:	8b 45 08             	mov    0x8(%ebp),%eax
81006264:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006268:	98                   	cwtl   
81006269:	83 e0 09             	and    $0x9,%eax
8100626c:	83 f8 09             	cmp    $0x9,%eax
8100626f:	75 10                	jne    81006281 <lflush+0x26>
81006271:	83 ec 0c             	sub    $0xc,%esp
81006274:	ff 75 08             	pushl  0x8(%ebp)
81006277:	e8 b2 af ff ff       	call   8100122e <fflush>
8100627c:	83 c4 10             	add    $0x10,%esp
8100627f:	eb 05                	jmp    81006286 <lflush+0x2b>
81006281:	b8 00 00 00 00       	mov    $0x0,%eax
81006286:	c9                   	leave  
81006287:	c3                   	ret    

81006288 <__srefill_r>:
81006288:	55                   	push   %ebp
81006289:	89 e5                	mov    %esp,%ebp
8100628b:	56                   	push   %esi
8100628c:	53                   	push   %ebx
8100628d:	83 ec 10             	sub    $0x10,%esp
81006290:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006293:	8b 45 08             	mov    0x8(%ebp),%eax
81006296:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006299:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100629d:	74 18                	je     810062b7 <__srefill_r+0x2f>
8100629f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062a2:	8b 40 38             	mov    0x38(%eax),%eax
810062a5:	85 c0                	test   %eax,%eax
810062a7:	75 0e                	jne    810062b7 <__srefill_r+0x2f>
810062a9:	83 ec 0c             	sub    $0xc,%esp
810062ac:	ff 75 f4             	pushl  -0xc(%ebp)
810062af:	e8 0f b5 ff ff       	call   810017c3 <__sinit>
810062b4:	83 c4 10             	add    $0x10,%esp
810062b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062bb:	98                   	cwtl   
810062bc:	25 00 20 00 00       	and    $0x2000,%eax
810062c1:	85 c0                	test   %eax,%eax
810062c3:	75 14                	jne    810062d9 <__srefill_r+0x51>
810062c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062c9:	80 cc 20             	or     $0x20,%ah
810062cc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810062d0:	8b 43 64             	mov    0x64(%ebx),%eax
810062d3:	80 e4 df             	and    $0xdf,%ah
810062d6:	89 43 64             	mov    %eax,0x64(%ebx)
810062d9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810062e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062e4:	98                   	cwtl   
810062e5:	83 e0 20             	and    $0x20,%eax
810062e8:	85 c0                	test   %eax,%eax
810062ea:	74 0a                	je     810062f6 <__srefill_r+0x6e>
810062ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810062f1:	e9 8c 01 00 00       	jmp    81006482 <__srefill_r+0x1fa>
810062f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062fa:	98                   	cwtl   
810062fb:	83 e0 04             	and    $0x4,%eax
810062fe:	85 c0                	test   %eax,%eax
81006300:	75 79                	jne    8100637b <__srefill_r+0xf3>
81006302:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006306:	98                   	cwtl   
81006307:	83 e0 10             	and    $0x10,%eax
8100630a:	85 c0                	test   %eax,%eax
8100630c:	75 1e                	jne    8100632c <__srefill_r+0xa4>
8100630e:	8b 45 08             	mov    0x8(%ebp),%eax
81006311:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81006317:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100631b:	83 c8 40             	or     $0x40,%eax
8100631e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006322:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006327:	e9 56 01 00 00       	jmp    81006482 <__srefill_r+0x1fa>
8100632c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006330:	98                   	cwtl   
81006331:	83 e0 08             	and    $0x8,%eax
81006334:	85 c0                	test   %eax,%eax
81006336:	74 36                	je     8100636e <__srefill_r+0xe6>
81006338:	83 ec 08             	sub    $0x8,%esp
8100633b:	53                   	push   %ebx
8100633c:	ff 75 08             	pushl  0x8(%ebp)
8100633f:	e8 92 ae ff ff       	call   810011d6 <_fflush_r>
81006344:	83 c4 10             	add    $0x10,%esp
81006347:	85 c0                	test   %eax,%eax
81006349:	74 0a                	je     81006355 <__srefill_r+0xcd>
8100634b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006350:	e9 2d 01 00 00       	jmp    81006482 <__srefill_r+0x1fa>
81006355:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006359:	83 e0 f7             	and    $0xfffffff7,%eax
8100635c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006360:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006367:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100636e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006372:	83 c8 04             	or     $0x4,%eax
81006375:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006379:	eb 46                	jmp    810063c1 <__srefill_r+0x139>
8100637b:	8b 43 30             	mov    0x30(%ebx),%eax
8100637e:	85 c0                	test   %eax,%eax
81006380:	74 3f                	je     810063c1 <__srefill_r+0x139>
81006382:	8b 53 30             	mov    0x30(%ebx),%edx
81006385:	8d 43 40             	lea    0x40(%ebx),%eax
81006388:	39 c2                	cmp    %eax,%edx
8100638a:	74 12                	je     8100639e <__srefill_r+0x116>
8100638c:	8b 43 30             	mov    0x30(%ebx),%eax
8100638f:	83 ec 08             	sub    $0x8,%esp
81006392:	50                   	push   %eax
81006393:	ff 75 08             	pushl  0x8(%ebp)
81006396:	e8 dd b9 ff ff       	call   81001d78 <_free_r>
8100639b:	83 c4 10             	add    $0x10,%esp
8100639e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810063a5:	8b 43 3c             	mov    0x3c(%ebx),%eax
810063a8:	89 43 04             	mov    %eax,0x4(%ebx)
810063ab:	8b 43 04             	mov    0x4(%ebx),%eax
810063ae:	85 c0                	test   %eax,%eax
810063b0:	74 0f                	je     810063c1 <__srefill_r+0x139>
810063b2:	8b 43 38             	mov    0x38(%ebx),%eax
810063b5:	89 03                	mov    %eax,(%ebx)
810063b7:	b8 00 00 00 00       	mov    $0x0,%eax
810063bc:	e9 c1 00 00 00       	jmp    81006482 <__srefill_r+0x1fa>
810063c1:	8b 43 10             	mov    0x10(%ebx),%eax
810063c4:	85 c0                	test   %eax,%eax
810063c6:	75 0f                	jne    810063d7 <__srefill_r+0x14f>
810063c8:	83 ec 08             	sub    $0x8,%esp
810063cb:	53                   	push   %ebx
810063cc:	ff 75 08             	pushl  0x8(%ebp)
810063cf:	e8 6d d8 ff ff       	call   81003c41 <__smakebuf_r>
810063d4:	83 c4 10             	add    $0x10,%esp
810063d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063db:	98                   	cwtl   
810063dc:	83 e0 03             	and    $0x3,%eax
810063df:	85 c0                	test   %eax,%eax
810063e1:	74 48                	je     8100642b <__srefill_r+0x1a3>
810063e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063e7:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810063eb:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810063f1:	a1 d4 86 00 81       	mov    0x810086d4,%eax
810063f6:	83 ec 08             	sub    $0x8,%esp
810063f9:	68 5b 62 00 81       	push   $0x8100625b
810063fe:	50                   	push   %eax
810063ff:	e8 9f c8 ff ff       	call   81002ca3 <_fwalk>
81006404:	83 c4 10             	add    $0x10,%esp
81006407:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100640b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100640f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006413:	98                   	cwtl   
81006414:	83 e0 09             	and    $0x9,%eax
81006417:	83 f8 09             	cmp    $0x9,%eax
8100641a:	75 0f                	jne    8100642b <__srefill_r+0x1a3>
8100641c:	83 ec 08             	sub    $0x8,%esp
8100641f:	53                   	push   %ebx
81006420:	ff 75 08             	pushl  0x8(%ebp)
81006423:	e8 88 ab ff ff       	call   81000fb0 <__sflush_r>
81006428:	83 c4 10             	add    $0x10,%esp
8100642b:	8b 43 10             	mov    0x10(%ebx),%eax
8100642e:	89 03                	mov    %eax,(%ebx)
81006430:	8b 43 20             	mov    0x20(%ebx),%eax
81006433:	8b 73 14             	mov    0x14(%ebx),%esi
81006436:	8b 0b                	mov    (%ebx),%ecx
81006438:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100643b:	56                   	push   %esi
8100643c:	51                   	push   %ecx
8100643d:	52                   	push   %edx
8100643e:	ff 75 08             	pushl  0x8(%ebp)
81006441:	ff d0                	call   *%eax
81006443:	83 c4 10             	add    $0x10,%esp
81006446:	89 43 04             	mov    %eax,0x4(%ebx)
81006449:	8b 43 04             	mov    0x4(%ebx),%eax
8100644c:	85 c0                	test   %eax,%eax
8100644e:	7f 2d                	jg     8100647d <__srefill_r+0x1f5>
81006450:	8b 43 04             	mov    0x4(%ebx),%eax
81006453:	85 c0                	test   %eax,%eax
81006455:	75 0d                	jne    81006464 <__srefill_r+0x1dc>
81006457:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100645b:	83 c8 20             	or     $0x20,%eax
8100645e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006462:	eb 12                	jmp    81006476 <__srefill_r+0x1ee>
81006464:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100646b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100646f:	83 c8 40             	or     $0x40,%eax
81006472:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006476:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100647b:	eb 05                	jmp    81006482 <__srefill_r+0x1fa>
8100647d:	b8 00 00 00 00       	mov    $0x0,%eax
81006482:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006485:	5b                   	pop    %ebx
81006486:	5e                   	pop    %esi
81006487:	5d                   	pop    %ebp
81006488:	c3                   	ret    

81006489 <__srget_r>:
81006489:	55                   	push   %ebp
8100648a:	89 e5                	mov    %esp,%ebp
8100648c:	53                   	push   %ebx
8100648d:	83 ec 14             	sub    $0x14,%esp
81006490:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006493:	8b 45 08             	mov    0x8(%ebp),%eax
81006496:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006499:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100649d:	74 18                	je     810064b7 <__srget_r+0x2e>
8100649f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810064a2:	8b 40 38             	mov    0x38(%eax),%eax
810064a5:	85 c0                	test   %eax,%eax
810064a7:	75 0e                	jne    810064b7 <__srget_r+0x2e>
810064a9:	83 ec 0c             	sub    $0xc,%esp
810064ac:	ff 75 f4             	pushl  -0xc(%ebp)
810064af:	e8 0f b3 ff ff       	call   810017c3 <__sinit>
810064b4:	83 c4 10             	add    $0x10,%esp
810064b7:	83 ec 08             	sub    $0x8,%esp
810064ba:	53                   	push   %ebx
810064bb:	ff 75 08             	pushl  0x8(%ebp)
810064be:	e8 c5 fd ff ff       	call   81006288 <__srefill_r>
810064c3:	83 c4 10             	add    $0x10,%esp
810064c6:	85 c0                	test   %eax,%eax
810064c8:	75 18                	jne    810064e2 <__srget_r+0x59>
810064ca:	8b 43 04             	mov    0x4(%ebx),%eax
810064cd:	83 e8 01             	sub    $0x1,%eax
810064d0:	89 43 04             	mov    %eax,0x4(%ebx)
810064d3:	8b 03                	mov    (%ebx),%eax
810064d5:	8d 50 01             	lea    0x1(%eax),%edx
810064d8:	89 13                	mov    %edx,(%ebx)
810064da:	0f b6 00             	movzbl (%eax),%eax
810064dd:	0f b6 c0             	movzbl %al,%eax
810064e0:	eb 05                	jmp    810064e7 <__srget_r+0x5e>
810064e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810064e7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810064ea:	c9                   	leave  
810064eb:	c3                   	ret    

810064ec <__srget>:
810064ec:	55                   	push   %ebp
810064ed:	89 e5                	mov    %esp,%ebp
810064ef:	83 ec 08             	sub    $0x8,%esp
810064f2:	8b 55 08             	mov    0x8(%ebp),%edx
810064f5:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810064fa:	83 ec 08             	sub    $0x8,%esp
810064fd:	52                   	push   %edx
810064fe:	50                   	push   %eax
810064ff:	e8 85 ff ff ff       	call   81006489 <__srget_r>
81006504:	83 c4 10             	add    $0x10,%esp
81006507:	c9                   	leave  
81006508:	c3                   	ret    

81006509 <_sbrk_r>:
81006509:	55                   	push   %ebp
8100650a:	89 e5                	mov    %esp,%ebp
8100650c:	83 ec 18             	sub    $0x18,%esp
8100650f:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
81006516:	00 00 00 
81006519:	83 ec 0c             	sub    $0xc,%esp
8100651c:	ff 75 0c             	pushl  0xc(%ebp)
8100651f:	e8 59 a7 ff ff       	call   81000c7d <sbrk>
81006524:	83 c4 10             	add    $0x10,%esp
81006527:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100652a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100652e:	75 14                	jne    81006544 <_sbrk_r+0x3b>
81006530:	a1 cc 99 00 81       	mov    0x810099cc,%eax
81006535:	85 c0                	test   %eax,%eax
81006537:	74 0b                	je     81006544 <_sbrk_r+0x3b>
81006539:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
8100653f:	8b 45 08             	mov    0x8(%ebp),%eax
81006542:	89 10                	mov    %edx,(%eax)
81006544:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006547:	c9                   	leave  
81006548:	c3                   	ret    

81006549 <setvbuf>:
81006549:	55                   	push   %ebp
8100654a:	89 e5                	mov    %esp,%ebp
8100654c:	57                   	push   %edi
8100654d:	56                   	push   %esi
8100654e:	53                   	push   %ebx
8100654f:	83 ec 2c             	sub    $0x2c,%esp
81006552:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006555:	8b 7d 10             	mov    0x10(%ebp),%edi
81006558:	8b 75 14             	mov    0x14(%ebp),%esi
8100655b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006562:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81006567:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100656a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100656d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006570:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81006574:	74 18                	je     8100658e <setvbuf+0x45>
81006576:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006579:	8b 40 38             	mov    0x38(%eax),%eax
8100657c:	85 c0                	test   %eax,%eax
8100657e:	75 0e                	jne    8100658e <setvbuf+0x45>
81006580:	83 ec 0c             	sub    $0xc,%esp
81006583:	ff 75 dc             	pushl  -0x24(%ebp)
81006586:	e8 38 b2 ff ff       	call   810017c3 <__sinit>
8100658b:	83 c4 10             	add    $0x10,%esp
8100658e:	83 ff 02             	cmp    $0x2,%edi
81006591:	74 19                	je     810065ac <setvbuf+0x63>
81006593:	85 ff                	test   %edi,%edi
81006595:	74 05                	je     8100659c <setvbuf+0x53>
81006597:	83 ff 01             	cmp    $0x1,%edi
8100659a:	75 06                	jne    810065a2 <setvbuf+0x59>
8100659c:	89 f0                	mov    %esi,%eax
8100659e:	85 c0                	test   %eax,%eax
810065a0:	79 0a                	jns    810065ac <setvbuf+0x63>
810065a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810065a7:	e9 a1 01 00 00       	jmp    8100674d <setvbuf+0x204>
810065ac:	83 ec 08             	sub    $0x8,%esp
810065af:	53                   	push   %ebx
810065b0:	ff 75 e0             	pushl  -0x20(%ebp)
810065b3:	e8 1e ac ff ff       	call   810011d6 <_fflush_r>
810065b8:	83 c4 10             	add    $0x10,%esp
810065bb:	8b 43 30             	mov    0x30(%ebx),%eax
810065be:	85 c0                	test   %eax,%eax
810065c0:	74 23                	je     810065e5 <setvbuf+0x9c>
810065c2:	8b 53 30             	mov    0x30(%ebx),%edx
810065c5:	8d 43 40             	lea    0x40(%ebx),%eax
810065c8:	39 c2                	cmp    %eax,%edx
810065ca:	74 12                	je     810065de <setvbuf+0x95>
810065cc:	8b 43 30             	mov    0x30(%ebx),%eax
810065cf:	83 ec 08             	sub    $0x8,%esp
810065d2:	50                   	push   %eax
810065d3:	ff 75 e0             	pushl  -0x20(%ebp)
810065d6:	e8 9d b7 ff ff       	call   81001d78 <_free_r>
810065db:	83 c4 10             	add    $0x10,%esp
810065de:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810065e5:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810065ec:	8b 43 18             	mov    0x18(%ebx),%eax
810065ef:	89 43 04             	mov    %eax,0x4(%ebx)
810065f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810065f6:	98                   	cwtl   
810065f7:	25 80 00 00 00       	and    $0x80,%eax
810065fc:	85 c0                	test   %eax,%eax
810065fe:	74 12                	je     81006612 <setvbuf+0xc9>
81006600:	8b 43 10             	mov    0x10(%ebx),%eax
81006603:	83 ec 08             	sub    $0x8,%esp
81006606:	50                   	push   %eax
81006607:	ff 75 e0             	pushl  -0x20(%ebp)
8100660a:	e8 69 b7 ff ff       	call   81001d78 <_free_r>
8100660f:	83 c4 10             	add    $0x10,%esp
81006612:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006616:	66 25 5c f3          	and    $0xf35c,%ax
8100661a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100661e:	83 ff 02             	cmp    $0x2,%edi
81006621:	74 6f                	je     81006692 <setvbuf+0x149>
81006623:	8d 45 d4             	lea    -0x2c(%ebp),%eax
81006626:	50                   	push   %eax
81006627:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100662a:	50                   	push   %eax
8100662b:	53                   	push   %ebx
8100662c:	ff 75 e0             	pushl  -0x20(%ebp)
8100662f:	e8 fa d6 ff ff       	call   81003d2e <__swhatbuf_r>
81006634:	83 c4 10             	add    $0x10,%esp
81006637:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100663b:	09 d0                	or     %edx,%eax
8100663d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006641:	85 f6                	test   %esi,%esi
81006643:	75 0a                	jne    8100664f <setvbuf+0x106>
81006645:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8100664c:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100664f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006653:	75 73                	jne    810066c8 <setvbuf+0x17f>
81006655:	83 ec 0c             	sub    $0xc,%esp
81006658:	56                   	push   %esi
81006659:	e8 63 d7 ff ff       	call   81003dc1 <malloc>
8100665e:	83 c4 10             	add    $0x10,%esp
81006661:	89 45 0c             	mov    %eax,0xc(%ebp)
81006664:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006668:	75 20                	jne    8100668a <setvbuf+0x141>
8100666a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81006671:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006674:	39 c6                	cmp    %eax,%esi
81006676:	74 12                	je     8100668a <setvbuf+0x141>
81006678:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100667b:	83 ec 0c             	sub    $0xc,%esp
8100667e:	56                   	push   %esi
8100667f:	e8 3d d7 ff ff       	call   81003dc1 <malloc>
81006684:	83 c4 10             	add    $0x10,%esp
81006687:	89 45 0c             	mov    %eax,0xc(%ebp)
8100668a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100668e:	75 2e                	jne    810066be <setvbuf+0x175>
81006690:	eb 01                	jmp    81006693 <setvbuf+0x14a>
81006692:	90                   	nop
81006693:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006697:	83 c8 02             	or     $0x2,%eax
8100669a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100669e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810066a5:	8d 43 43             	lea    0x43(%ebx),%eax
810066a8:	89 03                	mov    %eax,(%ebx)
810066aa:	8b 03                	mov    (%ebx),%eax
810066ac:	89 43 10             	mov    %eax,0x10(%ebx)
810066af:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810066b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810066b9:	e9 8f 00 00 00       	jmp    8100674d <setvbuf+0x204>
810066be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066c2:	0c 80                	or     $0x80,%al
810066c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810066c8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810066cb:	8b 40 38             	mov    0x38(%eax),%eax
810066ce:	85 c0                	test   %eax,%eax
810066d0:	75 0e                	jne    810066e0 <setvbuf+0x197>
810066d2:	83 ec 0c             	sub    $0xc,%esp
810066d5:	ff 75 e0             	pushl  -0x20(%ebp)
810066d8:	e8 e6 b0 ff ff       	call   810017c3 <__sinit>
810066dd:	83 c4 10             	add    $0x10,%esp
810066e0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810066e3:	39 c6                	cmp    %eax,%esi
810066e5:	74 0b                	je     810066f2 <setvbuf+0x1a9>
810066e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066eb:	80 cc 08             	or     $0x8,%ah
810066ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810066f2:	83 ff 01             	cmp    $0x1,%edi
810066f5:	75 0b                	jne    81006702 <setvbuf+0x1b9>
810066f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066fb:	83 c8 01             	or     $0x1,%eax
810066fe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006702:	8b 45 0c             	mov    0xc(%ebp),%eax
81006705:	89 03                	mov    %eax,(%ebx)
81006707:	8b 03                	mov    (%ebx),%eax
81006709:	89 43 10             	mov    %eax,0x10(%ebx)
8100670c:	89 f0                	mov    %esi,%eax
8100670e:	89 43 14             	mov    %eax,0x14(%ebx)
81006711:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006715:	98                   	cwtl   
81006716:	83 e0 08             	and    $0x8,%eax
81006719:	85 c0                	test   %eax,%eax
8100671b:	74 24                	je     81006741 <setvbuf+0x1f8>
8100671d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006721:	98                   	cwtl   
81006722:	83 e0 01             	and    $0x1,%eax
81006725:	85 c0                	test   %eax,%eax
81006727:	74 11                	je     8100673a <setvbuf+0x1f1>
81006729:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006730:	8b 43 14             	mov    0x14(%ebx),%eax
81006733:	f7 d8                	neg    %eax
81006735:	89 43 18             	mov    %eax,0x18(%ebx)
81006738:	eb 0e                	jmp    81006748 <setvbuf+0x1ff>
8100673a:	89 f0                	mov    %esi,%eax
8100673c:	89 43 08             	mov    %eax,0x8(%ebx)
8100673f:	eb 07                	jmp    81006748 <setvbuf+0x1ff>
81006741:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006748:	b8 00 00 00 00       	mov    $0x0,%eax
8100674d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006750:	5b                   	pop    %ebx
81006751:	5e                   	pop    %esi
81006752:	5f                   	pop    %edi
81006753:	5d                   	pop    %ebp
81006754:	c3                   	ret    

81006755 <_siprintf_r>:
81006755:	55                   	push   %ebp
81006756:	89 e5                	mov    %esp,%ebp
81006758:	83 ec 78             	sub    $0x78,%esp
8100675b:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
81006761:	8b 45 0c             	mov    0xc(%ebp),%eax
81006764:	89 45 88             	mov    %eax,-0x78(%ebp)
81006767:	8b 45 88             	mov    -0x78(%ebp),%eax
8100676a:	89 45 98             	mov    %eax,-0x68(%ebp)
8100676d:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81006774:	8b 45 90             	mov    -0x70(%ebp),%eax
81006777:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100677a:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81006780:	8d 45 14             	lea    0x14(%ebp),%eax
81006783:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006786:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006789:	50                   	push   %eax
8100678a:	ff 75 10             	pushl  0x10(%ebp)
8100678d:	8d 45 88             	lea    -0x78(%ebp),%eax
81006790:	50                   	push   %eax
81006791:	ff 75 08             	pushl  0x8(%ebp)
81006794:	e8 41 15 00 00       	call   81007cda <_svfiprintf_r>
81006799:	83 c4 10             	add    $0x10,%esp
8100679c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100679f:	8b 45 88             	mov    -0x78(%ebp),%eax
810067a2:	c6 00 00             	movb   $0x0,(%eax)
810067a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067a8:	c9                   	leave  
810067a9:	c3                   	ret    

810067aa <siprintf>:
810067aa:	55                   	push   %ebp
810067ab:	89 e5                	mov    %esp,%ebp
810067ad:	83 ec 78             	sub    $0x78,%esp
810067b0:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810067b6:	8b 45 08             	mov    0x8(%ebp),%eax
810067b9:	89 45 88             	mov    %eax,-0x78(%ebp)
810067bc:	8b 45 88             	mov    -0x78(%ebp),%eax
810067bf:	89 45 98             	mov    %eax,-0x68(%ebp)
810067c2:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810067c9:	8b 45 90             	mov    -0x70(%ebp),%eax
810067cc:	89 45 9c             	mov    %eax,-0x64(%ebp)
810067cf:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810067d5:	8d 45 10             	lea    0x10(%ebp),%eax
810067d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810067db:	8b 55 f0             	mov    -0x10(%ebp),%edx
810067de:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810067e3:	52                   	push   %edx
810067e4:	ff 75 0c             	pushl  0xc(%ebp)
810067e7:	8d 55 88             	lea    -0x78(%ebp),%edx
810067ea:	52                   	push   %edx
810067eb:	50                   	push   %eax
810067ec:	e8 e9 14 00 00       	call   81007cda <_svfiprintf_r>
810067f1:	83 c4 10             	add    $0x10,%esp
810067f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810067f7:	8b 45 88             	mov    -0x78(%ebp),%eax
810067fa:	c6 00 00             	movb   $0x0,(%eax)
810067fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006800:	c9                   	leave  
81006801:	c3                   	ret    

81006802 <__sread>:
81006802:	55                   	push   %ebp
81006803:	89 e5                	mov    %esp,%ebp
81006805:	56                   	push   %esi
81006806:	53                   	push   %ebx
81006807:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100680a:	8b 55 14             	mov    0x14(%ebp),%edx
8100680d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81006811:	98                   	cwtl   
81006812:	52                   	push   %edx
81006813:	ff 75 10             	pushl  0x10(%ebp)
81006816:	50                   	push   %eax
81006817:	ff 75 08             	pushl  0x8(%ebp)
8100681a:	e8 f9 18 00 00       	call   81008118 <_read_r>
8100681f:	83 c4 10             	add    $0x10,%esp
81006822:	89 c6                	mov    %eax,%esi
81006824:	85 f6                	test   %esi,%esi
81006826:	78 0a                	js     81006832 <__sread+0x30>
81006828:	8b 43 50             	mov    0x50(%ebx),%eax
8100682b:	01 f0                	add    %esi,%eax
8100682d:	89 43 50             	mov    %eax,0x50(%ebx)
81006830:	eb 0b                	jmp    8100683d <__sread+0x3b>
81006832:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006836:	80 e4 ef             	and    $0xef,%ah
81006839:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100683d:	89 f0                	mov    %esi,%eax
8100683f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006842:	5b                   	pop    %ebx
81006843:	5e                   	pop    %esi
81006844:	5d                   	pop    %ebp
81006845:	c3                   	ret    

81006846 <__seofread>:
81006846:	55                   	push   %ebp
81006847:	89 e5                	mov    %esp,%ebp
81006849:	b8 00 00 00 00       	mov    $0x0,%eax
8100684e:	5d                   	pop    %ebp
8100684f:	c3                   	ret    

81006850 <__swrite>:
81006850:	55                   	push   %ebp
81006851:	89 e5                	mov    %esp,%ebp
81006853:	53                   	push   %ebx
81006854:	83 ec 14             	sub    $0x14,%esp
81006857:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100685a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100685e:	98                   	cwtl   
8100685f:	25 00 01 00 00       	and    $0x100,%eax
81006864:	85 c0                	test   %eax,%eax
81006866:	74 15                	je     8100687d <__swrite+0x2d>
81006868:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100686c:	98                   	cwtl   
8100686d:	6a 02                	push   $0x2
8100686f:	6a 00                	push   $0x0
81006871:	50                   	push   %eax
81006872:	ff 75 08             	pushl  0x8(%ebp)
81006875:	e8 9b 0f 00 00       	call   81007815 <_lseek_r>
8100687a:	83 c4 10             	add    $0x10,%esp
8100687d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006881:	80 e4 ef             	and    $0xef,%ah
81006884:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006888:	8b 55 14             	mov    0x14(%ebp),%edx
8100688b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100688f:	98                   	cwtl   
81006890:	52                   	push   %edx
81006891:	ff 75 10             	pushl  0x10(%ebp)
81006894:	50                   	push   %eax
81006895:	ff 75 08             	pushl  0x8(%ebp)
81006898:	e8 45 07 00 00       	call   81006fe2 <_write_r>
8100689d:	83 c4 10             	add    $0x10,%esp
810068a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068a6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810068a9:	c9                   	leave  
810068aa:	c3                   	ret    

810068ab <__sseek>:
810068ab:	55                   	push   %ebp
810068ac:	89 e5                	mov    %esp,%ebp
810068ae:	56                   	push   %esi
810068af:	53                   	push   %ebx
810068b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810068b3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810068b7:	98                   	cwtl   
810068b8:	ff 75 14             	pushl  0x14(%ebp)
810068bb:	ff 75 10             	pushl  0x10(%ebp)
810068be:	50                   	push   %eax
810068bf:	ff 75 08             	pushl  0x8(%ebp)
810068c2:	e8 4e 0f 00 00       	call   81007815 <_lseek_r>
810068c7:	83 c4 10             	add    $0x10,%esp
810068ca:	89 c6                	mov    %eax,%esi
810068cc:	83 fe ff             	cmp    $0xffffffff,%esi
810068cf:	75 0d                	jne    810068de <__sseek+0x33>
810068d1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068d5:	80 e4 ef             	and    $0xef,%ah
810068d8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810068dc:	eb 0e                	jmp    810068ec <__sseek+0x41>
810068de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068e2:	80 cc 10             	or     $0x10,%ah
810068e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810068e9:	89 73 50             	mov    %esi,0x50(%ebx)
810068ec:	89 f0                	mov    %esi,%eax
810068ee:	8d 65 f8             	lea    -0x8(%ebp),%esp
810068f1:	5b                   	pop    %ebx
810068f2:	5e                   	pop    %esi
810068f3:	5d                   	pop    %ebp
810068f4:	c3                   	ret    

810068f5 <__sclose>:
810068f5:	55                   	push   %ebp
810068f6:	89 e5                	mov    %esp,%ebp
810068f8:	83 ec 18             	sub    $0x18,%esp
810068fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810068fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006901:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006904:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81006908:	98                   	cwtl   
81006909:	83 ec 08             	sub    $0x8,%esp
8100690c:	50                   	push   %eax
8100690d:	ff 75 08             	pushl  0x8(%ebp)
81006910:	e8 83 09 00 00       	call   81007298 <_close_r>
81006915:	83 c4 10             	add    $0x10,%esp
81006918:	c9                   	leave  
81006919:	c3                   	ret    
8100691a:	66 90                	xchg   %ax,%ax
8100691c:	66 90                	xchg   %ax,%ax
8100691e:	66 90                	xchg   %ax,%ax

81006920 <strchr>:
81006920:	55                   	push   %ebp
81006921:	89 e5                	mov    %esp,%ebp
81006923:	57                   	push   %edi
81006924:	53                   	push   %ebx
81006925:	31 db                	xor    %ebx,%ebx
81006927:	8b 7d 08             	mov    0x8(%ebp),%edi
8100692a:	02 5d 0c             	add    0xc(%ebp),%bl
8100692d:	0f 84 98 00 00 00    	je     810069cb <L25>
81006933:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006939:	74 37                	je     81006972 <L5>
8100693b:	89 f8                	mov    %edi,%eax
8100693d:	8a 08                	mov    (%eax),%cl
8100693f:	84 c9                	test   %cl,%cl
81006941:	74 7b                	je     810069be <L14>
81006943:	38 d9                	cmp    %bl,%cl
81006945:	74 7d                	je     810069c4 <L19>
81006947:	47                   	inc    %edi
81006948:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100694e:	74 22                	je     81006972 <L5>
81006950:	89 f8                	mov    %edi,%eax
81006952:	8a 08                	mov    (%eax),%cl
81006954:	84 c9                	test   %cl,%cl
81006956:	74 66                	je     810069be <L14>
81006958:	38 d9                	cmp    %bl,%cl
8100695a:	74 68                	je     810069c4 <L19>
8100695c:	47                   	inc    %edi
8100695d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006963:	74 0d                	je     81006972 <L5>
81006965:	89 f8                	mov    %edi,%eax
81006967:	8a 08                	mov    (%eax),%cl
81006969:	84 c9                	test   %cl,%cl
8100696b:	74 51                	je     810069be <L14>
8100696d:	38 d9                	cmp    %bl,%cl
8100696f:	74 53                	je     810069c4 <L19>
81006971:	47                   	inc    %edi

81006972 <L5>:
81006972:	89 d9                	mov    %ebx,%ecx
81006974:	c1 e3 08             	shl    $0x8,%ebx
81006977:	83 ef 04             	sub    $0x4,%edi
8100697a:	09 cb                	or     %ecx,%ebx
8100697c:	89 da                	mov    %ebx,%edx
8100697e:	c1 e3 10             	shl    $0x10,%ebx
81006981:	09 d3                	or     %edx,%ebx

81006983 <L10>:
81006983:	83 c7 04             	add    $0x4,%edi
81006986:	8b 0f                	mov    (%edi),%ecx
81006988:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100698e:	89 c8                	mov    %ecx,%eax
81006990:	f7 d0                	not    %eax
81006992:	21 c2                	and    %eax,%edx
81006994:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100699a:	75 14                	jne    810069b0 <L9>
8100699c:	31 d9                	xor    %ebx,%ecx
8100699e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810069a4:	f7 d1                	not    %ecx
810069a6:	21 ca                	and    %ecx,%edx
810069a8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810069ae:	74 d3                	je     81006983 <L10>

810069b0 <L9>:
810069b0:	8d 47 ff             	lea    -0x1(%edi),%eax

810069b3 <L15>:
810069b3:	40                   	inc    %eax
810069b4:	8a 10                	mov    (%eax),%dl
810069b6:	84 d2                	test   %dl,%dl
810069b8:	74 04                	je     810069be <L14>
810069ba:	38 da                	cmp    %bl,%dl
810069bc:	75 f5                	jne    810069b3 <L15>

810069be <L14>:
810069be:	38 18                	cmp    %bl,(%eax)
810069c0:	74 02                	je     810069c4 <L19>
810069c2:	31 c0                	xor    %eax,%eax

810069c4 <L19>:
810069c4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810069c7:	5b                   	pop    %ebx
810069c8:	5f                   	pop    %edi
810069c9:	c9                   	leave  
810069ca:	c3                   	ret    

810069cb <L25>:
810069cb:	f7 c7 03 00 00 00    	test   $0x3,%edi
810069d1:	74 2b                	je     810069fe <L26>
810069d3:	89 f8                	mov    %edi,%eax
810069d5:	8a 08                	mov    (%eax),%cl
810069d7:	84 c9                	test   %cl,%cl
810069d9:	74 e9                	je     810069c4 <L19>
810069db:	47                   	inc    %edi
810069dc:	f7 c7 03 00 00 00    	test   $0x3,%edi
810069e2:	74 1a                	je     810069fe <L26>
810069e4:	89 f8                	mov    %edi,%eax
810069e6:	8a 08                	mov    (%eax),%cl
810069e8:	84 c9                	test   %cl,%cl
810069ea:	74 d8                	je     810069c4 <L19>
810069ec:	47                   	inc    %edi
810069ed:	f7 c7 03 00 00 00    	test   $0x3,%edi
810069f3:	74 09                	je     810069fe <L26>
810069f5:	89 f8                	mov    %edi,%eax
810069f7:	8a 08                	mov    (%eax),%cl
810069f9:	84 c9                	test   %cl,%cl
810069fb:	74 c7                	je     810069c4 <L19>
810069fd:	47                   	inc    %edi

810069fe <L26>:
810069fe:	83 ef 04             	sub    $0x4,%edi

81006a01 <L27>:
81006a01:	83 c7 04             	add    $0x4,%edi
81006a04:	8b 0f                	mov    (%edi),%ecx
81006a06:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006a0c:	89 c8                	mov    %ecx,%eax
81006a0e:	f7 d0                	not    %eax
81006a10:	21 c2                	and    %eax,%edx
81006a12:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006a18:	74 e7                	je     81006a01 <L27>
81006a1a:	eb 94                	jmp    810069b0 <L9>

81006a1c <strcmp>:
81006a1c:	55                   	push   %ebp
81006a1d:	89 e5                	mov    %esp,%ebp
81006a1f:	83 ec 10             	sub    $0x10,%esp
81006a22:	8b 55 08             	mov    0x8(%ebp),%edx
81006a25:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a28:	09 d0                	or     %edx,%eax
81006a2a:	83 e0 03             	and    $0x3,%eax
81006a2d:	85 c0                	test   %eax,%eax
81006a2f:	75 5e                	jne    81006a8f <strcmp+0x73>
81006a31:	8b 45 08             	mov    0x8(%ebp),%eax
81006a34:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006a37:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a3a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006a3d:	eb 2c                	jmp    81006a6b <strcmp+0x4f>
81006a3f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a42:	8b 00                	mov    (%eax),%eax
81006a44:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006a4a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a4d:	8b 00                	mov    (%eax),%eax
81006a4f:	f7 d0                	not    %eax
81006a51:	21 d0                	and    %edx,%eax
81006a53:	25 80 80 80 80       	and    $0x80808080,%eax
81006a58:	85 c0                	test   %eax,%eax
81006a5a:	74 07                	je     81006a63 <strcmp+0x47>
81006a5c:	b8 00 00 00 00       	mov    $0x0,%eax
81006a61:	eb 5c                	jmp    81006abf <strcmp+0xa3>
81006a63:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006a67:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006a6b:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a6e:	8b 10                	mov    (%eax),%edx
81006a70:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006a73:	8b 00                	mov    (%eax),%eax
81006a75:	39 c2                	cmp    %eax,%edx
81006a77:	74 c6                	je     81006a3f <strcmp+0x23>
81006a79:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a7c:	89 45 08             	mov    %eax,0x8(%ebp)
81006a7f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006a82:	89 45 0c             	mov    %eax,0xc(%ebp)
81006a85:	eb 08                	jmp    81006a8f <strcmp+0x73>
81006a87:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006a8b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006a8f:	8b 45 08             	mov    0x8(%ebp),%eax
81006a92:	0f b6 00             	movzbl (%eax),%eax
81006a95:	84 c0                	test   %al,%al
81006a97:	74 10                	je     81006aa9 <strcmp+0x8d>
81006a99:	8b 45 08             	mov    0x8(%ebp),%eax
81006a9c:	0f b6 10             	movzbl (%eax),%edx
81006a9f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006aa2:	0f b6 00             	movzbl (%eax),%eax
81006aa5:	38 c2                	cmp    %al,%dl
81006aa7:	74 de                	je     81006a87 <strcmp+0x6b>
81006aa9:	8b 45 08             	mov    0x8(%ebp),%eax
81006aac:	0f b6 00             	movzbl (%eax),%eax
81006aaf:	0f b6 d0             	movzbl %al,%edx
81006ab2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ab5:	0f b6 00             	movzbl (%eax),%eax
81006ab8:	0f b6 c8             	movzbl %al,%ecx
81006abb:	89 d0                	mov    %edx,%eax
81006abd:	29 c8                	sub    %ecx,%eax
81006abf:	c9                   	leave  
81006ac0:	c3                   	ret    
81006ac1:	66 90                	xchg   %ax,%ax
81006ac3:	66 90                	xchg   %ax,%ax
81006ac5:	66 90                	xchg   %ax,%ax
81006ac7:	66 90                	xchg   %ax,%ax
81006ac9:	66 90                	xchg   %ax,%ax
81006acb:	66 90                	xchg   %ax,%ax
81006acd:	66 90                	xchg   %ax,%ax
81006acf:	90                   	nop

81006ad0 <strlen>:
81006ad0:	55                   	push   %ebp
81006ad1:	89 e5                	mov    %esp,%ebp
81006ad3:	57                   	push   %edi
81006ad4:	8b 55 08             	mov    0x8(%ebp),%edx
81006ad7:	89 d7                	mov    %edx,%edi
81006ad9:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006adf:	74 25                	je     81006b06 <L5>
81006ae1:	8a 0f                	mov    (%edi),%cl
81006ae3:	47                   	inc    %edi
81006ae4:	84 c9                	test   %cl,%cl
81006ae6:	74 56                	je     81006b3e <L15>
81006ae8:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006aee:	74 16                	je     81006b06 <L5>
81006af0:	8a 0f                	mov    (%edi),%cl
81006af2:	47                   	inc    %edi
81006af3:	84 c9                	test   %cl,%cl
81006af5:	74 47                	je     81006b3e <L15>
81006af7:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006afd:	74 07                	je     81006b06 <L5>
81006aff:	8a 0f                	mov    (%edi),%cl
81006b01:	47                   	inc    %edi
81006b02:	84 c9                	test   %cl,%cl
81006b04:	74 38                	je     81006b3e <L15>

81006b06 <L5>:
81006b06:	83 ef 04             	sub    $0x4,%edi
81006b09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006b10 <L10>:
81006b10:	83 c7 04             	add    $0x4,%edi
81006b13:	8b 0f                	mov    (%edi),%ecx
81006b15:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81006b1b:	f7 d1                	not    %ecx
81006b1d:	21 c8                	and    %ecx,%eax
81006b1f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006b24:	74 ea                	je     81006b10 <L10>
81006b26:	f7 d1                	not    %ecx
81006b28:	47                   	inc    %edi
81006b29:	84 c9                	test   %cl,%cl
81006b2b:	74 11                	je     81006b3e <L15>
81006b2d:	47                   	inc    %edi
81006b2e:	c1 e9 08             	shr    $0x8,%ecx
81006b31:	84 c9                	test   %cl,%cl
81006b33:	74 09                	je     81006b3e <L15>
81006b35:	47                   	inc    %edi
81006b36:	c1 e9 08             	shr    $0x8,%ecx
81006b39:	84 c9                	test   %cl,%cl
81006b3b:	74 01                	je     81006b3e <L15>
81006b3d:	47                   	inc    %edi

81006b3e <L15>:
81006b3e:	29 d7                	sub    %edx,%edi
81006b40:	8d 47 ff             	lea    -0x1(%edi),%eax
81006b43:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006b46:	5f                   	pop    %edi
81006b47:	c9                   	leave  
81006b48:	c3                   	ret    

81006b49 <strtok>:
81006b49:	55                   	push   %ebp
81006b4a:	89 e5                	mov    %esp,%ebp
81006b4c:	83 ec 18             	sub    $0x18,%esp
81006b4f:	8b 55 08             	mov    0x8(%ebp),%edx
81006b52:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006b55:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81006b5a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b60:	83 c0 5c             	add    $0x5c,%eax
81006b63:	6a 01                	push   $0x1
81006b65:	50                   	push   %eax
81006b66:	51                   	push   %ecx
81006b67:	52                   	push   %edx
81006b68:	e8 05 00 00 00       	call   81006b72 <__strtok_r>
81006b6d:	83 c4 10             	add    $0x10,%esp
81006b70:	c9                   	leave  
81006b71:	c3                   	ret    

81006b72 <__strtok_r>:
81006b72:	55                   	push   %ebp
81006b73:	89 e5                	mov    %esp,%ebp
81006b75:	57                   	push   %edi
81006b76:	56                   	push   %esi
81006b77:	53                   	push   %ebx
81006b78:	83 ec 10             	sub    $0x10,%esp
81006b7b:	8b 45 08             	mov    0x8(%ebp),%eax
81006b7e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006b81:	85 c0                	test   %eax,%eax
81006b83:	75 13                	jne    81006b98 <__strtok_r+0x26>
81006b85:	8b 45 10             	mov    0x10(%ebp),%eax
81006b88:	8b 00                	mov    (%eax),%eax
81006b8a:	85 c0                	test   %eax,%eax
81006b8c:	75 0a                	jne    81006b98 <__strtok_r+0x26>
81006b8e:	b8 00 00 00 00       	mov    $0x0,%eax
81006b93:	e9 92 00 00 00       	jmp    81006c2a <__strtok_r+0xb8>
81006b98:	90                   	nop
81006b99:	89 c2                	mov    %eax,%edx
81006b9b:	8d 42 01             	lea    0x1(%edx),%eax
81006b9e:	0f b6 12             	movzbl (%edx),%edx
81006ba1:	0f be f2             	movsbl %dl,%esi
81006ba4:	89 cf                	mov    %ecx,%edi
81006ba6:	eb 1c                	jmp    81006bc4 <__strtok_r+0x52>
81006ba8:	39 de                	cmp    %ebx,%esi
81006baa:	75 18                	jne    81006bc4 <__strtok_r+0x52>
81006bac:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006bb0:	74 02                	je     81006bb4 <__strtok_r+0x42>
81006bb2:	eb e5                	jmp    81006b99 <__strtok_r+0x27>
81006bb4:	8b 55 10             	mov    0x10(%ebp),%edx
81006bb7:	89 02                	mov    %eax,(%edx)
81006bb9:	8d 50 ff             	lea    -0x1(%eax),%edx
81006bbc:	c6 02 00             	movb   $0x0,(%edx)
81006bbf:	83 e8 01             	sub    $0x1,%eax
81006bc2:	eb 66                	jmp    81006c2a <__strtok_r+0xb8>
81006bc4:	89 fa                	mov    %edi,%edx
81006bc6:	8d 7a 01             	lea    0x1(%edx),%edi
81006bc9:	0f b6 12             	movzbl (%edx),%edx
81006bcc:	0f be da             	movsbl %dl,%ebx
81006bcf:	85 db                	test   %ebx,%ebx
81006bd1:	75 d5                	jne    81006ba8 <__strtok_r+0x36>
81006bd3:	85 f6                	test   %esi,%esi
81006bd5:	75 10                	jne    81006be7 <__strtok_r+0x75>
81006bd7:	8b 45 10             	mov    0x10(%ebp),%eax
81006bda:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006be0:	b8 00 00 00 00       	mov    $0x0,%eax
81006be5:	eb 43                	jmp    81006c2a <__strtok_r+0xb8>
81006be7:	8d 50 ff             	lea    -0x1(%eax),%edx
81006bea:	89 55 f0             	mov    %edx,-0x10(%ebp)
81006bed:	89 c2                	mov    %eax,%edx
81006bef:	8d 42 01             	lea    0x1(%edx),%eax
81006bf2:	0f b6 12             	movzbl (%edx),%edx
81006bf5:	0f be f2             	movsbl %dl,%esi
81006bf8:	89 cf                	mov    %ecx,%edi
81006bfa:	89 fa                	mov    %edi,%edx
81006bfc:	8d 7a 01             	lea    0x1(%edx),%edi
81006bff:	0f b6 12             	movzbl (%edx),%edx
81006c02:	0f be da             	movsbl %dl,%ebx
81006c05:	39 f3                	cmp    %esi,%ebx
81006c07:	75 1b                	jne    81006c24 <__strtok_r+0xb2>
81006c09:	85 f6                	test   %esi,%esi
81006c0b:	75 07                	jne    81006c14 <__strtok_r+0xa2>
81006c0d:	b8 00 00 00 00       	mov    $0x0,%eax
81006c12:	eb 06                	jmp    81006c1a <__strtok_r+0xa8>
81006c14:	8d 50 ff             	lea    -0x1(%eax),%edx
81006c17:	c6 02 00             	movb   $0x0,(%edx)
81006c1a:	8b 55 10             	mov    0x10(%ebp),%edx
81006c1d:	89 02                	mov    %eax,(%edx)
81006c1f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c22:	eb 06                	jmp    81006c2a <__strtok_r+0xb8>
81006c24:	85 db                	test   %ebx,%ebx
81006c26:	75 d2                	jne    81006bfa <__strtok_r+0x88>
81006c28:	eb c3                	jmp    81006bed <__strtok_r+0x7b>
81006c2a:	83 c4 10             	add    $0x10,%esp
81006c2d:	5b                   	pop    %ebx
81006c2e:	5e                   	pop    %esi
81006c2f:	5f                   	pop    %edi
81006c30:	5d                   	pop    %ebp
81006c31:	c3                   	ret    

81006c32 <strtok_r>:
81006c32:	55                   	push   %ebp
81006c33:	89 e5                	mov    %esp,%ebp
81006c35:	8b 45 08             	mov    0x8(%ebp),%eax
81006c38:	8b 55 0c             	mov    0xc(%ebp),%edx
81006c3b:	6a 01                	push   $0x1
81006c3d:	ff 75 10             	pushl  0x10(%ebp)
81006c40:	52                   	push   %edx
81006c41:	50                   	push   %eax
81006c42:	e8 2b ff ff ff       	call   81006b72 <__strtok_r>
81006c47:	83 c4 10             	add    $0x10,%esp
81006c4a:	c9                   	leave  
81006c4b:	c3                   	ret    

81006c4c <__locale_ctype_ptr_l>:
81006c4c:	55                   	push   %ebp
81006c4d:	89 e5                	mov    %esp,%ebp
81006c4f:	b8 20 89 00 81       	mov    $0x81008920,%eax
81006c54:	5d                   	pop    %ebp
81006c55:	c3                   	ret    

81006c56 <__get_global_locale>:
81006c56:	55                   	push   %ebp
81006c57:	89 e5                	mov    %esp,%ebp
81006c59:	b8 c0 92 00 81       	mov    $0x810092c0,%eax
81006c5e:	5d                   	pop    %ebp
81006c5f:	c3                   	ret    

81006c60 <__get_current_locale>:
81006c60:	55                   	push   %ebp
81006c61:	89 e5                	mov    %esp,%ebp
81006c63:	e8 ee ff ff ff       	call   81006c56 <__get_global_locale>
81006c68:	5d                   	pop    %ebp
81006c69:	c3                   	ret    

81006c6a <_strtol_l>:
81006c6a:	55                   	push   %ebp
81006c6b:	89 e5                	mov    %esp,%ebp
81006c6d:	57                   	push   %edi
81006c6e:	56                   	push   %esi
81006c6f:	53                   	push   %ebx
81006c70:	83 ec 1c             	sub    $0x1c,%esp
81006c73:	8b 75 0c             	mov    0xc(%ebp),%esi
81006c76:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006c7d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006c81:	78 0c                	js     81006c8f <_strtol_l+0x25>
81006c83:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81006c87:	74 06                	je     81006c8f <_strtol_l+0x25>
81006c89:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81006c8d:	7e 15                	jle    81006ca4 <_strtol_l+0x3a>
81006c8f:	e8 44 06 00 00       	call   810072d8 <__errno>
81006c94:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006c9a:	b8 00 00 00 00       	mov    $0x0,%eax
81006c9f:	e9 90 01 00 00       	jmp    81006e34 <_strtol_l+0x1ca>
81006ca4:	89 f0                	mov    %esi,%eax
81006ca6:	8d 70 01             	lea    0x1(%eax),%esi
81006ca9:	0f b6 00             	movzbl (%eax),%eax
81006cac:	0f b6 d8             	movzbl %al,%ebx
81006caf:	83 ec 0c             	sub    $0xc,%esp
81006cb2:	ff 75 18             	pushl  0x18(%ebp)
81006cb5:	e8 92 ff ff ff       	call   81006c4c <__locale_ctype_ptr_l>
81006cba:	83 c4 10             	add    $0x10,%esp
81006cbd:	89 da                	mov    %ebx,%edx
81006cbf:	83 c2 01             	add    $0x1,%edx
81006cc2:	01 d0                	add    %edx,%eax
81006cc4:	0f b6 00             	movzbl (%eax),%eax
81006cc7:	0f be c0             	movsbl %al,%eax
81006cca:	83 e0 08             	and    $0x8,%eax
81006ccd:	85 c0                	test   %eax,%eax
81006ccf:	75 d3                	jne    81006ca4 <_strtol_l+0x3a>
81006cd1:	83 fb 2d             	cmp    $0x2d,%ebx
81006cd4:	75 14                	jne    81006cea <_strtol_l+0x80>
81006cd6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006cdd:	89 f0                	mov    %esi,%eax
81006cdf:	8d 70 01             	lea    0x1(%eax),%esi
81006ce2:	0f b6 00             	movzbl (%eax),%eax
81006ce5:	0f b6 d8             	movzbl %al,%ebx
81006ce8:	eb 10                	jmp    81006cfa <_strtol_l+0x90>
81006cea:	83 fb 2b             	cmp    $0x2b,%ebx
81006ced:	75 0b                	jne    81006cfa <_strtol_l+0x90>
81006cef:	89 f0                	mov    %esi,%eax
81006cf1:	8d 70 01             	lea    0x1(%eax),%esi
81006cf4:	0f b6 00             	movzbl (%eax),%eax
81006cf7:	0f b6 d8             	movzbl %al,%ebx
81006cfa:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006cfe:	74 06                	je     81006d06 <_strtol_l+0x9c>
81006d00:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006d04:	75 26                	jne    81006d2c <_strtol_l+0xc2>
81006d06:	83 fb 30             	cmp    $0x30,%ebx
81006d09:	75 21                	jne    81006d2c <_strtol_l+0xc2>
81006d0b:	0f b6 06             	movzbl (%esi),%eax
81006d0e:	3c 78                	cmp    $0x78,%al
81006d10:	74 07                	je     81006d19 <_strtol_l+0xaf>
81006d12:	0f b6 06             	movzbl (%esi),%eax
81006d15:	3c 58                	cmp    $0x58,%al
81006d17:	75 13                	jne    81006d2c <_strtol_l+0xc2>
81006d19:	8d 46 01             	lea    0x1(%esi),%eax
81006d1c:	0f b6 00             	movzbl (%eax),%eax
81006d1f:	0f b6 d8             	movzbl %al,%ebx
81006d22:	83 c6 02             	add    $0x2,%esi
81006d25:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81006d2c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d30:	75 14                	jne    81006d46 <_strtol_l+0xdc>
81006d32:	83 fb 30             	cmp    $0x30,%ebx
81006d35:	75 07                	jne    81006d3e <_strtol_l+0xd4>
81006d37:	b8 08 00 00 00       	mov    $0x8,%eax
81006d3c:	eb 05                	jmp    81006d43 <_strtol_l+0xd9>
81006d3e:	b8 0a 00 00 00       	mov    $0xa,%eax
81006d43:	89 45 14             	mov    %eax,0x14(%ebp)
81006d46:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006d4a:	74 07                	je     81006d53 <_strtol_l+0xe9>
81006d4c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006d51:	eb 05                	jmp    81006d58 <_strtol_l+0xee>
81006d53:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006d58:	89 c7                	mov    %eax,%edi
81006d5a:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006d5d:	89 f8                	mov    %edi,%eax
81006d5f:	ba 00 00 00 00       	mov    $0x0,%edx
81006d64:	f7 f1                	div    %ecx
81006d66:	89 d0                	mov    %edx,%eax
81006d68:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006d6b:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006d6e:	89 f8                	mov    %edi,%eax
81006d70:	ba 00 00 00 00       	mov    $0x0,%edx
81006d75:	f7 f1                	div    %ecx
81006d77:	89 c2                	mov    %eax,%edx
81006d79:	bf 00 00 00 00       	mov    $0x0,%edi
81006d7e:	b9 00 00 00 00       	mov    $0x0,%ecx
81006d83:	83 fb 2f             	cmp    $0x2f,%ebx
81006d86:	7e 0a                	jle    81006d92 <_strtol_l+0x128>
81006d88:	83 fb 39             	cmp    $0x39,%ebx
81006d8b:	7f 05                	jg     81006d92 <_strtol_l+0x128>
81006d8d:	83 eb 30             	sub    $0x30,%ebx
81006d90:	eb 1c                	jmp    81006dae <_strtol_l+0x144>
81006d92:	83 fb 40             	cmp    $0x40,%ebx
81006d95:	7e 0a                	jle    81006da1 <_strtol_l+0x137>
81006d97:	83 fb 5a             	cmp    $0x5a,%ebx
81006d9a:	7f 05                	jg     81006da1 <_strtol_l+0x137>
81006d9c:	83 eb 37             	sub    $0x37,%ebx
81006d9f:	eb 0d                	jmp    81006dae <_strtol_l+0x144>
81006da1:	83 fb 60             	cmp    $0x60,%ebx
81006da4:	7e 46                	jle    81006dec <_strtol_l+0x182>
81006da6:	83 fb 7a             	cmp    $0x7a,%ebx
81006da9:	7f 41                	jg     81006dec <_strtol_l+0x182>
81006dab:	83 eb 57             	sub    $0x57,%ebx
81006dae:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81006db1:	7d 38                	jge    81006deb <_strtol_l+0x181>
81006db3:	89 c8                	mov    %ecx,%eax
81006db5:	85 c0                	test   %eax,%eax
81006db7:	78 0f                	js     81006dc8 <_strtol_l+0x15e>
81006db9:	89 d0                	mov    %edx,%eax
81006dbb:	39 c7                	cmp    %eax,%edi
81006dbd:	77 09                	ja     81006dc8 <_strtol_l+0x15e>
81006dbf:	39 c7                	cmp    %eax,%edi
81006dc1:	75 0c                	jne    81006dcf <_strtol_l+0x165>
81006dc3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006dc6:	7e 07                	jle    81006dcf <_strtol_l+0x165>
81006dc8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81006dcd:	eb 0f                	jmp    81006dde <_strtol_l+0x174>
81006dcf:	b9 01 00 00 00       	mov    $0x1,%ecx
81006dd4:	8b 45 14             	mov    0x14(%ebp),%eax
81006dd7:	0f af f8             	imul   %eax,%edi
81006dda:	89 d8                	mov    %ebx,%eax
81006ddc:	01 c7                	add    %eax,%edi
81006dde:	89 f0                	mov    %esi,%eax
81006de0:	8d 70 01             	lea    0x1(%eax),%esi
81006de3:	0f b6 00             	movzbl (%eax),%eax
81006de6:	0f b6 d8             	movzbl %al,%ebx
81006de9:	eb 98                	jmp    81006d83 <_strtol_l+0x119>
81006deb:	90                   	nop
81006dec:	89 c8                	mov    %ecx,%eax
81006dee:	85 c0                	test   %eax,%eax
81006df0:	79 1f                	jns    81006e11 <_strtol_l+0x1a7>
81006df2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006df6:	74 07                	je     81006dff <_strtol_l+0x195>
81006df8:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006dfd:	eb 05                	jmp    81006e04 <_strtol_l+0x19a>
81006dff:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006e04:	89 c7                	mov    %eax,%edi
81006e06:	8b 45 08             	mov    0x8(%ebp),%eax
81006e09:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81006e0f:	eb 08                	jmp    81006e19 <_strtol_l+0x1af>
81006e11:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006e15:	74 02                	je     81006e19 <_strtol_l+0x1af>
81006e17:	f7 df                	neg    %edi
81006e19:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006e1d:	74 13                	je     81006e32 <_strtol_l+0x1c8>
81006e1f:	89 c8                	mov    %ecx,%eax
81006e21:	85 c0                	test   %eax,%eax
81006e23:	74 05                	je     81006e2a <_strtol_l+0x1c0>
81006e25:	8d 46 ff             	lea    -0x1(%esi),%eax
81006e28:	eb 03                	jmp    81006e2d <_strtol_l+0x1c3>
81006e2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e2d:	8b 55 10             	mov    0x10(%ebp),%edx
81006e30:	89 02                	mov    %eax,(%edx)
81006e32:	89 f8                	mov    %edi,%eax
81006e34:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006e37:	5b                   	pop    %ebx
81006e38:	5e                   	pop    %esi
81006e39:	5f                   	pop    %edi
81006e3a:	5d                   	pop    %ebp
81006e3b:	c3                   	ret    

81006e3c <_strtol_r>:
81006e3c:	55                   	push   %ebp
81006e3d:	89 e5                	mov    %esp,%ebp
81006e3f:	83 ec 08             	sub    $0x8,%esp
81006e42:	e8 19 fe ff ff       	call   81006c60 <__get_current_locale>
81006e47:	83 ec 0c             	sub    $0xc,%esp
81006e4a:	50                   	push   %eax
81006e4b:	ff 75 14             	pushl  0x14(%ebp)
81006e4e:	ff 75 10             	pushl  0x10(%ebp)
81006e51:	ff 75 0c             	pushl  0xc(%ebp)
81006e54:	ff 75 08             	pushl  0x8(%ebp)
81006e57:	e8 0e fe ff ff       	call   81006c6a <_strtol_l>
81006e5c:	83 c4 20             	add    $0x20,%esp
81006e5f:	c9                   	leave  
81006e60:	c3                   	ret    

81006e61 <strtol_l>:
81006e61:	55                   	push   %ebp
81006e62:	89 e5                	mov    %esp,%ebp
81006e64:	83 ec 08             	sub    $0x8,%esp
81006e67:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81006e6c:	83 ec 0c             	sub    $0xc,%esp
81006e6f:	ff 75 14             	pushl  0x14(%ebp)
81006e72:	ff 75 10             	pushl  0x10(%ebp)
81006e75:	ff 75 0c             	pushl  0xc(%ebp)
81006e78:	ff 75 08             	pushl  0x8(%ebp)
81006e7b:	50                   	push   %eax
81006e7c:	e8 e9 fd ff ff       	call   81006c6a <_strtol_l>
81006e81:	83 c4 20             	add    $0x20,%esp
81006e84:	c9                   	leave  
81006e85:	c3                   	ret    

81006e86 <strtol>:
81006e86:	55                   	push   %ebp
81006e87:	89 e5                	mov    %esp,%ebp
81006e89:	83 ec 08             	sub    $0x8,%esp
81006e8c:	e8 cf fd ff ff       	call   81006c60 <__get_current_locale>
81006e91:	8b 15 84 8e 00 81    	mov    0x81008e84,%edx
81006e97:	83 ec 0c             	sub    $0xc,%esp
81006e9a:	50                   	push   %eax
81006e9b:	ff 75 10             	pushl  0x10(%ebp)
81006e9e:	ff 75 0c             	pushl  0xc(%ebp)
81006ea1:	ff 75 08             	pushl  0x8(%ebp)
81006ea4:	52                   	push   %edx
81006ea5:	e8 c0 fd ff ff       	call   81006c6a <_strtol_l>
81006eaa:	83 c4 20             	add    $0x20,%esp
81006ead:	c9                   	leave  
81006eae:	c3                   	ret    

81006eaf <__swbuf_r>:
81006eaf:	55                   	push   %ebp
81006eb0:	89 e5                	mov    %esp,%ebp
81006eb2:	57                   	push   %edi
81006eb3:	56                   	push   %esi
81006eb4:	53                   	push   %ebx
81006eb5:	83 ec 1c             	sub    $0x1c,%esp
81006eb8:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006ebb:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006ebe:	8b 45 08             	mov    0x8(%ebp),%eax
81006ec1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006ec4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006ec8:	74 18                	je     81006ee2 <__swbuf_r+0x33>
81006eca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006ecd:	8b 40 38             	mov    0x38(%eax),%eax
81006ed0:	85 c0                	test   %eax,%eax
81006ed2:	75 0e                	jne    81006ee2 <__swbuf_r+0x33>
81006ed4:	83 ec 0c             	sub    $0xc,%esp
81006ed7:	ff 75 e4             	pushl  -0x1c(%ebp)
81006eda:	e8 e4 a8 ff ff       	call   810017c3 <__sinit>
81006edf:	83 c4 10             	add    $0x10,%esp
81006ee2:	8b 43 18             	mov    0x18(%ebx),%eax
81006ee5:	89 43 08             	mov    %eax,0x8(%ebx)
81006ee8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006eec:	98                   	cwtl   
81006eed:	83 e0 08             	and    $0x8,%eax
81006ef0:	85 c0                	test   %eax,%eax
81006ef2:	74 07                	je     81006efb <__swbuf_r+0x4c>
81006ef4:	8b 43 10             	mov    0x10(%ebx),%eax
81006ef7:	85 c0                	test   %eax,%eax
81006ef9:	75 1d                	jne    81006f18 <__swbuf_r+0x69>
81006efb:	83 ec 08             	sub    $0x8,%esp
81006efe:	53                   	push   %ebx
81006eff:	ff 75 08             	pushl  0x8(%ebp)
81006f02:	e8 21 01 00 00       	call   81007028 <__swsetup_r>
81006f07:	83 c4 10             	add    $0x10,%esp
81006f0a:	85 c0                	test   %eax,%eax
81006f0c:	74 0a                	je     81006f18 <__swbuf_r+0x69>
81006f0e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006f13:	e9 a1 00 00 00       	jmp    81006fb9 <__swbuf_r+0x10a>
81006f18:	89 f8                	mov    %edi,%eax
81006f1a:	0f b6 f8             	movzbl %al,%edi
81006f1d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006f21:	98                   	cwtl   
81006f22:	25 00 20 00 00       	and    $0x2000,%eax
81006f27:	85 c0                	test   %eax,%eax
81006f29:	75 14                	jne    81006f3f <__swbuf_r+0x90>
81006f2b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006f2f:	80 cc 20             	or     $0x20,%ah
81006f32:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006f36:	8b 43 64             	mov    0x64(%ebx),%eax
81006f39:	80 e4 df             	and    $0xdf,%ah
81006f3c:	89 43 64             	mov    %eax,0x64(%ebx)
81006f3f:	8b 03                	mov    (%ebx),%eax
81006f41:	8b 53 10             	mov    0x10(%ebx),%edx
81006f44:	29 d0                	sub    %edx,%eax
81006f46:	89 c6                	mov    %eax,%esi
81006f48:	8b 43 14             	mov    0x14(%ebx),%eax
81006f4b:	39 c6                	cmp    %eax,%esi
81006f4d:	7c 1f                	jl     81006f6e <__swbuf_r+0xbf>
81006f4f:	83 ec 08             	sub    $0x8,%esp
81006f52:	53                   	push   %ebx
81006f53:	ff 75 08             	pushl  0x8(%ebp)
81006f56:	e8 7b a2 ff ff       	call   810011d6 <_fflush_r>
81006f5b:	83 c4 10             	add    $0x10,%esp
81006f5e:	85 c0                	test   %eax,%eax
81006f60:	74 07                	je     81006f69 <__swbuf_r+0xba>
81006f62:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006f67:	eb 50                	jmp    81006fb9 <__swbuf_r+0x10a>
81006f69:	be 00 00 00 00       	mov    $0x0,%esi
81006f6e:	8b 43 08             	mov    0x8(%ebx),%eax
81006f71:	83 e8 01             	sub    $0x1,%eax
81006f74:	89 43 08             	mov    %eax,0x8(%ebx)
81006f77:	8b 03                	mov    (%ebx),%eax
81006f79:	8d 50 01             	lea    0x1(%eax),%edx
81006f7c:	89 13                	mov    %edx,(%ebx)
81006f7e:	89 fa                	mov    %edi,%edx
81006f80:	88 10                	mov    %dl,(%eax)
81006f82:	83 c6 01             	add    $0x1,%esi
81006f85:	8b 43 14             	mov    0x14(%ebx),%eax
81006f88:	39 c6                	cmp    %eax,%esi
81006f8a:	74 11                	je     81006f9d <__swbuf_r+0xee>
81006f8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006f90:	98                   	cwtl   
81006f91:	83 e0 01             	and    $0x1,%eax
81006f94:	85 c0                	test   %eax,%eax
81006f96:	74 1f                	je     81006fb7 <__swbuf_r+0x108>
81006f98:	83 ff 0a             	cmp    $0xa,%edi
81006f9b:	75 1a                	jne    81006fb7 <__swbuf_r+0x108>
81006f9d:	83 ec 08             	sub    $0x8,%esp
81006fa0:	53                   	push   %ebx
81006fa1:	ff 75 08             	pushl  0x8(%ebp)
81006fa4:	e8 2d a2 ff ff       	call   810011d6 <_fflush_r>
81006fa9:	83 c4 10             	add    $0x10,%esp
81006fac:	85 c0                	test   %eax,%eax
81006fae:	74 07                	je     81006fb7 <__swbuf_r+0x108>
81006fb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006fb5:	eb 02                	jmp    81006fb9 <__swbuf_r+0x10a>
81006fb7:	89 f8                	mov    %edi,%eax
81006fb9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006fbc:	5b                   	pop    %ebx
81006fbd:	5e                   	pop    %esi
81006fbe:	5f                   	pop    %edi
81006fbf:	5d                   	pop    %ebp
81006fc0:	c3                   	ret    

81006fc1 <__swbuf>:
81006fc1:	55                   	push   %ebp
81006fc2:	89 e5                	mov    %esp,%ebp
81006fc4:	83 ec 08             	sub    $0x8,%esp
81006fc7:	8b 55 08             	mov    0x8(%ebp),%edx
81006fca:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006fcd:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81006fd2:	83 ec 04             	sub    $0x4,%esp
81006fd5:	51                   	push   %ecx
81006fd6:	52                   	push   %edx
81006fd7:	50                   	push   %eax
81006fd8:	e8 d2 fe ff ff       	call   81006eaf <__swbuf_r>
81006fdd:	83 c4 10             	add    $0x10,%esp
81006fe0:	c9                   	leave  
81006fe1:	c3                   	ret    

81006fe2 <_write_r>:
81006fe2:	55                   	push   %ebp
81006fe3:	89 e5                	mov    %esp,%ebp
81006fe5:	83 ec 18             	sub    $0x18,%esp
81006fe8:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
81006fef:	00 00 00 
81006ff2:	83 ec 04             	sub    $0x4,%esp
81006ff5:	ff 75 14             	pushl  0x14(%ebp)
81006ff8:	ff 75 10             	pushl  0x10(%ebp)
81006ffb:	ff 75 0c             	pushl  0xc(%ebp)
81006ffe:	e8 93 9b ff ff       	call   81000b96 <write>
81007003:	83 c4 10             	add    $0x10,%esp
81007006:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007009:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100700d:	75 14                	jne    81007023 <_write_r+0x41>
8100700f:	a1 cc 99 00 81       	mov    0x810099cc,%eax
81007014:	85 c0                	test   %eax,%eax
81007016:	74 0b                	je     81007023 <_write_r+0x41>
81007018:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
8100701e:	8b 45 08             	mov    0x8(%ebp),%eax
81007021:	89 10                	mov    %edx,(%eax)
81007023:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007026:	c9                   	leave  
81007027:	c3                   	ret    

81007028 <__swsetup_r>:
81007028:	55                   	push   %ebp
81007029:	89 e5                	mov    %esp,%ebp
8100702b:	53                   	push   %ebx
8100702c:	83 ec 14             	sub    $0x14,%esp
8100702f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81007032:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81007037:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100703a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100703e:	74 18                	je     81007058 <__swsetup_r+0x30>
81007040:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007043:	8b 40 38             	mov    0x38(%eax),%eax
81007046:	85 c0                	test   %eax,%eax
81007048:	75 0e                	jne    81007058 <__swsetup_r+0x30>
8100704a:	83 ec 0c             	sub    $0xc,%esp
8100704d:	ff 75 f4             	pushl  -0xc(%ebp)
81007050:	e8 6e a7 ff ff       	call   810017c3 <__sinit>
81007055:	83 c4 10             	add    $0x10,%esp
81007058:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100705c:	98                   	cwtl   
8100705d:	83 e0 08             	and    $0x8,%eax
81007060:	85 c0                	test   %eax,%eax
81007062:	0f 85 82 00 00 00    	jne    810070ea <__swsetup_r+0xc2>
81007068:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100706c:	98                   	cwtl   
8100706d:	83 e0 10             	and    $0x10,%eax
81007070:	85 c0                	test   %eax,%eax
81007072:	75 1e                	jne    81007092 <__swsetup_r+0x6a>
81007074:	8b 45 08             	mov    0x8(%ebp),%eax
81007077:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100707d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007081:	83 c8 40             	or     $0x40,%eax
81007084:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007088:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100708d:	e9 ec 00 00 00       	jmp    8100717e <__swsetup_r+0x156>
81007092:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007096:	98                   	cwtl   
81007097:	83 e0 04             	and    $0x4,%eax
8100709a:	85 c0                	test   %eax,%eax
8100709c:	74 41                	je     810070df <__swsetup_r+0xb7>
8100709e:	8b 43 30             	mov    0x30(%ebx),%eax
810070a1:	85 c0                	test   %eax,%eax
810070a3:	74 23                	je     810070c8 <__swsetup_r+0xa0>
810070a5:	8b 53 30             	mov    0x30(%ebx),%edx
810070a8:	8d 43 40             	lea    0x40(%ebx),%eax
810070ab:	39 c2                	cmp    %eax,%edx
810070ad:	74 12                	je     810070c1 <__swsetup_r+0x99>
810070af:	8b 43 30             	mov    0x30(%ebx),%eax
810070b2:	83 ec 08             	sub    $0x8,%esp
810070b5:	50                   	push   %eax
810070b6:	ff 75 08             	pushl  0x8(%ebp)
810070b9:	e8 ba ac ff ff       	call   81001d78 <_free_r>
810070be:	83 c4 10             	add    $0x10,%esp
810070c1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810070c8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070cc:	83 e0 db             	and    $0xffffffdb,%eax
810070cf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810070d3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810070da:	8b 43 10             	mov    0x10(%ebx),%eax
810070dd:	89 03                	mov    %eax,(%ebx)
810070df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070e3:	83 c8 08             	or     $0x8,%eax
810070e6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810070ea:	8b 43 10             	mov    0x10(%ebx),%eax
810070ed:	85 c0                	test   %eax,%eax
810070ef:	75 2b                	jne    8100711c <__swsetup_r+0xf4>
810070f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070f5:	98                   	cwtl   
810070f6:	25 00 02 00 00       	and    $0x200,%eax
810070fb:	85 c0                	test   %eax,%eax
810070fd:	74 0e                	je     8100710d <__swsetup_r+0xe5>
810070ff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007103:	98                   	cwtl   
81007104:	25 80 00 00 00       	and    $0x80,%eax
81007109:	85 c0                	test   %eax,%eax
8100710b:	74 0f                	je     8100711c <__swsetup_r+0xf4>
8100710d:	83 ec 08             	sub    $0x8,%esp
81007110:	53                   	push   %ebx
81007111:	ff 75 08             	pushl  0x8(%ebp)
81007114:	e8 28 cb ff ff       	call   81003c41 <__smakebuf_r>
81007119:	83 c4 10             	add    $0x10,%esp
8100711c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007120:	98                   	cwtl   
81007121:	83 e0 01             	and    $0x1,%eax
81007124:	85 c0                	test   %eax,%eax
81007126:	74 11                	je     81007139 <__swsetup_r+0x111>
81007128:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100712f:	8b 43 14             	mov    0x14(%ebx),%eax
81007132:	f7 d8                	neg    %eax
81007134:	89 43 18             	mov    %eax,0x18(%ebx)
81007137:	eb 19                	jmp    81007152 <__swsetup_r+0x12a>
81007139:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100713d:	98                   	cwtl   
8100713e:	83 e0 02             	and    $0x2,%eax
81007141:	85 c0                	test   %eax,%eax
81007143:	75 05                	jne    8100714a <__swsetup_r+0x122>
81007145:	8b 43 14             	mov    0x14(%ebx),%eax
81007148:	eb 05                	jmp    8100714f <__swsetup_r+0x127>
8100714a:	b8 00 00 00 00       	mov    $0x0,%eax
8100714f:	89 43 08             	mov    %eax,0x8(%ebx)
81007152:	8b 43 10             	mov    0x10(%ebx),%eax
81007155:	85 c0                	test   %eax,%eax
81007157:	75 20                	jne    81007179 <__swsetup_r+0x151>
81007159:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100715d:	98                   	cwtl   
8100715e:	25 80 00 00 00       	and    $0x80,%eax
81007163:	85 c0                	test   %eax,%eax
81007165:	74 12                	je     81007179 <__swsetup_r+0x151>
81007167:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100716b:	83 c8 40             	or     $0x40,%eax
8100716e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007172:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007177:	eb 05                	jmp    8100717e <__swsetup_r+0x156>
81007179:	b8 00 00 00 00       	mov    $0x0,%eax
8100717e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007181:	c9                   	leave  
81007182:	c3                   	ret    

81007183 <__call_exitprocs>:
81007183:	55                   	push   %ebp
81007184:	89 e5                	mov    %esp,%ebp
81007186:	57                   	push   %edi
81007187:	56                   	push   %esi
81007188:	53                   	push   %ebx
81007189:	83 ec 1c             	sub    $0x1c,%esp
8100718c:	a1 d4 86 00 81       	mov    0x810086d4,%eax
81007191:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81007197:	a1 d4 86 00 81       	mov    0x810086d4,%eax
8100719c:	05 48 01 00 00       	add    $0x148,%eax
810071a1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810071a4:	90                   	nop
810071a5:	85 db                	test   %ebx,%ebx
810071a7:	0f 84 e1 00 00 00    	je     8100728e <__call_exitprocs+0x10b>
810071ad:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
810071b3:	8b 43 04             	mov    0x4(%ebx),%eax
810071b6:	8d 70 ff             	lea    -0x1(%eax),%esi
810071b9:	e9 c6 00 00 00       	jmp    81007284 <__call_exitprocs+0x101>
810071be:	b8 01 00 00 00       	mov    $0x1,%eax
810071c3:	89 f1                	mov    %esi,%ecx
810071c5:	d3 e0                	shl    %cl,%eax
810071c7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810071ca:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810071ce:	74 17                	je     810071e7 <__call_exitprocs+0x64>
810071d0:	85 ff                	test   %edi,%edi
810071d2:	0f 84 a5 00 00 00    	je     8100727d <__call_exitprocs+0xfa>
810071d8:	8d 46 20             	lea    0x20(%esi),%eax
810071db:	8b 04 87             	mov    (%edi,%eax,4),%eax
810071de:	39 45 0c             	cmp    %eax,0xc(%ebp)
810071e1:	0f 85 96 00 00 00    	jne    8100727d <__call_exitprocs+0xfa>
810071e7:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
810071eb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810071ee:	8b 43 04             	mov    0x4(%ebx),%eax
810071f1:	83 e8 01             	sub    $0x1,%eax
810071f4:	39 c6                	cmp    %eax,%esi
810071f6:	75 0b                	jne    81007203 <__call_exitprocs+0x80>
810071f8:	8b 43 04             	mov    0x4(%ebx),%eax
810071fb:	83 e8 01             	sub    $0x1,%eax
810071fe:	89 43 04             	mov    %eax,0x4(%ebx)
81007201:	eb 08                	jmp    8100720b <__call_exitprocs+0x88>
81007203:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8100720a:	00 
8100720b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100720f:	74 6f                	je     81007280 <__call_exitprocs+0xfd>
81007211:	8b 43 04             	mov    0x4(%ebx),%eax
81007214:	89 45 d8             	mov    %eax,-0x28(%ebp)
81007217:	85 ff                	test   %edi,%edi
81007219:	74 0f                	je     8100722a <__call_exitprocs+0xa7>
8100721b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81007221:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007224:	21 d0                	and    %edx,%eax
81007226:	85 c0                	test   %eax,%eax
81007228:	75 07                	jne    81007231 <__call_exitprocs+0xae>
8100722a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100722d:	ff d0                	call   *%eax
8100722f:	eb 32                	jmp    81007263 <__call_exitprocs+0xe0>
81007231:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81007237:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100723a:	21 d0                	and    %edx,%eax
8100723c:	85 c0                	test   %eax,%eax
8100723e:	75 14                	jne    81007254 <__call_exitprocs+0xd1>
81007240:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81007243:	83 ec 08             	sub    $0x8,%esp
81007246:	50                   	push   %eax
81007247:	ff 75 08             	pushl  0x8(%ebp)
8100724a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100724d:	ff d0                	call   *%eax
8100724f:	83 c4 10             	add    $0x10,%esp
81007252:	eb 0f                	jmp    81007263 <__call_exitprocs+0xe0>
81007254:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81007257:	83 ec 0c             	sub    $0xc,%esp
8100725a:	50                   	push   %eax
8100725b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100725e:	ff d0                	call   *%eax
81007260:	83 c4 10             	add    $0x10,%esp
81007263:	8b 43 04             	mov    0x4(%ebx),%eax
81007266:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81007269:	0f 85 1d ff ff ff    	jne    8100718c <__call_exitprocs+0x9>
8100726f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007272:	8b 00                	mov    (%eax),%eax
81007274:	39 c3                	cmp    %eax,%ebx
81007276:	74 09                	je     81007281 <__call_exitprocs+0xfe>
81007278:	e9 0f ff ff ff       	jmp    8100718c <__call_exitprocs+0x9>
8100727d:	90                   	nop
8100727e:	eb 01                	jmp    81007281 <__call_exitprocs+0xfe>
81007280:	90                   	nop
81007281:	83 ee 01             	sub    $0x1,%esi
81007284:	85 f6                	test   %esi,%esi
81007286:	0f 89 32 ff ff ff    	jns    810071be <__call_exitprocs+0x3b>
8100728c:	eb 01                	jmp    8100728f <__call_exitprocs+0x10c>
8100728e:	90                   	nop
8100728f:	90                   	nop
81007290:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007293:	5b                   	pop    %ebx
81007294:	5e                   	pop    %esi
81007295:	5f                   	pop    %edi
81007296:	5d                   	pop    %ebp
81007297:	c3                   	ret    

81007298 <_close_r>:
81007298:	55                   	push   %ebp
81007299:	89 e5                	mov    %esp,%ebp
8100729b:	83 ec 18             	sub    $0x18,%esp
8100729e:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
810072a5:	00 00 00 
810072a8:	83 ec 0c             	sub    $0xc,%esp
810072ab:	ff 75 0c             	pushl  0xc(%ebp)
810072ae:	e8 3f 99 ff ff       	call   81000bf2 <close>
810072b3:	83 c4 10             	add    $0x10,%esp
810072b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810072b9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810072bd:	75 14                	jne    810072d3 <_close_r+0x3b>
810072bf:	a1 cc 99 00 81       	mov    0x810099cc,%eax
810072c4:	85 c0                	test   %eax,%eax
810072c6:	74 0b                	je     810072d3 <_close_r+0x3b>
810072c8:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
810072ce:	8b 45 08             	mov    0x8(%ebp),%eax
810072d1:	89 10                	mov    %edx,(%eax)
810072d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810072d6:	c9                   	leave  
810072d7:	c3                   	ret    

810072d8 <__errno>:
810072d8:	55                   	push   %ebp
810072d9:	89 e5                	mov    %esp,%ebp
810072db:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810072e0:	5d                   	pop    %ebp
810072e1:	c3                   	ret    

810072e2 <__sflags>:
810072e2:	55                   	push   %ebp
810072e3:	89 e5                	mov    %esp,%ebp
810072e5:	57                   	push   %edi
810072e6:	56                   	push   %esi
810072e7:	53                   	push   %ebx
810072e8:	8b 55 0c             	mov    0xc(%ebp),%edx
810072eb:	0f b6 02             	movzbl (%edx),%eax
810072ee:	0f be c0             	movsbl %al,%eax
810072f1:	83 f8 77             	cmp    $0x77,%eax
810072f4:	74 20                	je     81007316 <__sflags+0x34>
810072f6:	83 f8 77             	cmp    $0x77,%eax
810072f9:	7f 3d                	jg     81007338 <__sflags+0x56>
810072fb:	83 f8 61             	cmp    $0x61,%eax
810072fe:	74 27                	je     81007327 <__sflags+0x45>
81007300:	83 f8 72             	cmp    $0x72,%eax
81007303:	75 33                	jne    81007338 <__sflags+0x56>
81007305:	be 04 00 00 00       	mov    $0x4,%esi
8100730a:	bb 00 00 00 00       	mov    $0x0,%ebx
8100730f:	bf 00 00 00 00       	mov    $0x0,%edi
81007314:	eb 32                	jmp    81007348 <__sflags+0x66>
81007316:	be 08 00 00 00       	mov    $0x8,%esi
8100731b:	bb 01 00 00 00       	mov    $0x1,%ebx
81007320:	bf 00 06 00 00       	mov    $0x600,%edi
81007325:	eb 21                	jmp    81007348 <__sflags+0x66>
81007327:	be 08 01 00 00       	mov    $0x108,%esi
8100732c:	bb 01 00 00 00       	mov    $0x1,%ebx
81007331:	bf 08 02 00 00       	mov    $0x208,%edi
81007336:	eb 10                	jmp    81007348 <__sflags+0x66>
81007338:	8b 45 08             	mov    0x8(%ebp),%eax
8100733b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81007341:	b8 00 00 00 00       	mov    $0x0,%eax
81007346:	eb 4f                	jmp    81007397 <__sflags+0xb5>
81007348:	eb 38                	jmp    81007382 <__sflags+0xa0>
8100734a:	0f b6 02             	movzbl (%edx),%eax
8100734d:	0f be c0             	movsbl %al,%eax
81007350:	83 f8 78             	cmp    $0x78,%eax
81007353:	74 27                	je     8100737c <__sflags+0x9a>
81007355:	83 f8 78             	cmp    $0x78,%eax
81007358:	7f 27                	jg     81007381 <__sflags+0x9f>
8100735a:	83 f8 2b             	cmp    $0x2b,%eax
8100735d:	74 07                	je     81007366 <__sflags+0x84>
8100735f:	83 f8 62             	cmp    $0x62,%eax
81007362:	74 1e                	je     81007382 <__sflags+0xa0>
81007364:	eb 1b                	jmp    81007381 <__sflags+0x9f>
81007366:	89 f0                	mov    %esi,%eax
81007368:	83 e0 e3             	and    $0xffffffe3,%eax
8100736b:	83 c8 10             	or     $0x10,%eax
8100736e:	89 c6                	mov    %eax,%esi
81007370:	89 d8                	mov    %ebx,%eax
81007372:	83 e0 fc             	and    $0xfffffffc,%eax
81007375:	83 c8 02             	or     $0x2,%eax
81007378:	89 c3                	mov    %eax,%ebx
8100737a:	eb 06                	jmp    81007382 <__sflags+0xa0>
8100737c:	80 cf 08             	or     $0x8,%bh
8100737f:	eb 01                	jmp    81007382 <__sflags+0xa0>
81007381:	90                   	nop
81007382:	83 c2 01             	add    $0x1,%edx
81007385:	0f b6 02             	movzbl (%edx),%eax
81007388:	84 c0                	test   %al,%al
8100738a:	75 be                	jne    8100734a <__sflags+0x68>
8100738c:	89 da                	mov    %ebx,%edx
8100738e:	09 fa                	or     %edi,%edx
81007390:	8b 45 10             	mov    0x10(%ebp),%eax
81007393:	89 10                	mov    %edx,(%eax)
81007395:	89 f0                	mov    %esi,%eax
81007397:	5b                   	pop    %ebx
81007398:	5e                   	pop    %esi
81007399:	5f                   	pop    %edi
8100739a:	5d                   	pop    %ebp
8100739b:	c3                   	ret    

8100739c <_fputc_r>:
8100739c:	55                   	push   %ebp
8100739d:	89 e5                	mov    %esp,%ebp
8100739f:	83 ec 18             	sub    $0x18,%esp
810073a2:	8b 45 08             	mov    0x8(%ebp),%eax
810073a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810073a8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810073ac:	74 18                	je     810073c6 <_fputc_r+0x2a>
810073ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810073b1:	8b 40 38             	mov    0x38(%eax),%eax
810073b4:	85 c0                	test   %eax,%eax
810073b6:	75 0e                	jne    810073c6 <_fputc_r+0x2a>
810073b8:	83 ec 0c             	sub    $0xc,%esp
810073bb:	ff 75 f4             	pushl  -0xc(%ebp)
810073be:	e8 00 a4 ff ff       	call   810017c3 <__sinit>
810073c3:	83 c4 10             	add    $0x10,%esp
810073c6:	83 ec 04             	sub    $0x4,%esp
810073c9:	ff 75 10             	pushl  0x10(%ebp)
810073cc:	ff 75 0c             	pushl  0xc(%ebp)
810073cf:	ff 75 08             	pushl  0x8(%ebp)
810073d2:	e8 a3 0c 00 00       	call   8100807a <_putc_r>
810073d7:	83 c4 10             	add    $0x10,%esp
810073da:	89 45 f0             	mov    %eax,-0x10(%ebp)
810073dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810073e0:	c9                   	leave  
810073e1:	c3                   	ret    

810073e2 <fputc>:
810073e2:	55                   	push   %ebp
810073e3:	89 e5                	mov    %esp,%ebp
810073e5:	83 ec 18             	sub    $0x18,%esp
810073e8:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810073ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810073f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810073f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810073f6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810073fa:	74 18                	je     81007414 <fputc+0x32>
810073fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810073ff:	8b 40 38             	mov    0x38(%eax),%eax
81007402:	85 c0                	test   %eax,%eax
81007404:	75 0e                	jne    81007414 <fputc+0x32>
81007406:	83 ec 0c             	sub    $0xc,%esp
81007409:	ff 75 f0             	pushl  -0x10(%ebp)
8100740c:	e8 b2 a3 ff ff       	call   810017c3 <__sinit>
81007411:	83 c4 10             	add    $0x10,%esp
81007414:	83 ec 04             	sub    $0x4,%esp
81007417:	ff 75 0c             	pushl  0xc(%ebp)
8100741a:	ff 75 08             	pushl  0x8(%ebp)
8100741d:	ff 75 f4             	pushl  -0xc(%ebp)
81007420:	e8 55 0c 00 00       	call   8100807a <_putc_r>
81007425:	83 c4 10             	add    $0x10,%esp
81007428:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100742b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100742e:	c9                   	leave  
8100742f:	c3                   	ret    

81007430 <__sputc_r>:
81007430:	55                   	push   %ebp
81007431:	89 e5                	mov    %esp,%ebp
81007433:	83 ec 08             	sub    $0x8,%esp
81007436:	8b 45 10             	mov    0x10(%ebp),%eax
81007439:	8b 40 08             	mov    0x8(%eax),%eax
8100743c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100743f:	8b 45 10             	mov    0x10(%ebp),%eax
81007442:	89 50 08             	mov    %edx,0x8(%eax)
81007445:	8b 45 10             	mov    0x10(%ebp),%eax
81007448:	8b 40 08             	mov    0x8(%eax),%eax
8100744b:	85 c0                	test   %eax,%eax
8100744d:	79 17                	jns    81007466 <__sputc_r+0x36>
8100744f:	8b 45 10             	mov    0x10(%ebp),%eax
81007452:	8b 50 08             	mov    0x8(%eax),%edx
81007455:	8b 45 10             	mov    0x10(%ebp),%eax
81007458:	8b 40 18             	mov    0x18(%eax),%eax
8100745b:	39 c2                	cmp    %eax,%edx
8100745d:	7c 21                	jl     81007480 <__sputc_r+0x50>
8100745f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007462:	3c 0a                	cmp    $0xa,%al
81007464:	74 1a                	je     81007480 <__sputc_r+0x50>
81007466:	8b 45 10             	mov    0x10(%ebp),%eax
81007469:	8b 00                	mov    (%eax),%eax
8100746b:	8d 48 01             	lea    0x1(%eax),%ecx
8100746e:	8b 55 10             	mov    0x10(%ebp),%edx
81007471:	89 0a                	mov    %ecx,(%edx)
81007473:	8b 55 0c             	mov    0xc(%ebp),%edx
81007476:	88 10                	mov    %dl,(%eax)
81007478:	0f b6 00             	movzbl (%eax),%eax
8100747b:	0f b6 c0             	movzbl %al,%eax
8100747e:	eb 14                	jmp    81007494 <__sputc_r+0x64>
81007480:	83 ec 04             	sub    $0x4,%esp
81007483:	ff 75 10             	pushl  0x10(%ebp)
81007486:	ff 75 0c             	pushl  0xc(%ebp)
81007489:	ff 75 08             	pushl  0x8(%ebp)
8100748c:	e8 1e fa ff ff       	call   81006eaf <__swbuf_r>
81007491:	83 c4 10             	add    $0x10,%esp
81007494:	c9                   	leave  
81007495:	c3                   	ret    

81007496 <__fputwc>:
81007496:	55                   	push   %ebp
81007497:	89 e5                	mov    %esp,%ebp
81007499:	83 ec 18             	sub    $0x18,%esp
8100749c:	e8 41 03 00 00       	call   810077e2 <__locale_mb_cur_max>
810074a1:	83 f8 01             	cmp    $0x1,%eax
810074a4:	75 1e                	jne    810074c4 <__fputwc+0x2e>
810074a6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810074aa:	7e 18                	jle    810074c4 <__fputwc+0x2e>
810074ac:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810074b3:	7f 0f                	jg     810074c4 <__fputwc+0x2e>
810074b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810074b8:	88 45 ef             	mov    %al,-0x11(%ebp)
810074bb:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810074c2:	eb 3c                	jmp    81007500 <__fputwc+0x6a>
810074c4:	8b 45 10             	mov    0x10(%ebp),%eax
810074c7:	83 c0 5c             	add    $0x5c,%eax
810074ca:	50                   	push   %eax
810074cb:	ff 75 0c             	pushl  0xc(%ebp)
810074ce:	8d 45 ef             	lea    -0x11(%ebp),%eax
810074d1:	50                   	push   %eax
810074d2:	ff 75 08             	pushl  0x8(%ebp)
810074d5:	e8 7b 0d 00 00       	call   81008255 <_wcrtomb_r>
810074da:	83 c4 10             	add    $0x10,%esp
810074dd:	89 45 f0             	mov    %eax,-0x10(%ebp)
810074e0:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810074e4:	75 1a                	jne    81007500 <__fputwc+0x6a>
810074e6:	8b 45 10             	mov    0x10(%ebp),%eax
810074e9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810074ed:	83 c8 40             	or     $0x40,%eax
810074f0:	89 c2                	mov    %eax,%edx
810074f2:	8b 45 10             	mov    0x10(%ebp),%eax
810074f5:	66 89 50 0c          	mov    %dx,0xc(%eax)
810074f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810074fe:	eb 44                	jmp    81007544 <__fputwc+0xae>
81007500:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007507:	eb 30                	jmp    81007539 <__fputwc+0xa3>
81007509:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100750c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100750f:	01 d0                	add    %edx,%eax
81007511:	0f b6 00             	movzbl (%eax),%eax
81007514:	0f b6 c0             	movzbl %al,%eax
81007517:	83 ec 04             	sub    $0x4,%esp
8100751a:	ff 75 10             	pushl  0x10(%ebp)
8100751d:	50                   	push   %eax
8100751e:	ff 75 08             	pushl  0x8(%ebp)
81007521:	e8 0a ff ff ff       	call   81007430 <__sputc_r>
81007526:	83 c4 10             	add    $0x10,%esp
81007529:	83 f8 ff             	cmp    $0xffffffff,%eax
8100752c:	75 07                	jne    81007535 <__fputwc+0x9f>
8100752e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007533:	eb 0f                	jmp    81007544 <__fputwc+0xae>
81007535:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81007539:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100753c:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100753f:	72 c8                	jb     81007509 <__fputwc+0x73>
81007541:	8b 45 0c             	mov    0xc(%ebp),%eax
81007544:	c9                   	leave  
81007545:	c3                   	ret    

81007546 <_fputwc_r>:
81007546:	55                   	push   %ebp
81007547:	89 e5                	mov    %esp,%ebp
81007549:	83 ec 18             	sub    $0x18,%esp
8100754c:	8b 45 10             	mov    0x10(%ebp),%eax
8100754f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007553:	98                   	cwtl   
81007554:	25 00 20 00 00       	and    $0x2000,%eax
81007559:	85 c0                	test   %eax,%eax
8100755b:	75 24                	jne    81007581 <_fputwc_r+0x3b>
8100755d:	8b 45 10             	mov    0x10(%ebp),%eax
81007560:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007564:	80 cc 20             	or     $0x20,%ah
81007567:	89 c2                	mov    %eax,%edx
81007569:	8b 45 10             	mov    0x10(%ebp),%eax
8100756c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007570:	8b 45 10             	mov    0x10(%ebp),%eax
81007573:	8b 40 64             	mov    0x64(%eax),%eax
81007576:	80 cc 20             	or     $0x20,%ah
81007579:	89 c2                	mov    %eax,%edx
8100757b:	8b 45 10             	mov    0x10(%ebp),%eax
8100757e:	89 50 64             	mov    %edx,0x64(%eax)
81007581:	83 ec 04             	sub    $0x4,%esp
81007584:	ff 75 10             	pushl  0x10(%ebp)
81007587:	ff 75 0c             	pushl  0xc(%ebp)
8100758a:	ff 75 08             	pushl  0x8(%ebp)
8100758d:	e8 04 ff ff ff       	call   81007496 <__fputwc>
81007592:	83 c4 10             	add    $0x10,%esp
81007595:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007598:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100759b:	c9                   	leave  
8100759c:	c3                   	ret    

8100759d <fputwc>:
8100759d:	55                   	push   %ebp
8100759e:	89 e5                	mov    %esp,%ebp
810075a0:	83 ec 18             	sub    $0x18,%esp
810075a3:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810075a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810075ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810075ae:	89 45 f0             	mov    %eax,-0x10(%ebp)
810075b1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810075b5:	74 18                	je     810075cf <fputwc+0x32>
810075b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810075ba:	8b 40 38             	mov    0x38(%eax),%eax
810075bd:	85 c0                	test   %eax,%eax
810075bf:	75 0e                	jne    810075cf <fputwc+0x32>
810075c1:	83 ec 0c             	sub    $0xc,%esp
810075c4:	ff 75 f0             	pushl  -0x10(%ebp)
810075c7:	e8 f7 a1 ff ff       	call   810017c3 <__sinit>
810075cc:	83 c4 10             	add    $0x10,%esp
810075cf:	83 ec 04             	sub    $0x4,%esp
810075d2:	ff 75 0c             	pushl  0xc(%ebp)
810075d5:	ff 75 08             	pushl  0x8(%ebp)
810075d8:	ff 75 f4             	pushl  -0xc(%ebp)
810075db:	e8 66 ff ff ff       	call   81007546 <_fputwc_r>
810075e0:	83 c4 10             	add    $0x10,%esp
810075e3:	c9                   	leave  
810075e4:	c3                   	ret    

810075e5 <_findenv>:
810075e5:	55                   	push   %ebp
810075e6:	89 e5                	mov    %esp,%ebp
810075e8:	83 ec 08             	sub    $0x8,%esp
810075eb:	8b 55 08             	mov    0x8(%ebp),%edx
810075ee:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810075f3:	83 ec 04             	sub    $0x4,%esp
810075f6:	ff 75 0c             	pushl  0xc(%ebp)
810075f9:	52                   	push   %edx
810075fa:	50                   	push   %eax
810075fb:	e8 25 00 00 00       	call   81007625 <_findenv_r>
81007600:	83 c4 10             	add    $0x10,%esp
81007603:	c9                   	leave  
81007604:	c3                   	ret    

81007605 <getenv>:
81007605:	55                   	push   %ebp
81007606:	89 e5                	mov    %esp,%ebp
81007608:	83 ec 18             	sub    $0x18,%esp
8100760b:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81007610:	83 ec 04             	sub    $0x4,%esp
81007613:	8d 55 f4             	lea    -0xc(%ebp),%edx
81007616:	52                   	push   %edx
81007617:	ff 75 08             	pushl  0x8(%ebp)
8100761a:	50                   	push   %eax
8100761b:	e8 05 00 00 00       	call   81007625 <_findenv_r>
81007620:	83 c4 10             	add    $0x10,%esp
81007623:	c9                   	leave  
81007624:	c3                   	ret    

81007625 <_findenv_r>:
81007625:	55                   	push   %ebp
81007626:	89 e5                	mov    %esp,%ebp
81007628:	57                   	push   %edi
81007629:	56                   	push   %esi
8100762a:	53                   	push   %ebx
8100762b:	83 ec 1c             	sub    $0x1c,%esp
8100762e:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007631:	83 ec 0c             	sub    $0xc,%esp
81007634:	ff 75 08             	pushl  0x8(%ebp)
81007637:	e8 8a 0d 00 00       	call   810083c6 <__env_lock>
8100763c:	83 c4 10             	add    $0x10,%esp
8100763f:	a1 b0 92 00 81       	mov    0x810092b0,%eax
81007644:	8b 00                	mov    (%eax),%eax
81007646:	85 c0                	test   %eax,%eax
81007648:	75 18                	jne    81007662 <_findenv_r+0x3d>
8100764a:	83 ec 0c             	sub    $0xc,%esp
8100764d:	ff 75 08             	pushl  0x8(%ebp)
81007650:	e8 77 0d 00 00       	call   810083cc <__env_unlock>
81007655:	83 c4 10             	add    $0x10,%esp
81007658:	b8 00 00 00 00       	mov    $0x0,%eax
8100765d:	e9 a8 00 00 00       	jmp    8100770a <_findenv_r+0xe5>
81007662:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81007665:	eb 04                	jmp    8100766b <_findenv_r+0x46>
81007667:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100766b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100766e:	0f b6 00             	movzbl (%eax),%eax
81007671:	84 c0                	test   %al,%al
81007673:	74 0a                	je     8100767f <_findenv_r+0x5a>
81007675:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007678:	0f b6 00             	movzbl (%eax),%eax
8100767b:	3c 3d                	cmp    $0x3d,%al
8100767d:	75 e8                	jne    81007667 <_findenv_r+0x42>
8100767f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007682:	0f b6 00             	movzbl (%eax),%eax
81007685:	3c 3d                	cmp    $0x3d,%al
81007687:	74 6e                	je     810076f7 <_findenv_r+0xd2>
81007689:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100768c:	29 f8                	sub    %edi,%eax
8100768e:	89 c6                	mov    %eax,%esi
81007690:	a1 b0 92 00 81       	mov    0x810092b0,%eax
81007695:	8b 18                	mov    (%eax),%ebx
81007697:	eb 58                	jmp    810076f1 <_findenv_r+0xcc>
81007699:	89 f2                	mov    %esi,%edx
8100769b:	8b 03                	mov    (%ebx),%eax
8100769d:	83 ec 04             	sub    $0x4,%esp
810076a0:	52                   	push   %edx
810076a1:	57                   	push   %edi
810076a2:	50                   	push   %eax
810076a3:	e8 b6 0a 00 00       	call   8100815e <strncmp>
810076a8:	83 c4 10             	add    $0x10,%esp
810076ab:	85 c0                	test   %eax,%eax
810076ad:	75 3f                	jne    810076ee <_findenv_r+0xc9>
810076af:	8b 03                	mov    (%ebx),%eax
810076b1:	89 f2                	mov    %esi,%edx
810076b3:	01 d0                	add    %edx,%eax
810076b5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810076b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810076bb:	0f b6 00             	movzbl (%eax),%eax
810076be:	3c 3d                	cmp    $0x3d,%al
810076c0:	75 2c                	jne    810076ee <_findenv_r+0xc9>
810076c2:	a1 b0 92 00 81       	mov    0x810092b0,%eax
810076c7:	8b 10                	mov    (%eax),%edx
810076c9:	89 d8                	mov    %ebx,%eax
810076cb:	29 d0                	sub    %edx,%eax
810076cd:	c1 f8 02             	sar    $0x2,%eax
810076d0:	89 c2                	mov    %eax,%edx
810076d2:	8b 45 10             	mov    0x10(%ebp),%eax
810076d5:	89 10                	mov    %edx,(%eax)
810076d7:	83 ec 0c             	sub    $0xc,%esp
810076da:	ff 75 08             	pushl  0x8(%ebp)
810076dd:	e8 ea 0c 00 00       	call   810083cc <__env_unlock>
810076e2:	83 c4 10             	add    $0x10,%esp
810076e5:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810076e9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810076ec:	eb 1c                	jmp    8100770a <_findenv_r+0xe5>
810076ee:	83 c3 04             	add    $0x4,%ebx
810076f1:	8b 03                	mov    (%ebx),%eax
810076f3:	85 c0                	test   %eax,%eax
810076f5:	75 a2                	jne    81007699 <_findenv_r+0x74>
810076f7:	83 ec 0c             	sub    $0xc,%esp
810076fa:	ff 75 08             	pushl  0x8(%ebp)
810076fd:	e8 ca 0c 00 00       	call   810083cc <__env_unlock>
81007702:	83 c4 10             	add    $0x10,%esp
81007705:	b8 00 00 00 00       	mov    $0x0,%eax
8100770a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100770d:	5b                   	pop    %ebx
8100770e:	5e                   	pop    %esi
8100770f:	5f                   	pop    %edi
81007710:	5d                   	pop    %ebp
81007711:	c3                   	ret    

81007712 <_getenv_r>:
81007712:	55                   	push   %ebp
81007713:	89 e5                	mov    %esp,%ebp
81007715:	83 ec 18             	sub    $0x18,%esp
81007718:	83 ec 04             	sub    $0x4,%esp
8100771b:	8d 45 f4             	lea    -0xc(%ebp),%eax
8100771e:	50                   	push   %eax
8100771f:	ff 75 0c             	pushl  0xc(%ebp)
81007722:	ff 75 08             	pushl  0x8(%ebp)
81007725:	e8 fb fe ff ff       	call   81007625 <_findenv_r>
8100772a:	83 c4 10             	add    $0x10,%esp
8100772d:	c9                   	leave  
8100772e:	c3                   	ret    

8100772f <_isatty_r>:
8100772f:	55                   	push   %ebp
81007730:	89 e5                	mov    %esp,%ebp
81007732:	83 ec 18             	sub    $0x18,%esp
81007735:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
8100773c:	00 00 00 
8100773f:	83 ec 0c             	sub    $0xc,%esp
81007742:	ff 75 0c             	pushl  0xc(%ebp)
81007745:	e8 12 95 ff ff       	call   81000c5c <isatty>
8100774a:	83 c4 10             	add    $0x10,%esp
8100774d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007750:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007754:	75 14                	jne    8100776a <_isatty_r+0x3b>
81007756:	a1 cc 99 00 81       	mov    0x810099cc,%eax
8100775b:	85 c0                	test   %eax,%eax
8100775d:	74 0b                	je     8100776a <_isatty_r+0x3b>
8100775f:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
81007765:	8b 45 08             	mov    0x8(%ebp),%eax
81007768:	89 10                	mov    %edx,(%eax)
8100776a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100776d:	c9                   	leave  
8100776e:	c3                   	ret    

8100776f <__get_global_locale>:
8100776f:	55                   	push   %ebp
81007770:	89 e5                	mov    %esp,%ebp
81007772:	b8 c0 92 00 81       	mov    $0x810092c0,%eax
81007777:	5d                   	pop    %ebp
81007778:	c3                   	ret    

81007779 <__get_current_locale>:
81007779:	55                   	push   %ebp
8100777a:	89 e5                	mov    %esp,%ebp
8100777c:	e8 ee ff ff ff       	call   8100776f <__get_global_locale>
81007781:	5d                   	pop    %ebp
81007782:	c3                   	ret    

81007783 <_setlocale_r>:
81007783:	55                   	push   %ebp
81007784:	89 e5                	mov    %esp,%ebp
81007786:	83 ec 08             	sub    $0x8,%esp
81007789:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100778d:	74 4c                	je     810077db <_setlocale_r+0x58>
8100778f:	83 ec 08             	sub    $0x8,%esp
81007792:	68 24 8a 00 81       	push   $0x81008a24
81007797:	ff 75 10             	pushl  0x10(%ebp)
8100779a:	e8 7d f2 ff ff       	call   81006a1c <strcmp>
8100779f:	83 c4 10             	add    $0x10,%esp
810077a2:	85 c0                	test   %eax,%eax
810077a4:	74 35                	je     810077db <_setlocale_r+0x58>
810077a6:	83 ec 08             	sub    $0x8,%esp
810077a9:	68 2a 8a 00 81       	push   $0x81008a2a
810077ae:	ff 75 10             	pushl  0x10(%ebp)
810077b1:	e8 66 f2 ff ff       	call   81006a1c <strcmp>
810077b6:	83 c4 10             	add    $0x10,%esp
810077b9:	85 c0                	test   %eax,%eax
810077bb:	74 1e                	je     810077db <_setlocale_r+0x58>
810077bd:	83 ec 08             	sub    $0x8,%esp
810077c0:	68 23 8a 00 81       	push   $0x81008a23
810077c5:	ff 75 10             	pushl  0x10(%ebp)
810077c8:	e8 4f f2 ff ff       	call   81006a1c <strcmp>
810077cd:	83 c4 10             	add    $0x10,%esp
810077d0:	85 c0                	test   %eax,%eax
810077d2:	74 07                	je     810077db <_setlocale_r+0x58>
810077d4:	b8 00 00 00 00       	mov    $0x0,%eax
810077d9:	eb 05                	jmp    810077e0 <_setlocale_r+0x5d>
810077db:	b8 2a 8a 00 81       	mov    $0x81008a2a,%eax
810077e0:	c9                   	leave  
810077e1:	c3                   	ret    

810077e2 <__locale_mb_cur_max>:
810077e2:	55                   	push   %ebp
810077e3:	89 e5                	mov    %esp,%ebp
810077e5:	e8 8f ff ff ff       	call   81007779 <__get_current_locale>
810077ea:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
810077f1:	0f be c0             	movsbl %al,%eax
810077f4:	5d                   	pop    %ebp
810077f5:	c3                   	ret    

810077f6 <setlocale>:
810077f6:	55                   	push   %ebp
810077f7:	89 e5                	mov    %esp,%ebp
810077f9:	83 ec 08             	sub    $0x8,%esp
810077fc:	a1 84 8e 00 81       	mov    0x81008e84,%eax
81007801:	83 ec 04             	sub    $0x4,%esp
81007804:	ff 75 0c             	pushl  0xc(%ebp)
81007807:	ff 75 08             	pushl  0x8(%ebp)
8100780a:	50                   	push   %eax
8100780b:	e8 73 ff ff ff       	call   81007783 <_setlocale_r>
81007810:	83 c4 10             	add    $0x10,%esp
81007813:	c9                   	leave  
81007814:	c3                   	ret    

81007815 <_lseek_r>:
81007815:	55                   	push   %ebp
81007816:	89 e5                	mov    %esp,%ebp
81007818:	83 ec 18             	sub    $0x18,%esp
8100781b:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
81007822:	00 00 00 
81007825:	83 ec 04             	sub    $0x4,%esp
81007828:	ff 75 14             	pushl  0x14(%ebp)
8100782b:	ff 75 10             	pushl  0x10(%ebp)
8100782e:	ff 75 0c             	pushl  0xc(%ebp)
81007831:	e8 8e 93 ff ff       	call   81000bc4 <lseek>
81007836:	83 c4 10             	add    $0x10,%esp
81007839:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100783c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007840:	75 14                	jne    81007856 <_lseek_r+0x41>
81007842:	a1 cc 99 00 81       	mov    0x810099cc,%eax
81007847:	85 c0                	test   %eax,%eax
81007849:	74 0b                	je     81007856 <_lseek_r+0x41>
8100784b:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
81007851:	8b 45 08             	mov    0x8(%ebp),%eax
81007854:	89 10                	mov    %edx,(%eax)
81007856:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007859:	c9                   	leave  
8100785a:	c3                   	ret    

8100785b <__get_global_locale>:
8100785b:	55                   	push   %ebp
8100785c:	89 e5                	mov    %esp,%ebp
8100785e:	b8 c0 92 00 81       	mov    $0x810092c0,%eax
81007863:	5d                   	pop    %ebp
81007864:	c3                   	ret    

81007865 <__get_current_locale>:
81007865:	55                   	push   %ebp
81007866:	89 e5                	mov    %esp,%ebp
81007868:	e8 ee ff ff ff       	call   8100785b <__get_global_locale>
8100786d:	5d                   	pop    %ebp
8100786e:	c3                   	ret    

8100786f <_mbtowc_r>:
8100786f:	55                   	push   %ebp
81007870:	89 e5                	mov    %esp,%ebp
81007872:	83 ec 08             	sub    $0x8,%esp
81007875:	e8 eb ff ff ff       	call   81007865 <__get_current_locale>
8100787a:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81007880:	83 ec 0c             	sub    $0xc,%esp
81007883:	ff 75 18             	pushl  0x18(%ebp)
81007886:	ff 75 14             	pushl  0x14(%ebp)
81007889:	ff 75 10             	pushl  0x10(%ebp)
8100788c:	ff 75 0c             	pushl  0xc(%ebp)
8100788f:	ff 75 08             	pushl  0x8(%ebp)
81007892:	ff d0                	call   *%eax
81007894:	83 c4 20             	add    $0x20,%esp
81007897:	c9                   	leave  
81007898:	c3                   	ret    

81007899 <__ascii_mbtowc>:
81007899:	55                   	push   %ebp
8100789a:	89 e5                	mov    %esp,%ebp
8100789c:	83 ec 10             	sub    $0x10,%esp
8100789f:	8b 45 10             	mov    0x10(%ebp),%eax
810078a2:	89 45 fc             	mov    %eax,-0x4(%ebp)
810078a5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810078a9:	75 06                	jne    810078b1 <__ascii_mbtowc+0x18>
810078ab:	8d 45 f8             	lea    -0x8(%ebp),%eax
810078ae:	89 45 0c             	mov    %eax,0xc(%ebp)
810078b1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810078b5:	75 07                	jne    810078be <__ascii_mbtowc+0x25>
810078b7:	b8 00 00 00 00       	mov    $0x0,%eax
810078bc:	eb 31                	jmp    810078ef <__ascii_mbtowc+0x56>
810078be:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810078c2:	75 07                	jne    810078cb <__ascii_mbtowc+0x32>
810078c4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
810078c9:	eb 24                	jmp    810078ef <__ascii_mbtowc+0x56>
810078cb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810078ce:	0f b6 00             	movzbl (%eax),%eax
810078d1:	0f b6 d0             	movzbl %al,%edx
810078d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810078d7:	89 10                	mov    %edx,(%eax)
810078d9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810078dc:	0f b6 00             	movzbl (%eax),%eax
810078df:	84 c0                	test   %al,%al
810078e1:	75 07                	jne    810078ea <__ascii_mbtowc+0x51>
810078e3:	b8 00 00 00 00       	mov    $0x0,%eax
810078e8:	eb 05                	jmp    810078ef <__ascii_mbtowc+0x56>
810078ea:	b8 01 00 00 00       	mov    $0x1,%eax
810078ef:	c9                   	leave  
810078f0:	c3                   	ret    

810078f1 <__ssputs_r>:
810078f1:	55                   	push   %ebp
810078f2:	89 e5                	mov    %esp,%ebp
810078f4:	53                   	push   %ebx
810078f5:	83 ec 14             	sub    $0x14,%esp
810078f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810078fb:	8b 58 08             	mov    0x8(%eax),%ebx
810078fe:	89 d8                	mov    %ebx,%eax
81007900:	39 45 14             	cmp    %eax,0x14(%ebp)
81007903:	0f 82 3c 01 00 00    	jb     81007a45 <__ssputs_r+0x154>
81007909:	8b 45 0c             	mov    0xc(%ebp),%eax
8100790c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007910:	98                   	cwtl   
81007911:	25 80 04 00 00       	and    $0x480,%eax
81007916:	85 c0                	test   %eax,%eax
81007918:	0f 84 27 01 00 00    	je     81007a45 <__ssputs_r+0x154>
8100791e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007921:	8b 10                	mov    (%eax),%edx
81007923:	8b 45 0c             	mov    0xc(%ebp),%eax
81007926:	8b 48 10             	mov    0x10(%eax),%ecx
81007929:	89 d0                	mov    %edx,%eax
8100792b:	29 c8                	sub    %ecx,%eax
8100792d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007930:	8b 45 0c             	mov    0xc(%ebp),%eax
81007933:	8b 50 14             	mov    0x14(%eax),%edx
81007936:	89 d0                	mov    %edx,%eax
81007938:	01 c0                	add    %eax,%eax
8100793a:	01 d0                	add    %edx,%eax
8100793c:	89 c2                	mov    %eax,%edx
8100793e:	c1 ea 1f             	shr    $0x1f,%edx
81007941:	01 d0                	add    %edx,%eax
81007943:	d1 f8                	sar    %eax
81007945:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007948:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100794b:	8b 45 14             	mov    0x14(%ebp),%eax
8100794e:	01 d0                	add    %edx,%eax
81007950:	8d 50 01             	lea    0x1(%eax),%edx
81007953:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007956:	39 c2                	cmp    %eax,%edx
81007958:	76 0e                	jbe    81007968 <__ssputs_r+0x77>
8100795a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100795d:	8b 45 14             	mov    0x14(%ebp),%eax
81007960:	01 d0                	add    %edx,%eax
81007962:	83 c0 01             	add    $0x1,%eax
81007965:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007968:	8b 45 0c             	mov    0xc(%ebp),%eax
8100796b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100796f:	98                   	cwtl   
81007970:	25 00 04 00 00       	and    $0x400,%eax
81007975:	85 c0                	test   %eax,%eax
81007977:	74 5a                	je     810079d3 <__ssputs_r+0xe2>
81007979:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100797c:	83 ec 08             	sub    $0x8,%esp
8100797f:	50                   	push   %eax
81007980:	ff 75 08             	pushl  0x8(%ebp)
81007983:	e8 05 c7 ff ff       	call   8100408d <_malloc_r>
81007988:	83 c4 10             	add    $0x10,%esp
8100798b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100798e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007992:	75 0e                	jne    810079a2 <__ssputs_r+0xb1>
81007994:	8b 45 08             	mov    0x8(%ebp),%eax
81007997:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100799d:	e9 e9 00 00 00       	jmp    81007a8b <__ssputs_r+0x19a>
810079a2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810079a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810079a8:	8b 40 10             	mov    0x10(%eax),%eax
810079ab:	83 ec 04             	sub    $0x4,%esp
810079ae:	52                   	push   %edx
810079af:	50                   	push   %eax
810079b0:	ff 75 f4             	pushl  -0xc(%ebp)
810079b3:	e8 e0 cf ff ff       	call   81004998 <memcpy>
810079b8:	83 c4 10             	add    $0x10,%esp
810079bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810079be:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810079c2:	66 25 7f fb          	and    $0xfb7f,%ax
810079c6:	0c 80                	or     $0x80,%al
810079c8:	89 c2                	mov    %eax,%edx
810079ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810079cd:	66 89 50 0c          	mov    %dx,0xc(%eax)
810079d1:	eb 42                	jmp    81007a15 <__ssputs_r+0x124>
810079d3:	8b 55 f0             	mov    -0x10(%ebp),%edx
810079d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810079d9:	8b 40 10             	mov    0x10(%eax),%eax
810079dc:	83 ec 04             	sub    $0x4,%esp
810079df:	52                   	push   %edx
810079e0:	50                   	push   %eax
810079e1:	ff 75 08             	pushl  0x8(%ebp)
810079e4:	e8 01 de ff ff       	call   810057ea <_realloc_r>
810079e9:	83 c4 10             	add    $0x10,%esp
810079ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079ef:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810079f3:	75 20                	jne    81007a15 <__ssputs_r+0x124>
810079f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810079f8:	8b 40 10             	mov    0x10(%eax),%eax
810079fb:	83 ec 08             	sub    $0x8,%esp
810079fe:	50                   	push   %eax
810079ff:	ff 75 08             	pushl  0x8(%ebp)
81007a02:	e8 71 a3 ff ff       	call   81001d78 <_free_r>
81007a07:	83 c4 10             	add    $0x10,%esp
81007a0a:	8b 45 08             	mov    0x8(%ebp),%eax
81007a0d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007a13:	eb 76                	jmp    81007a8b <__ssputs_r+0x19a>
81007a15:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a18:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007a1b:	89 50 10             	mov    %edx,0x10(%eax)
81007a1e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007a21:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007a24:	01 c2                	add    %eax,%edx
81007a26:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a29:	89 10                	mov    %edx,(%eax)
81007a2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a2e:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007a31:	89 50 14             	mov    %edx,0x14(%eax)
81007a34:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007a37:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a3a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007a3d:	89 c2                	mov    %eax,%edx
81007a3f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a42:	89 50 08             	mov    %edx,0x8(%eax)
81007a45:	89 d8                	mov    %ebx,%eax
81007a47:	39 45 14             	cmp    %eax,0x14(%ebp)
81007a4a:	73 03                	jae    81007a4f <__ssputs_r+0x15e>
81007a4c:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007a4f:	89 da                	mov    %ebx,%edx
81007a51:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a54:	8b 00                	mov    (%eax),%eax
81007a56:	83 ec 04             	sub    $0x4,%esp
81007a59:	52                   	push   %edx
81007a5a:	ff 75 10             	pushl  0x10(%ebp)
81007a5d:	50                   	push   %eax
81007a5e:	e8 7d cf ff ff       	call   810049e0 <memmove>
81007a63:	83 c4 10             	add    $0x10,%esp
81007a66:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a69:	8b 40 08             	mov    0x8(%eax),%eax
81007a6c:	29 d8                	sub    %ebx,%eax
81007a6e:	89 c2                	mov    %eax,%edx
81007a70:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a73:	89 50 08             	mov    %edx,0x8(%eax)
81007a76:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a79:	8b 00                	mov    (%eax),%eax
81007a7b:	89 da                	mov    %ebx,%edx
81007a7d:	01 c2                	add    %eax,%edx
81007a7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a82:	89 10                	mov    %edx,(%eax)
81007a84:	b8 00 00 00 00       	mov    $0x0,%eax
81007a89:	eb 18                	jmp    81007aa3 <__ssputs_r+0x1b2>
81007a8b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a8e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007a92:	83 c8 40             	or     $0x40,%eax
81007a95:	89 c2                	mov    %eax,%edx
81007a97:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a9a:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007a9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007aa3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007aa6:	c9                   	leave  
81007aa7:	c3                   	ret    

81007aa8 <__ssprint_r>:
81007aa8:	55                   	push   %ebp
81007aa9:	89 e5                	mov    %esp,%ebp
81007aab:	57                   	push   %edi
81007aac:	56                   	push   %esi
81007aad:	53                   	push   %ebx
81007aae:	83 ec 2c             	sub    $0x2c,%esp
81007ab1:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007ab4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81007abb:	8b 03                	mov    (%ebx),%eax
81007abd:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007ac0:	be 00 00 00 00       	mov    $0x0,%esi
81007ac5:	8b 43 08             	mov    0x8(%ebx),%eax
81007ac8:	85 c0                	test   %eax,%eax
81007aca:	75 22                	jne    81007aee <__ssprint_r+0x46>
81007acc:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007ad3:	b8 00 00 00 00       	mov    $0x0,%eax
81007ad8:	e9 f5 01 00 00       	jmp    81007cd2 <__ssprint_r+0x22a>
81007add:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007ae0:	8b 08                	mov    (%eax),%ecx
81007ae2:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007ae5:	8b 70 04             	mov    0x4(%eax),%esi
81007ae8:	83 c0 08             	add    $0x8,%eax
81007aeb:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007aee:	85 f6                	test   %esi,%esi
81007af0:	74 eb                	je     81007add <__ssprint_r+0x35>
81007af2:	8b 45 0c             	mov    0xc(%ebp),%eax
81007af5:	8b 78 08             	mov    0x8(%eax),%edi
81007af8:	89 f8                	mov    %edi,%eax
81007afa:	39 c6                	cmp    %eax,%esi
81007afc:	0f 82 38 01 00 00    	jb     81007c3a <__ssprint_r+0x192>
81007b02:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b05:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b09:	98                   	cwtl   
81007b0a:	25 80 04 00 00       	and    $0x480,%eax
81007b0f:	85 c0                	test   %eax,%eax
81007b11:	0f 84 23 01 00 00    	je     81007c3a <__ssprint_r+0x192>
81007b17:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b1a:	8b 10                	mov    (%eax),%edx
81007b1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b1f:	8b 48 10             	mov    0x10(%eax),%ecx
81007b22:	89 d0                	mov    %edx,%eax
81007b24:	29 c8                	sub    %ecx,%eax
81007b26:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007b29:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b2c:	8b 50 14             	mov    0x14(%eax),%edx
81007b2f:	89 d0                	mov    %edx,%eax
81007b31:	01 c0                	add    %eax,%eax
81007b33:	01 d0                	add    %edx,%eax
81007b35:	89 c2                	mov    %eax,%edx
81007b37:	c1 ea 1f             	shr    $0x1f,%edx
81007b3a:	01 d0                	add    %edx,%eax
81007b3c:	d1 f8                	sar    %eax
81007b3e:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007b41:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007b44:	01 f0                	add    %esi,%eax
81007b46:	8d 50 01             	lea    0x1(%eax),%edx
81007b49:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007b4c:	39 c2                	cmp    %eax,%edx
81007b4e:	76 0b                	jbe    81007b5b <__ssprint_r+0xb3>
81007b50:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007b53:	01 f0                	add    %esi,%eax
81007b55:	83 c0 01             	add    $0x1,%eax
81007b58:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007b5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b5e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b62:	98                   	cwtl   
81007b63:	25 00 04 00 00       	and    $0x400,%eax
81007b68:	85 c0                	test   %eax,%eax
81007b6a:	74 5a                	je     81007bc6 <__ssprint_r+0x11e>
81007b6c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007b6f:	83 ec 08             	sub    $0x8,%esp
81007b72:	50                   	push   %eax
81007b73:	ff 75 08             	pushl  0x8(%ebp)
81007b76:	e8 12 c5 ff ff       	call   8100408d <_malloc_r>
81007b7b:	83 c4 10             	add    $0x10,%esp
81007b7e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007b81:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007b85:	75 0e                	jne    81007b95 <__ssprint_r+0xed>
81007b87:	8b 45 08             	mov    0x8(%ebp),%eax
81007b8a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b90:	e9 17 01 00 00       	jmp    81007cac <__ssprint_r+0x204>
81007b95:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007b98:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b9b:	8b 40 10             	mov    0x10(%eax),%eax
81007b9e:	83 ec 04             	sub    $0x4,%esp
81007ba1:	52                   	push   %edx
81007ba2:	50                   	push   %eax
81007ba3:	ff 75 e4             	pushl  -0x1c(%ebp)
81007ba6:	e8 ed cd ff ff       	call   81004998 <memcpy>
81007bab:	83 c4 10             	add    $0x10,%esp
81007bae:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bb1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007bb5:	66 25 7f fb          	and    $0xfb7f,%ax
81007bb9:	0c 80                	or     $0x80,%al
81007bbb:	89 c2                	mov    %eax,%edx
81007bbd:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bc0:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007bc4:	eb 45                	jmp    81007c0b <__ssprint_r+0x163>
81007bc6:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007bc9:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bcc:	8b 40 10             	mov    0x10(%eax),%eax
81007bcf:	83 ec 04             	sub    $0x4,%esp
81007bd2:	52                   	push   %edx
81007bd3:	50                   	push   %eax
81007bd4:	ff 75 08             	pushl  0x8(%ebp)
81007bd7:	e8 0e dc ff ff       	call   810057ea <_realloc_r>
81007bdc:	83 c4 10             	add    $0x10,%esp
81007bdf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007be2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007be6:	75 23                	jne    81007c0b <__ssprint_r+0x163>
81007be8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007beb:	8b 40 10             	mov    0x10(%eax),%eax
81007bee:	83 ec 08             	sub    $0x8,%esp
81007bf1:	50                   	push   %eax
81007bf2:	ff 75 08             	pushl  0x8(%ebp)
81007bf5:	e8 7e a1 ff ff       	call   81001d78 <_free_r>
81007bfa:	83 c4 10             	add    $0x10,%esp
81007bfd:	8b 45 08             	mov    0x8(%ebp),%eax
81007c00:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007c06:	e9 a1 00 00 00       	jmp    81007cac <__ssprint_r+0x204>
81007c0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c0e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c11:	89 50 10             	mov    %edx,0x10(%eax)
81007c14:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007c17:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007c1a:	01 c2                	add    %eax,%edx
81007c1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c1f:	89 10                	mov    %edx,(%eax)
81007c21:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c24:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007c27:	89 50 14             	mov    %edx,0x14(%eax)
81007c2a:	89 f7                	mov    %esi,%edi
81007c2c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c2f:	2b 45 dc             	sub    -0x24(%ebp),%eax
81007c32:	89 c2                	mov    %eax,%edx
81007c34:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c37:	89 50 08             	mov    %edx,0x8(%eax)
81007c3a:	89 f8                	mov    %edi,%eax
81007c3c:	39 c6                	cmp    %eax,%esi
81007c3e:	73 02                	jae    81007c42 <__ssprint_r+0x19a>
81007c40:	89 f7                	mov    %esi,%edi
81007c42:	89 fa                	mov    %edi,%edx
81007c44:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c47:	8b 00                	mov    (%eax),%eax
81007c49:	83 ec 04             	sub    $0x4,%esp
81007c4c:	52                   	push   %edx
81007c4d:	ff 75 d4             	pushl  -0x2c(%ebp)
81007c50:	50                   	push   %eax
81007c51:	e8 8a cd ff ff       	call   810049e0 <memmove>
81007c56:	83 c4 10             	add    $0x10,%esp
81007c59:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c5c:	8b 40 08             	mov    0x8(%eax),%eax
81007c5f:	29 f8                	sub    %edi,%eax
81007c61:	89 c2                	mov    %eax,%edx
81007c63:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c66:	89 50 08             	mov    %edx,0x8(%eax)
81007c69:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c6c:	8b 00                	mov    (%eax),%eax
81007c6e:	89 fa                	mov    %edi,%edx
81007c70:	01 c2                	add    %eax,%edx
81007c72:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c75:	89 10                	mov    %edx,(%eax)
81007c77:	89 f7                	mov    %esi,%edi
81007c79:	89 f8                	mov    %edi,%eax
81007c7b:	01 45 d4             	add    %eax,-0x2c(%ebp)
81007c7e:	89 f8                	mov    %edi,%eax
81007c80:	29 c6                	sub    %eax,%esi
81007c82:	8b 43 08             	mov    0x8(%ebx),%eax
81007c85:	89 fa                	mov    %edi,%edx
81007c87:	29 d0                	sub    %edx,%eax
81007c89:	89 43 08             	mov    %eax,0x8(%ebx)
81007c8c:	8b 43 08             	mov    0x8(%ebx),%eax
81007c8f:	85 c0                	test   %eax,%eax
81007c91:	0f 85 57 fe ff ff    	jne    81007aee <__ssprint_r+0x46>
81007c97:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007c9e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007ca5:	b8 00 00 00 00       	mov    $0x0,%eax
81007caa:	eb 26                	jmp    81007cd2 <__ssprint_r+0x22a>
81007cac:	8b 45 0c             	mov    0xc(%ebp),%eax
81007caf:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007cb3:	83 c8 40             	or     $0x40,%eax
81007cb6:	89 c2                	mov    %eax,%edx
81007cb8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cbb:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007cbf:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007cc6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007ccd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007cd2:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007cd5:	5b                   	pop    %ebx
81007cd6:	5e                   	pop    %esi
81007cd7:	5f                   	pop    %edi
81007cd8:	5d                   	pop    %ebp
81007cd9:	c3                   	ret    

81007cda <_svfiprintf_r>:
81007cda:	55                   	push   %ebp
81007cdb:	89 e5                	mov    %esp,%ebp
81007cdd:	57                   	push   %edi
81007cde:	56                   	push   %esi
81007cdf:	53                   	push   %ebx
81007ce0:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007ce6:	c7 45 e4 f1 78 00 81 	movl   $0x810078f1,-0x1c(%ebp)
81007ced:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cf0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007cf4:	98                   	cwtl   
81007cf5:	25 80 00 00 00       	and    $0x80,%eax
81007cfa:	85 c0                	test   %eax,%eax
81007cfc:	74 50                	je     81007d4e <_svfiprintf_r+0x74>
81007cfe:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d01:	8b 40 10             	mov    0x10(%eax),%eax
81007d04:	85 c0                	test   %eax,%eax
81007d06:	75 46                	jne    81007d4e <_svfiprintf_r+0x74>
81007d08:	83 ec 08             	sub    $0x8,%esp
81007d0b:	6a 40                	push   $0x40
81007d0d:	ff 75 08             	pushl  0x8(%ebp)
81007d10:	e8 78 c3 ff ff       	call   8100408d <_malloc_r>
81007d15:	83 c4 10             	add    $0x10,%esp
81007d18:	8b 55 0c             	mov    0xc(%ebp),%edx
81007d1b:	89 02                	mov    %eax,(%edx)
81007d1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d20:	8b 10                	mov    (%eax),%edx
81007d22:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d25:	89 50 10             	mov    %edx,0x10(%eax)
81007d28:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d2b:	8b 00                	mov    (%eax),%eax
81007d2d:	85 c0                	test   %eax,%eax
81007d2f:	75 13                	jne    81007d44 <_svfiprintf_r+0x6a>
81007d31:	8b 45 08             	mov    0x8(%ebp),%eax
81007d34:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d3a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007d3f:	e9 c8 02 00 00       	jmp    8100800c <_svfiprintf_r+0x332>
81007d44:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d47:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
81007d4e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007d51:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007d58:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007d5c:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
81007d60:	8b 45 14             	mov    0x14(%ebp),%eax
81007d63:	89 45 80             	mov    %eax,-0x80(%ebp)
81007d66:	89 de                	mov    %ebx,%esi
81007d68:	eb 03                	jmp    81007d6d <_svfiprintf_r+0x93>
81007d6a:	83 c3 01             	add    $0x1,%ebx
81007d6d:	0f b6 03             	movzbl (%ebx),%eax
81007d70:	84 c0                	test   %al,%al
81007d72:	74 07                	je     81007d7b <_svfiprintf_r+0xa1>
81007d74:	0f b6 03             	movzbl (%ebx),%eax
81007d77:	3c 25                	cmp    $0x25,%al
81007d79:	75 ef                	jne    81007d6a <_svfiprintf_r+0x90>
81007d7b:	89 d8                	mov    %ebx,%eax
81007d7d:	29 f0                	sub    %esi,%eax
81007d7f:	85 c0                	test   %eax,%eax
81007d81:	74 2b                	je     81007dae <_svfiprintf_r+0xd4>
81007d83:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007d89:	50                   	push   %eax
81007d8a:	56                   	push   %esi
81007d8b:	ff 75 0c             	pushl  0xc(%ebp)
81007d8e:	ff 75 08             	pushl  0x8(%ebp)
81007d91:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007d94:	ff d0                	call   *%eax
81007d96:	83 c4 10             	add    $0x10,%esp
81007d99:	83 f8 ff             	cmp    $0xffffffff,%eax
81007d9c:	0f 84 4a 02 00 00    	je     81007fec <_svfiprintf_r+0x312>
81007da2:	8b 45 98             	mov    -0x68(%ebp),%eax
81007da5:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007dab:	89 45 98             	mov    %eax,-0x68(%ebp)
81007dae:	0f b6 03             	movzbl (%ebx),%eax
81007db1:	84 c0                	test   %al,%al
81007db3:	0f 84 36 02 00 00    	je     81007fef <_svfiprintf_r+0x315>
81007db9:	83 c3 01             	add    $0x1,%ebx
81007dbc:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81007dc3:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007dca:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81007dd1:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007dd8:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007ddc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81007de3:	c7 45 e0 2c 8a 00 81 	movl   $0x81008a2c,-0x20(%ebp)
81007dea:	eb 1b                	jmp    81007e07 <_svfiprintf_r+0x12d>
81007dec:	8b 55 84             	mov    -0x7c(%ebp),%edx
81007def:	89 f0                	mov    %esi,%eax
81007df1:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007df4:	be 01 00 00 00       	mov    $0x1,%esi
81007df9:	89 c1                	mov    %eax,%ecx
81007dfb:	d3 e6                	shl    %cl,%esi
81007dfd:	89 f0                	mov    %esi,%eax
81007dff:	09 d0                	or     %edx,%eax
81007e01:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007e04:	83 c3 01             	add    $0x1,%ebx
81007e07:	0f b6 03             	movzbl (%ebx),%eax
81007e0a:	0f be c0             	movsbl %al,%eax
81007e0d:	83 ec 04             	sub    $0x4,%esp
81007e10:	6a 05                	push   $0x5
81007e12:	50                   	push   %eax
81007e13:	ff 75 e0             	pushl  -0x20(%ebp)
81007e16:	e8 95 ca ff ff       	call   810048b0 <memchr>
81007e1b:	83 c4 10             	add    $0x10,%esp
81007e1e:	89 c6                	mov    %eax,%esi
81007e20:	85 f6                	test   %esi,%esi
81007e22:	75 c8                	jne    81007dec <_svfiprintf_r+0x112>
81007e24:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007e27:	83 e0 10             	and    $0x10,%eax
81007e2a:	85 c0                	test   %eax,%eax
81007e2c:	74 04                	je     81007e32 <_svfiprintf_r+0x158>
81007e2e:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
81007e32:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007e35:	83 e0 08             	and    $0x8,%eax
81007e38:	85 c0                	test   %eax,%eax
81007e3a:	74 04                	je     81007e40 <_svfiprintf_r+0x166>
81007e3c:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
81007e40:	0f b6 03             	movzbl (%ebx),%eax
81007e43:	3c 2a                	cmp    $0x2a,%al
81007e45:	75 4a                	jne    81007e91 <_svfiprintf_r+0x1b7>
81007e47:	8b 45 80             	mov    -0x80(%ebp),%eax
81007e4a:	8d 50 04             	lea    0x4(%eax),%edx
81007e4d:	89 55 80             	mov    %edx,-0x80(%ebp)
81007e50:	8b 00                	mov    (%eax),%eax
81007e52:	89 45 90             	mov    %eax,-0x70(%ebp)
81007e55:	8b 45 90             	mov    -0x70(%ebp),%eax
81007e58:	85 c0                	test   %eax,%eax
81007e5a:	79 11                	jns    81007e6d <_svfiprintf_r+0x193>
81007e5c:	8b 45 90             	mov    -0x70(%ebp),%eax
81007e5f:	f7 d8                	neg    %eax
81007e61:	89 45 90             	mov    %eax,-0x70(%ebp)
81007e64:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007e67:	83 c8 02             	or     $0x2,%eax
81007e6a:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007e6d:	83 c3 01             	add    $0x1,%ebx
81007e70:	eb 2d                	jmp    81007e9f <_svfiprintf_r+0x1c5>
81007e72:	8b 55 90             	mov    -0x70(%ebp),%edx
81007e75:	89 d0                	mov    %edx,%eax
81007e77:	c1 e0 02             	shl    $0x2,%eax
81007e7a:	01 d0                	add    %edx,%eax
81007e7c:	01 c0                	add    %eax,%eax
81007e7e:	89 c2                	mov    %eax,%edx
81007e80:	0f b6 03             	movzbl (%ebx),%eax
81007e83:	0f be c0             	movsbl %al,%eax
81007e86:	83 e8 30             	sub    $0x30,%eax
81007e89:	01 d0                	add    %edx,%eax
81007e8b:	89 45 90             	mov    %eax,-0x70(%ebp)
81007e8e:	83 c3 01             	add    $0x1,%ebx
81007e91:	0f b6 03             	movzbl (%ebx),%eax
81007e94:	0f be c0             	movsbl %al,%eax
81007e97:	83 e8 30             	sub    $0x30,%eax
81007e9a:	83 f8 09             	cmp    $0x9,%eax
81007e9d:	76 d3                	jbe    81007e72 <_svfiprintf_r+0x198>
81007e9f:	0f b6 03             	movzbl (%ebx),%eax
81007ea2:	3c 2e                	cmp    $0x2e,%al
81007ea4:	75 61                	jne    81007f07 <_svfiprintf_r+0x22d>
81007ea6:	83 c3 01             	add    $0x1,%ebx
81007ea9:	0f b6 03             	movzbl (%ebx),%eax
81007eac:	3c 2a                	cmp    $0x2a,%al
81007eae:	75 21                	jne    81007ed1 <_svfiprintf_r+0x1f7>
81007eb0:	83 c3 01             	add    $0x1,%ebx
81007eb3:	8b 45 80             	mov    -0x80(%ebp),%eax
81007eb6:	8d 50 04             	lea    0x4(%eax),%edx
81007eb9:	89 55 80             	mov    %edx,-0x80(%ebp)
81007ebc:	8b 00                	mov    (%eax),%eax
81007ebe:	89 45 88             	mov    %eax,-0x78(%ebp)
81007ec1:	8b 45 88             	mov    -0x78(%ebp),%eax
81007ec4:	85 c0                	test   %eax,%eax
81007ec6:	79 3f                	jns    81007f07 <_svfiprintf_r+0x22d>
81007ec8:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81007ecf:	eb 36                	jmp    81007f07 <_svfiprintf_r+0x22d>
81007ed1:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81007ed8:	eb 1f                	jmp    81007ef9 <_svfiprintf_r+0x21f>
81007eda:	8b 55 88             	mov    -0x78(%ebp),%edx
81007edd:	89 d0                	mov    %edx,%eax
81007edf:	c1 e0 02             	shl    $0x2,%eax
81007ee2:	01 d0                	add    %edx,%eax
81007ee4:	01 c0                	add    %eax,%eax
81007ee6:	89 c2                	mov    %eax,%edx
81007ee8:	0f b6 03             	movzbl (%ebx),%eax
81007eeb:	0f be c0             	movsbl %al,%eax
81007eee:	83 e8 30             	sub    $0x30,%eax
81007ef1:	01 d0                	add    %edx,%eax
81007ef3:	89 45 88             	mov    %eax,-0x78(%ebp)
81007ef6:	83 c3 01             	add    $0x1,%ebx
81007ef9:	0f b6 03             	movzbl (%ebx),%eax
81007efc:	0f be c0             	movsbl %al,%eax
81007eff:	83 e8 30             	sub    $0x30,%eax
81007f02:	83 f8 09             	cmp    $0x9,%eax
81007f05:	76 d3                	jbe    81007eda <_svfiprintf_r+0x200>
81007f07:	c7 45 e0 32 8a 00 81 	movl   $0x81008a32,-0x20(%ebp)
81007f0e:	0f b6 03             	movzbl (%ebx),%eax
81007f11:	0f be c0             	movsbl %al,%eax
81007f14:	83 ec 04             	sub    $0x4,%esp
81007f17:	6a 03                	push   $0x3
81007f19:	50                   	push   %eax
81007f1a:	ff 75 e0             	pushl  -0x20(%ebp)
81007f1d:	e8 8e c9 ff ff       	call   810048b0 <memchr>
81007f22:	83 c4 10             	add    $0x10,%esp
81007f25:	89 c6                	mov    %eax,%esi
81007f27:	85 f6                	test   %esi,%esi
81007f29:	74 1b                	je     81007f46 <_svfiprintf_r+0x26c>
81007f2b:	8b 55 84             	mov    -0x7c(%ebp),%edx
81007f2e:	89 f0                	mov    %esi,%eax
81007f30:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007f33:	be 40 00 00 00       	mov    $0x40,%esi
81007f38:	89 c1                	mov    %eax,%ecx
81007f3a:	d3 e6                	shl    %cl,%esi
81007f3c:	89 f0                	mov    %esi,%eax
81007f3e:	09 d0                	or     %edx,%eax
81007f40:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007f43:	83 c3 01             	add    $0x1,%ebx
81007f46:	89 d8                	mov    %ebx,%eax
81007f48:	8d 58 01             	lea    0x1(%eax),%ebx
81007f4b:	0f b6 00             	movzbl (%eax),%eax
81007f4e:	88 45 9c             	mov    %al,-0x64(%ebp)
81007f51:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
81007f55:	0f be c0             	movsbl %al,%eax
81007f58:	83 ec 04             	sub    $0x4,%esp
81007f5b:	6a 06                	push   $0x6
81007f5d:	50                   	push   %eax
81007f5e:	68 36 8a 00 81       	push   $0x81008a36
81007f63:	e8 48 c9 ff ff       	call   810048b0 <memchr>
81007f68:	83 c4 10             	add    $0x10,%esp
81007f6b:	89 c6                	mov    %eax,%esi
81007f6d:	85 f6                	test   %esi,%esi
81007f6f:	74 4b                	je     81007fbc <_svfiprintf_r+0x2e2>
81007f71:	b8 00 00 00 00       	mov    $0x0,%eax
81007f76:	85 c0                	test   %eax,%eax
81007f78:	75 22                	jne    81007f9c <_svfiprintf_r+0x2c2>
81007f7a:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007f7d:	25 00 01 00 00       	and    $0x100,%eax
81007f82:	85 c0                	test   %eax,%eax
81007f84:	74 0b                	je     81007f91 <_svfiprintf_r+0x2b7>
81007f86:	8b 45 80             	mov    -0x80(%ebp),%eax
81007f89:	83 c0 0c             	add    $0xc,%eax
81007f8c:	89 45 80             	mov    %eax,-0x80(%ebp)
81007f8f:	eb 49                	jmp    81007fda <_svfiprintf_r+0x300>
81007f91:	8b 45 80             	mov    -0x80(%ebp),%eax
81007f94:	83 c0 08             	add    $0x8,%eax
81007f97:	89 45 80             	mov    %eax,-0x80(%ebp)
81007f9a:	eb 3e                	jmp    81007fda <_svfiprintf_r+0x300>
81007f9c:	83 ec 0c             	sub    $0xc,%esp
81007f9f:	8d 45 80             	lea    -0x80(%ebp),%eax
81007fa2:	50                   	push   %eax
81007fa3:	ff 75 e4             	pushl  -0x1c(%ebp)
81007fa6:	ff 75 0c             	pushl  0xc(%ebp)
81007fa9:	8d 45 84             	lea    -0x7c(%ebp),%eax
81007fac:	50                   	push   %eax
81007fad:	ff 75 08             	pushl  0x8(%ebp)
81007fb0:	e8 4b 80 ff 7e       	call   0 <show_promot-0x81000000>
81007fb5:	83 c4 20             	add    $0x20,%esp
81007fb8:	89 c7                	mov    %eax,%edi
81007fba:	eb 1e                	jmp    81007fda <_svfiprintf_r+0x300>
81007fbc:	83 ec 0c             	sub    $0xc,%esp
81007fbf:	8d 45 80             	lea    -0x80(%ebp),%eax
81007fc2:	50                   	push   %eax
81007fc3:	ff 75 e4             	pushl  -0x1c(%ebp)
81007fc6:	ff 75 0c             	pushl  0xc(%ebp)
81007fc9:	8d 45 84             	lea    -0x7c(%ebp),%eax
81007fcc:	50                   	push   %eax
81007fcd:	ff 75 08             	pushl  0x8(%ebp)
81007fd0:	e8 2c d2 ff ff       	call   81005201 <_printf_i>
81007fd5:	83 c4 20             	add    $0x20,%esp
81007fd8:	89 c7                	mov    %eax,%edi
81007fda:	83 ff ff             	cmp    $0xffffffff,%edi
81007fdd:	74 13                	je     81007ff2 <_svfiprintf_r+0x318>
81007fdf:	8b 45 98             	mov    -0x68(%ebp),%eax
81007fe2:	01 f8                	add    %edi,%eax
81007fe4:	89 45 98             	mov    %eax,-0x68(%ebp)
81007fe7:	e9 7a fd ff ff       	jmp    81007d66 <_svfiprintf_r+0x8c>
81007fec:	90                   	nop
81007fed:	eb 04                	jmp    81007ff3 <_svfiprintf_r+0x319>
81007fef:	90                   	nop
81007ff0:	eb 01                	jmp    81007ff3 <_svfiprintf_r+0x319>
81007ff2:	90                   	nop
81007ff3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ff6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007ffa:	98                   	cwtl   
81007ffb:	83 e0 40             	and    $0x40,%eax
81007ffe:	85 c0                	test   %eax,%eax
81008000:	75 05                	jne    81008007 <_svfiprintf_r+0x32d>
81008002:	8b 45 98             	mov    -0x68(%ebp),%eax
81008005:	eb 05                	jmp    8100800c <_svfiprintf_r+0x332>
81008007:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100800c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100800f:	5b                   	pop    %ebx
81008010:	5e                   	pop    %esi
81008011:	5f                   	pop    %edi
81008012:	5d                   	pop    %ebp
81008013:	c3                   	ret    

81008014 <__sputc_r>:
81008014:	55                   	push   %ebp
81008015:	89 e5                	mov    %esp,%ebp
81008017:	83 ec 08             	sub    $0x8,%esp
8100801a:	8b 45 10             	mov    0x10(%ebp),%eax
8100801d:	8b 40 08             	mov    0x8(%eax),%eax
81008020:	8d 50 ff             	lea    -0x1(%eax),%edx
81008023:	8b 45 10             	mov    0x10(%ebp),%eax
81008026:	89 50 08             	mov    %edx,0x8(%eax)
81008029:	8b 45 10             	mov    0x10(%ebp),%eax
8100802c:	8b 40 08             	mov    0x8(%eax),%eax
8100802f:	85 c0                	test   %eax,%eax
81008031:	79 17                	jns    8100804a <__sputc_r+0x36>
81008033:	8b 45 10             	mov    0x10(%ebp),%eax
81008036:	8b 50 08             	mov    0x8(%eax),%edx
81008039:	8b 45 10             	mov    0x10(%ebp),%eax
8100803c:	8b 40 18             	mov    0x18(%eax),%eax
8100803f:	39 c2                	cmp    %eax,%edx
81008041:	7c 21                	jl     81008064 <__sputc_r+0x50>
81008043:	8b 45 0c             	mov    0xc(%ebp),%eax
81008046:	3c 0a                	cmp    $0xa,%al
81008048:	74 1a                	je     81008064 <__sputc_r+0x50>
8100804a:	8b 45 10             	mov    0x10(%ebp),%eax
8100804d:	8b 00                	mov    (%eax),%eax
8100804f:	8d 48 01             	lea    0x1(%eax),%ecx
81008052:	8b 55 10             	mov    0x10(%ebp),%edx
81008055:	89 0a                	mov    %ecx,(%edx)
81008057:	8b 55 0c             	mov    0xc(%ebp),%edx
8100805a:	88 10                	mov    %dl,(%eax)
8100805c:	0f b6 00             	movzbl (%eax),%eax
8100805f:	0f b6 c0             	movzbl %al,%eax
81008062:	eb 14                	jmp    81008078 <__sputc_r+0x64>
81008064:	83 ec 04             	sub    $0x4,%esp
81008067:	ff 75 10             	pushl  0x10(%ebp)
8100806a:	ff 75 0c             	pushl  0xc(%ebp)
8100806d:	ff 75 08             	pushl  0x8(%ebp)
81008070:	e8 3a ee ff ff       	call   81006eaf <__swbuf_r>
81008075:	83 c4 10             	add    $0x10,%esp
81008078:	c9                   	leave  
81008079:	c3                   	ret    

8100807a <_putc_r>:
8100807a:	55                   	push   %ebp
8100807b:	89 e5                	mov    %esp,%ebp
8100807d:	53                   	push   %ebx
8100807e:	83 ec 14             	sub    $0x14,%esp
81008081:	8b 5d 10             	mov    0x10(%ebp),%ebx
81008084:	8b 45 08             	mov    0x8(%ebp),%eax
81008087:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100808a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100808e:	74 18                	je     810080a8 <_putc_r+0x2e>
81008090:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008093:	8b 40 38             	mov    0x38(%eax),%eax
81008096:	85 c0                	test   %eax,%eax
81008098:	75 0e                	jne    810080a8 <_putc_r+0x2e>
8100809a:	83 ec 0c             	sub    $0xc,%esp
8100809d:	ff 75 f4             	pushl  -0xc(%ebp)
810080a0:	e8 1e 97 ff ff       	call   810017c3 <__sinit>
810080a5:	83 c4 10             	add    $0x10,%esp
810080a8:	83 ec 04             	sub    $0x4,%esp
810080ab:	53                   	push   %ebx
810080ac:	ff 75 0c             	pushl  0xc(%ebp)
810080af:	ff 75 08             	pushl  0x8(%ebp)
810080b2:	e8 5d ff ff ff       	call   81008014 <__sputc_r>
810080b7:	83 c4 10             	add    $0x10,%esp
810080ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
810080bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810080c0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810080c3:	c9                   	leave  
810080c4:	c3                   	ret    

810080c5 <putc>:
810080c5:	55                   	push   %ebp
810080c6:	89 e5                	mov    %esp,%ebp
810080c8:	53                   	push   %ebx
810080c9:	83 ec 14             	sub    $0x14,%esp
810080cc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810080cf:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810080d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810080d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810080da:	89 45 f0             	mov    %eax,-0x10(%ebp)
810080dd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810080e1:	74 18                	je     810080fb <putc+0x36>
810080e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810080e6:	8b 40 38             	mov    0x38(%eax),%eax
810080e9:	85 c0                	test   %eax,%eax
810080eb:	75 0e                	jne    810080fb <putc+0x36>
810080ed:	83 ec 0c             	sub    $0xc,%esp
810080f0:	ff 75 f0             	pushl  -0x10(%ebp)
810080f3:	e8 cb 96 ff ff       	call   810017c3 <__sinit>
810080f8:	83 c4 10             	add    $0x10,%esp
810080fb:	83 ec 04             	sub    $0x4,%esp
810080fe:	53                   	push   %ebx
810080ff:	ff 75 08             	pushl  0x8(%ebp)
81008102:	ff 75 f4             	pushl  -0xc(%ebp)
81008105:	e8 0a ff ff ff       	call   81008014 <__sputc_r>
8100810a:	83 c4 10             	add    $0x10,%esp
8100810d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81008110:	8b 45 ec             	mov    -0x14(%ebp),%eax
81008113:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81008116:	c9                   	leave  
81008117:	c3                   	ret    

81008118 <_read_r>:
81008118:	55                   	push   %ebp
81008119:	89 e5                	mov    %esp,%ebp
8100811b:	83 ec 18             	sub    $0x18,%esp
8100811e:	c7 05 cc 99 00 81 00 	movl   $0x0,0x810099cc
81008125:	00 00 00 
81008128:	83 ec 04             	sub    $0x4,%esp
8100812b:	ff 75 14             	pushl  0x14(%ebp)
8100812e:	ff 75 10             	pushl  0x10(%ebp)
81008131:	ff 75 0c             	pushl  0xc(%ebp)
81008134:	e8 2f 8a ff ff       	call   81000b68 <read>
81008139:	83 c4 10             	add    $0x10,%esp
8100813c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100813f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008143:	75 14                	jne    81008159 <_read_r+0x41>
81008145:	a1 cc 99 00 81       	mov    0x810099cc,%eax
8100814a:	85 c0                	test   %eax,%eax
8100814c:	74 0b                	je     81008159 <_read_r+0x41>
8100814e:	8b 15 cc 99 00 81    	mov    0x810099cc,%edx
81008154:	8b 45 08             	mov    0x8(%ebp),%eax
81008157:	89 10                	mov    %edx,(%eax)
81008159:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100815c:	c9                   	leave  
8100815d:	c3                   	ret    

8100815e <strncmp>:
8100815e:	55                   	push   %ebp
8100815f:	89 e5                	mov    %esp,%ebp
81008161:	83 ec 10             	sub    $0x10,%esp
81008164:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008168:	75 0a                	jne    81008174 <strncmp+0x16>
8100816a:	b8 00 00 00 00       	mov    $0x0,%eax
8100816f:	e9 cb 00 00 00       	jmp    8100823f <strncmp+0xe1>
81008174:	8b 55 08             	mov    0x8(%ebp),%edx
81008177:	8b 45 0c             	mov    0xc(%ebp),%eax
8100817a:	09 d0                	or     %edx,%eax
8100817c:	83 e0 03             	and    $0x3,%eax
8100817f:	85 c0                	test   %eax,%eax
81008181:	0f 85 85 00 00 00    	jne    8100820c <strncmp+0xae>
81008187:	8b 45 08             	mov    0x8(%ebp),%eax
8100818a:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100818d:	8b 45 0c             	mov    0xc(%ebp),%eax
81008190:	89 45 f8             	mov    %eax,-0x8(%ebp)
81008193:	eb 36                	jmp    810081cb <strncmp+0x6d>
81008195:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81008199:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100819d:	74 1d                	je     810081bc <strncmp+0x5e>
8100819f:	8b 45 fc             	mov    -0x4(%ebp),%eax
810081a2:	8b 00                	mov    (%eax),%eax
810081a4:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810081aa:	8b 45 fc             	mov    -0x4(%ebp),%eax
810081ad:	8b 00                	mov    (%eax),%eax
810081af:	f7 d0                	not    %eax
810081b1:	21 d0                	and    %edx,%eax
810081b3:	25 80 80 80 80       	and    $0x80808080,%eax
810081b8:	85 c0                	test   %eax,%eax
810081ba:	74 07                	je     810081c3 <strncmp+0x65>
810081bc:	b8 00 00 00 00       	mov    $0x0,%eax
810081c1:	eb 7c                	jmp    8100823f <strncmp+0xe1>
810081c3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810081c7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810081cb:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810081cf:	76 0e                	jbe    810081df <strncmp+0x81>
810081d1:	8b 45 fc             	mov    -0x4(%ebp),%eax
810081d4:	8b 10                	mov    (%eax),%edx
810081d6:	8b 45 f8             	mov    -0x8(%ebp),%eax
810081d9:	8b 00                	mov    (%eax),%eax
810081db:	39 c2                	cmp    %eax,%edx
810081dd:	74 b6                	je     81008195 <strncmp+0x37>
810081df:	8b 45 fc             	mov    -0x4(%ebp),%eax
810081e2:	89 45 08             	mov    %eax,0x8(%ebp)
810081e5:	8b 45 f8             	mov    -0x8(%ebp),%eax
810081e8:	89 45 0c             	mov    %eax,0xc(%ebp)
810081eb:	eb 1f                	jmp    8100820c <strncmp+0xae>
810081ed:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810081f1:	74 0a                	je     810081fd <strncmp+0x9f>
810081f3:	8b 45 08             	mov    0x8(%ebp),%eax
810081f6:	0f b6 00             	movzbl (%eax),%eax
810081f9:	84 c0                	test   %al,%al
810081fb:	75 07                	jne    81008204 <strncmp+0xa6>
810081fd:	b8 00 00 00 00       	mov    $0x0,%eax
81008202:	eb 3b                	jmp    8100823f <strncmp+0xe1>
81008204:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81008208:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100820c:	8b 45 10             	mov    0x10(%ebp),%eax
8100820f:	8d 50 ff             	lea    -0x1(%eax),%edx
81008212:	89 55 10             	mov    %edx,0x10(%ebp)
81008215:	85 c0                	test   %eax,%eax
81008217:	74 10                	je     81008229 <strncmp+0xcb>
81008219:	8b 45 08             	mov    0x8(%ebp),%eax
8100821c:	0f b6 10             	movzbl (%eax),%edx
8100821f:	8b 45 0c             	mov    0xc(%ebp),%eax
81008222:	0f b6 00             	movzbl (%eax),%eax
81008225:	38 c2                	cmp    %al,%dl
81008227:	74 c4                	je     810081ed <strncmp+0x8f>
81008229:	8b 45 08             	mov    0x8(%ebp),%eax
8100822c:	0f b6 00             	movzbl (%eax),%eax
8100822f:	0f b6 d0             	movzbl %al,%edx
81008232:	8b 45 0c             	mov    0xc(%ebp),%eax
81008235:	0f b6 00             	movzbl (%eax),%eax
81008238:	0f b6 c8             	movzbl %al,%ecx
8100823b:	89 d0                	mov    %edx,%eax
8100823d:	29 c8                	sub    %ecx,%eax
8100823f:	c9                   	leave  
81008240:	c3                   	ret    

81008241 <__get_global_locale>:
81008241:	55                   	push   %ebp
81008242:	89 e5                	mov    %esp,%ebp
81008244:	b8 c0 92 00 81       	mov    $0x810092c0,%eax
81008249:	5d                   	pop    %ebp
8100824a:	c3                   	ret    

8100824b <__get_current_locale>:
8100824b:	55                   	push   %ebp
8100824c:	89 e5                	mov    %esp,%ebp
8100824e:	e8 ee ff ff ff       	call   81008241 <__get_global_locale>
81008253:	5d                   	pop    %ebp
81008254:	c3                   	ret    

81008255 <_wcrtomb_r>:
81008255:	55                   	push   %ebp
81008256:	89 e5                	mov    %esp,%ebp
81008258:	83 ec 18             	sub    $0x18,%esp
8100825b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81008262:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81008266:	75 21                	jne    81008289 <_wcrtomb_r+0x34>
81008268:	e8 de ff ff ff       	call   8100824b <__get_current_locale>
8100826d:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008273:	ff 75 14             	pushl  0x14(%ebp)
81008276:	6a 00                	push   $0x0
81008278:	8d 55 ea             	lea    -0x16(%ebp),%edx
8100827b:	52                   	push   %edx
8100827c:	ff 75 08             	pushl  0x8(%ebp)
8100827f:	ff d0                	call   *%eax
81008281:	83 c4 10             	add    $0x10,%esp
81008284:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008287:	eb 1f                	jmp    810082a8 <_wcrtomb_r+0x53>
81008289:	e8 bd ff ff ff       	call   8100824b <__get_current_locale>
8100828e:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008294:	ff 75 14             	pushl  0x14(%ebp)
81008297:	ff 75 10             	pushl  0x10(%ebp)
8100829a:	ff 75 0c             	pushl  0xc(%ebp)
8100829d:	ff 75 08             	pushl  0x8(%ebp)
810082a0:	ff d0                	call   *%eax
810082a2:	83 c4 10             	add    $0x10,%esp
810082a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810082a8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810082ac:	75 19                	jne    810082c7 <_wcrtomb_r+0x72>
810082ae:	8b 45 14             	mov    0x14(%ebp),%eax
810082b1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810082b7:	8b 45 08             	mov    0x8(%ebp),%eax
810082ba:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810082c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810082c5:	eb 03                	jmp    810082ca <_wcrtomb_r+0x75>
810082c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810082ca:	c9                   	leave  
810082cb:	c3                   	ret    

810082cc <wcrtomb>:
810082cc:	55                   	push   %ebp
810082cd:	89 e5                	mov    %esp,%ebp
810082cf:	83 ec 28             	sub    $0x28,%esp
810082d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810082d9:	a1 84 8e 00 81       	mov    0x81008e84,%eax
810082de:	89 45 f0             	mov    %eax,-0x10(%ebp)
810082e1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810082e5:	75 21                	jne    81008308 <wcrtomb+0x3c>
810082e7:	e8 5f ff ff ff       	call   8100824b <__get_current_locale>
810082ec:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810082f2:	ff 75 10             	pushl  0x10(%ebp)
810082f5:	6a 00                	push   $0x0
810082f7:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810082fa:	52                   	push   %edx
810082fb:	ff 75 f0             	pushl  -0x10(%ebp)
810082fe:	ff d0                	call   *%eax
81008300:	83 c4 10             	add    $0x10,%esp
81008303:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008306:	eb 1f                	jmp    81008327 <wcrtomb+0x5b>
81008308:	e8 3e ff ff ff       	call   8100824b <__get_current_locale>
8100830d:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008313:	ff 75 10             	pushl  0x10(%ebp)
81008316:	ff 75 0c             	pushl  0xc(%ebp)
81008319:	ff 75 08             	pushl  0x8(%ebp)
8100831c:	ff 75 f0             	pushl  -0x10(%ebp)
8100831f:	ff d0                	call   *%eax
81008321:	83 c4 10             	add    $0x10,%esp
81008324:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008327:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100832b:	75 19                	jne    81008346 <wcrtomb+0x7a>
8100832d:	8b 45 10             	mov    0x10(%ebp),%eax
81008330:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81008336:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008339:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100833f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008344:	eb 03                	jmp    81008349 <wcrtomb+0x7d>
81008346:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008349:	c9                   	leave  
8100834a:	c3                   	ret    

8100834b <__get_global_locale>:
8100834b:	55                   	push   %ebp
8100834c:	89 e5                	mov    %esp,%ebp
8100834e:	b8 c0 92 00 81       	mov    $0x810092c0,%eax
81008353:	5d                   	pop    %ebp
81008354:	c3                   	ret    

81008355 <__get_current_locale>:
81008355:	55                   	push   %ebp
81008356:	89 e5                	mov    %esp,%ebp
81008358:	e8 ee ff ff ff       	call   8100834b <__get_global_locale>
8100835d:	5d                   	pop    %ebp
8100835e:	c3                   	ret    

8100835f <_wctomb_r>:
8100835f:	55                   	push   %ebp
81008360:	89 e5                	mov    %esp,%ebp
81008362:	83 ec 08             	sub    $0x8,%esp
81008365:	e8 eb ff ff ff       	call   81008355 <__get_current_locale>
8100836a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008370:	ff 75 14             	pushl  0x14(%ebp)
81008373:	ff 75 10             	pushl  0x10(%ebp)
81008376:	ff 75 0c             	pushl  0xc(%ebp)
81008379:	ff 75 08             	pushl  0x8(%ebp)
8100837c:	ff d0                	call   *%eax
8100837e:	83 c4 10             	add    $0x10,%esp
81008381:	c9                   	leave  
81008382:	c3                   	ret    

81008383 <__ascii_wctomb>:
81008383:	55                   	push   %ebp
81008384:	89 e5                	mov    %esp,%ebp
81008386:	83 ec 10             	sub    $0x10,%esp
81008389:	8b 45 10             	mov    0x10(%ebp),%eax
8100838c:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100838f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81008393:	75 07                	jne    8100839c <__ascii_wctomb+0x19>
81008395:	b8 00 00 00 00       	mov    $0x0,%eax
8100839a:	eb 28                	jmp    810083c4 <__ascii_wctomb+0x41>
8100839c:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810083a3:	76 10                	jbe    810083b5 <__ascii_wctomb+0x32>
810083a5:	8b 45 08             	mov    0x8(%ebp),%eax
810083a8:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810083ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810083b3:	eb 0f                	jmp    810083c4 <__ascii_wctomb+0x41>
810083b5:	8b 45 fc             	mov    -0x4(%ebp),%eax
810083b8:	89 c2                	mov    %eax,%edx
810083ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810083bd:	88 10                	mov    %dl,(%eax)
810083bf:	b8 01 00 00 00       	mov    $0x1,%eax
810083c4:	c9                   	leave  
810083c5:	c3                   	ret    

810083c6 <__env_lock>:
810083c6:	55                   	push   %ebp
810083c7:	89 e5                	mov    %esp,%ebp
810083c9:	90                   	nop
810083ca:	5d                   	pop    %ebp
810083cb:	c3                   	ret    

810083cc <__env_unlock>:
810083cc:	55                   	push   %ebp
810083cd:	89 e5                	mov    %esp,%ebp
810083cf:	90                   	nop
810083d0:	5d                   	pop    %ebp
810083d1:	c3                   	ret    
